l_russian:
 ##################################################
 ##Misc
 from_diarch_domain_limit_bonus: "Поддержка [Concept( 'regent', 'регента' )|E]"
 from_diarch_monthly_influence_bonus: "Преимущества от [Concept( 'co_emperor', 'императора-соправителя' )|E]"
 to_diarch_monthly_influence_add_bonus: "Преимущества от [Concept('duumvirate', 'дуумвирата')|E]"
 from_co_monarch_diplomacy_vassal_opinion: "Преимущества от [Concept('co_monarch', 'монарха-соправителя')|E]"
 to_co_monarch_monthly_prestige_add_bonus: "Преимущества от [Concept('co_monarchy', 'совместной монархии')|E]"
 imprisonment_would_cause_regency_trigger.tt.imprisoned_abroad: "Вы [Concept( 'imprisoned', 'в заключении' )|E] за границей"
 DIARCHY_TEMPORARY_OR_DESIGNATED_REGENT_WEDDING_ACCEPTANCE: "Надежный [Concept( 'regent', 'регент' )|E]: $VALUE|=+0$"
 DIARCHY_ENTRENCHED_REGENT_WEDDING_ACCEPTANCE: "[Concept( 'scales_of_power', 'Равновесие сил' )|E]: $VALUE|=+0$"
 remove_strife_per_invited_powerful_vassal_effect.tt: "[host.GetShortUIName|U] [Select_CString(host.IsFemale, 'потеряла', 'потерял' )] #P [host.MakeScope.Var('strife_loss_total').GetValue|0]#! [Concept( 'strife', 'недовольства' )|E] из-за присутствия [Concept( 'powerful_vassals', 'могущественных вассалов' )|E] из владения [host.GetLiege.GetPrimaryTitle.GetBaseName]"
 family_member_is_civil_servant: "[family_member|E] является чиновником"
 civil_servant_salary_and_corruption: "Обогащение чиновника"
 regency_for_personal_reasons_trigger.tt.cannot_govern_by_themselves: "Не могут править самостоятельно"
 SPACE4: "    "
 ##################################################
 ##Swing Update Strings
 update_diarchy_swing_with_perspective_effect.preamble: "[scales_of_power|E] в диархии «[liege_loc.GetDiarchyTypeName]» [Select_CString(liege_loc.IsLocalPlayer, '', 'персонажа ' )][liege_loc.GetNamePossessiveOrMy][Select_CString(liege_loc.IsLocalPlayer, 'его персонажа', '' )] смещается на"
 update_diarchy_swing_with_perspective_effect.postamble.diarch: "#!от чего в выигрыше [liege_loc.GetDiarchy.GetDiarch.GetShortUIName]"
 update_diarchy_swing_with_perspective_effect.postamble.liege: "#!от чего в выигрыше [liege_loc.GetShortUIName]"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#!, $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#!"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 ##################################################
 ##Invalid Strings
 ## Nouns
 invalid_child: "ребенок"
 invalid_incapable: "[GetTrait('incapable').GetName( GetNullCharacter )]"
 invalid_helpless: "немощный"
 ## Possessive Nouns
 invalid_child_possessive: "ребенка"
 invalid_incapable_possessive: "[GetTrait('incapable').GetName( GetNullCharacter )]'s"
 invalid_helpless_possessive: "немощного"
 ##################################################
 ##Diarchy Types
 temporary_regency_diarchy_type: "[regency|E]"
 temporary_regency_diarch_title: "$regency_diarch_title$"
 regency_diarchy_type: "[entrenched_regency|E]"
 regency_diarch_title: "Регент"
 vizierate_diarchy_type: "[Concept( 'vizierate', 'Визирство' )|E]"
 vizierate_diarch_title: "Визирь"
 junior_emperorship_diarchy_type: "[Concept( 'nominal_duumvirate', 'Номинальный дуумвират' )|E]"
 junior_emperorship_diarch_title: "Номинальный император-соправитель"
 co_emperorship_diarchy_type: "[Concept( 'duumvirate', 'Дуумвират' )|E]"
 co_emperorship_diarch_title: "Император-соправитель"
 co_monarchy_diarchy_type: "[Concept( 'co_monarchy', 'Монархи-соправители' )|E]"
 co_monarchy_diarch_title: "[Concept( 'co_monarch', 'Монарх-соправитель' )|E]"
 nomad_regency_diarchy_type: "[Concept('regency', 'Регентство')|E] у [Concept('nomadic', 'кочевников')|E]"
 nomad_regency_diarch_title: "$regency_diarch_title$"
 ##################################################
 ##Mandates
 fill_coffers_mandate: "Наполнить сундуки"
 fill_coffers_mandate_desc: "#BOL Возможные эффекты [Concept('mandate', 'мандата')|E]:#!\n$EFFECT_LIST_BULLET$Дополнительное [Concept('gold', 'золото')|E]\n$EFFECT_LIST_BULLET$Бесплатное [Concept('development', 'развитие')|E] [Concept('domain', 'домена')|E]\n$EFFECT_LIST_BULLET$Пересмотр [Concept('vassal_contracts', 'вассальных договоров')|E] в пользу [Concept('liege', 'сюзерена')|E]\n\n#WEAK [Concept('regent', 'Регент')|E] получает указание повысить доходы сюзерена любой ценой.#!"
 swell_armies_mandate: "Усилить армии"
 swell_armies_mandate_desc: "#BOL Возможные эффекты [Concept( 'mandate', 'мандата' )|E]:#!\n$EFFECT_LIST_BULLET$ Положительные [Concept( 'modifiers', 'модификаторы' )|E] [Concept( 'men_at_arms', 'профессионалов' )|E]\n$EFFECT_LIST_BULLET$ Положительные модификаторы [Concept('levy', 'ополчения')|E]\n$EFFECT_LIST_BULLET$ Умелые [Concept( 'knights', 'рыцари' )|E] [Concept( 'courtiers', 'при дворе' )|E]\n\n#WEAK Текущие и будущие кампании требуют свежих воинов, и [liege|El] приказывает [Concept( 'regent', 'регенту' )|E] найти их.#!"
 promote_authority_mandate: "Поддержать власть"
 promote_authority_mandate_desc: "#BOL Возможные эффекты [Concept( 'mandate', 'мандата' )|E]:#!\n$EFFECT_LIST_BULLET$ Выход [Concept( 'characters', 'персонажей' )|E] и [Concept( 'counties', 'графств' )|E] из [Concept( 'factions', 'фракций' )|E]\n$EFFECT_LIST_BULLET$ Укрепление [Concept( 'crown_authority', 'авторитета короны' )|E]\n$EFFECT_LIST_BULLET$ Улучшение [Concept( 'opinion', 'мнения' )|E] [Concept( 'councillor', 'советника' )|E]\n\n#WEAK [Concept( 'liege', 'Сюзерен' )|E] призывает [Concept( 'regent', 'регента' )|E] помочь с укреплением власти.#!"
 mandate_aptitude.fill_coffers.category: "$fill_coffers_mandate$"
 mandate_aptitude.fill_coffers.primary_skill.stewardship: "[Concept( 'mandate', 'мандат' )|E] зависит от [Concept( 'stewardship', 'управления' )|E]"
 mandate_aptitude.fill_coffers.secondary_skill.learning: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'learning', 'ученость' )|E]"
 mandate_aptitude.fill_coffers.secondary_skill.intrigue: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'intrigue', 'интригу' )]"
 mandate_aptitude.fill_coffers.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.fill_coffers.bonus_trait.callous: "[GetTrait('callous').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.fill_coffers.malus_trait.generous: "[GetTrait('generous').GetName( ROOT.Char )] не подходит"
 mandate_aptitude.fill_coffers.malus_trait.greedy: "[GetTrait('greedy').GetName( ROOT.Char )] не подходит"
 mandate_aptitude.swell_armies.category: "$swell_armies_mandate$"
 mandate_aptitude.swell_armies.primary_skill.martial: "[Concept( 'mandate', 'мандат' )|E] зависит от [Concept( 'martial', 'военного дела' )|E]"
 mandate_aptitude.swell_armies.secondary_skill.prowess: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'prowess', 'доблесть' )|E]"
 mandate_aptitude.swell_armies.secondary_skill.diplomacy: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'diplomacy', 'дипломатию' )|E]"
 mandate_aptitude.swell_armies.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.swell_armies.bonus_trait.gregarious: "[GetTrait('gregarious').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.swell_armies.malus_trait.just: "[GetTrait('just').GetName( ROOT.Char )] не подходит"
 mandate_aptitude.swell_armies.malus_trait.shy: "[GetTrait('shy').GetName( ROOT.Char )] не подходит"
 mandate_aptitude.promote_authority.category: "$promote_authority_mandate$"
 mandate_aptitude.promote_authority.primary_skill.diplomacy: "[Concept( 'mandate', 'мандат' )|E] зависит от [Concept( 'diplomacy', 'дипломатии' )|E]"
 mandate_aptitude.promote_authority.secondary_skill.martial: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'martial', 'военное дело' )|E]"
 mandate_aptitude.promote_authority.secondary_skill.learning: "[Concept( 'mandate', 'мандат' )|E] задействует [Concept( 'learning', 'ученость' )|E]"
 mandate_aptitude.promote_authority.bonus_trait.calm: "[GetTrait('calm').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.promote_authority.bonus_trait.just: "[GetTrait('just').GetName( ROOT.Char )] преобладает"
 mandate_aptitude.promote_authority.malus_trait.wrathful: "[GetTrait('wrathful').GetName( ROOT.Char )] без надежды"
 mandate_aptitude.promote_authority.malus_trait.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )] без надежды"
 ranching_mandate: "Животноводство"
 ranching_mandate_desc: "#BOL Возможные эффекты [Concept('mandate', 'мандата')|E]:#!\n$EFFECT_LIST_BULLET$Дополнительные [Concept('herd', 'стада')|E]\n$EFFECT_LIST_BULLET$Бесплатная [Concept('fertility', 'тучность')|E] [Concept('county', 'графств')|E]\n$EFFECT_LIST_BULLET$Пересмотр [Concept('vassal_contracts', 'вассальных договоров')|E] в пользу [Concept('liege', 'сюзерена')|E]\n\n#WEAK [Concept('regent', 'Регент')|E] получает указание повысить доходы сюзерена любой ценой.#!"
 horde_mustering_mandate: "Сборы орды"
 horde_mustering_mandate_desc: "#BOL Возможные эффекты [Concept('mandate','мандата')|E]:#!\n$EFFECT_LIST_BULLET$ Положительные [Concept('modifiers','модификаторы')|E] [Concept('men_at_arms','профессионалов')|E]\n$EFFECT_LIST_BULLET$ Положительные модификаторы [Concept('levy','ополчения')|E]\n$EFFECT_LIST_BULLET$ Умелые [Concept('knights','рыцари')|E] [Concept('courtiers','при дворе')|E]\n\n#WEAK Текущие и будущие кампании требуют свежих воинов, и [Concept('liege','сюзерен')|E] приказывает [Concept('regent','регенту')|E] найти их.#!"
 promote_obedience_mandate: "Повышение покорности"
 promote_obedience_mandate_desc: "#BOL Возможные эффекты [Concept('mandate', 'мандата')|E]:#!\n$EFFECT_LIST_BULLET$ Выход [Concept('characters', 'персонажей')|E] и [Concept('counties', 'графств')|E] из [Concept('factions', 'фракций')|E]\n$EFFECT_LIST_BULLET$ Укрепление [Concept('crown_authority', 'авторитета короны')|E]\n$EFFECT_LIST_BULLET$ Улучшение [Concept('opinion', 'мнения')|E] [Concept('councillor', 'советника')|E]\n\n#WEAK [Concept('liege', 'Сюзерен')|E] призывает [Concept('regent', 'регента')|E] помочь с укреплением власти.#!"
 mandate_aptitude.ranching.category: "$ranching_mandate$"
 mandate_aptitude.horde_mustering.category: "$horde_mustering_mandate$"
 mandate_aptitude.promote_obedience.category: "$promote_obedience_mandate$"
 mandate_aptitude.nomadic_regency.generic_score.no_nomadic_philosophy: "Отсутствует свойство «[GetTrait('nomadic_philosophy').GetName( ROOT.Char )]»"
 nomadic_regency_disliked: "Не одобряет правителей в [Concept('regency', 'регентстве')|E]"
 ##################################################
 ##Parameters
 diarchy_is_regency: "[Concept( 'diarchy', 'Диархия' )|E] — это [Concept( 'regency', 'регентство' )|E]"
 unlock_diarch_imprison_interaction: "[diarch|E] может попытаться [Concept( 'imprison', 'заточить в темницу' )|E] своих собратьев-[Concept( 'vassals', 'вассалов' )|E] и [Concept( 'courtiers', 'придворных' )|E] в пределах [Concept( 'realm', 'державы' )|E] [Concept( 'liege', 'сюзерена' )|E]"
 unlock_diarch_revoke_title_interaction: "[diarch|E] может попытаться [Concept( 'revoke', 'отнять' )|E] [titles|El] других [Concept( 'vassals', 'вассалов' )|E]"
 unlock_diarch_retract_vassal_interaction: "[diarch|E] может попытаться [Concept( 'retract', 'отозвать' )|E] [Concept( 'vassals', 'вассалов' )|E] [Concept( 'title_tier', 'рангом' )|E] ниже своего у других [Concept( 'vassals', 'вассалов' )|E]"
 diarch_can_subsidise_liege_authority: "[Concept( 'diarchs', 'Диархи' )|E] могут предложить увеличить [Concept( 'crown_authority', 'авторитет короны' )|E], [Concept( 'tribal_authority', 'авторитет вождя' )|E] или [Concept( 'imperial_bureaucracy', 'уровень имперской бюрократии' )|E] своего [Concept( 'liege', 'сюзерена' )|E], покрыв расходы и штрафы к [Concept( 'opinion', 'мнению' )|E]"
 unlock_syphon_treasury_interaction: "[diarch|E] может попытаться присвоить [gold|El] своего [Concept( 'liege', 'сюзерена' )|E]"
 unlock_shift_privileges_interaction: "[diarch|E] может попытаться дать отрицательные [county_modifiers|El] собратьям-[Concept( 'vassals', 'вассалам' )|E] и получить [gold|El] в случае успеха"
 unlock_legal_meddling_interaction: "[diarch|E] может попытаться мгновенно создать [claims|El] на [titles|El] своих собратьев-[Concept( 'vassals', 'вассалов' )|E]"
 unlock_entrench_regency_interaction: "[diarch|E] может [Concept( 'entrenched_regency_entrench', 'укоренить' )|E] свое [regency|El], что затруднит отстранение от власти и даст доступ к дополнительным [Concept( 'diarch_powers', 'полномочиям' )|E]"
 unlock_mulct_vizier_interaction: "#P [lieges|E] могут принуждать своих [Concept( 'diarch', 'диархов' )|E] передавать им [gold_i][Concept( 'gold', 'золото' )|E] через [Concept( 'interaction', 'взаимодействие' )|E] «$mulct_vizier_interaction$»#!"
 lieges_swing_more_against_diarchs: "[lieges|E] могут смещать равновесие сил в свою сторону сильнее обычного #WEAK (при использовании [Concept( 'interaction', 'взаимодействия' )|E])#!"
 regents_can_try_to_overthrow_present_lieges: "[Concept( 'diarchs', 'Диархи' )|E] могут предъявить [Concept( 'liege', 'сюзерену' )|E] ультиматум и потребовать полной передачи власти, #EMP если#! смогут убедить большинство [Concept( 'powerful_vassals', 'могущественных вассалов' )|E] сюзерена поддержать переворот"
 regents_can_try_to_overthrow_present_lieges_help: "Чтобы устроить государственный переворот, нужно принять [Concept( 'decision', 'решение' )|E], а пригласить [Concept( 'powerful_vassals', 'могущественных вассалов' )|E] можно через меню [Concept( 'character_interaction', 'взаимодействия персонажа' )|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_mild: "[Concept( 'liege', 'Сюзерен' )|E] тратит символическое количество #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_miniscule_value')|0] или больше)#! [Concept( 'prestige', 'престижа' )|E] на [Concept( 'diarch_affected_actions', 'обычные действия' )|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_medium: "[Concept( 'liege', 'Сюзерен' )|E] тратит некоторое количество #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_minor_value')|0] или больше)#! [Concept( 'prestige', 'престижа' )|E] на [Concept( 'diarch_affected_actions', 'обычные действия' )|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_major: "[Concept( 'liege', 'Сюзерен' )|E] тратит значительное количество #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_medium_value')|0] или больше)#! [Concept( 'prestige', 'престижа' )|E] на [Concept( 'diarch_affected_actions', 'обычные действия' )|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_massive: "[Concept( 'liege', 'Сюзерен' )|E] тратит огромное количество #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_major_value')|0] или больше)#! [Concept( 'prestige', 'престижа' )|E] на [Concept( 'diarch_affected_actions', 'обычные действия' )|E]"
 can_be_instantly_dismissed: "Это [regency|El] можно закончить в любой момент после обретения [Concept( 'liege', 'сюзереном' )|El] полной дееспособности"
 dismissal_requires_gift: "[Concept( 'entrenched_regencies', 'Укоренившемуся регенту' )|E] можно отправить подарок, чтобы попытаться отстранить его"
 regency_free_end_below_this_point: "[entrenched_regency|E] можно прекратить только с согласия [Concept( 'regent_possessive', 'регента' )|E]"
 regency_cant_be_ended_above_this_point: "[liege|E] не может отстранить своего [Concept( 'regent', 'регента' )|E]"
 diarch_gets_a_free_change_on_vassal_contract: "[Concept( 'diarchs', 'Диархи' )|E] получают дополнительную возможность бесплатно изменить условие [Concept( 'vassal_contract', 'вассального договора' )|E], если это еще возможно #WEAK (соразмерно применению [Concept( 'hook', 'влияния' )|E] на сюзерена)#!"
 primeminister_dismissal_will_upset_administration: "[Concept( 'diarch', 'Диарха' )|E] можно снять с должности, но это наложит #N негативный#! [Concept( 'modifier', 'модификатор' )|E] на [Concept( 'stewardship', 'управление' )|E] и [Concept( 'income', 'доход' )|E] в зависимости от текущего [Concept( 'scales_of_power', 'равновесия сил' )|E]"
 primeminister_requires_county: "[Concept( 'diarchy', 'Наделение полномочиями' )|E] можно прекратить без негативных [Concept( 'modifiers', 'модификаторов' )|E], дав [Concept( 'diarch', 'диарху' )|E] хотя бы [Concept( 'county', 'графство' )|E]"
 primeminister_requires_duchy: "[Concept( 'diarchy', 'Наделение полномочиями' )|E] можно прекратить без негативных [Concept( 'modifiers', 'модификаторов' )|E], дав [Concept( 'diarch', 'диарху' )|E] хотя бы [Concept( 'duchy', 'герцогство' )|E]"
 primeminister_requires_duchy.tt.blocked_grant: "Ваше текущее [Concept( 'scales_of_power', 'равновесие сил' )|E] требует дать персонажу [recipient.GetFirstName] [Concept( 'title', 'титул' )|E] не ниже [Concept( 'duchy', 'герцогского' )|E]"
 grant_titles_interaction.tt.primeminister_title_grant.duchy_sufficient: "Если даровать хотя бы [Concept( 'duchy', 'герцогство' )|E], [actor.GetDiarchyTypeName] #ENC закончится#!"
 grant_titles_interaction.tt.primeminister_title_grant.county_sufficient: "Если даровать хотя бы [Concept( 'county', 'графство' )|E], [actor.GetDiarchyTypeName] #ENC закончится#!"
 grant_titles_interaction.tt.primeminister_title_grant.county_insufficient: "Если даровать титул не выше [Concept( 'county', 'графского' )|E], [actor.GetDiarchyTypeName] #XB не закончится#!"
 grant_titles_interaction.tt.primeminister_title_grant.barony_doesnt_end: "Если даровать [Concept( 'barony', 'баронство' )|E], [actor.GetDiarchyTypeName] #XB не закончится#!"
 diarch_aptitude_helps_tax_collectors_toggle: "[diarchs|E] получают [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_buffed_by_swing_multiplier_value')|+%0] текущего [Concept( 'scales_of_power', 'равновесия сил' )|E] в качестве [Concept( 'aptitude', 'пригодности' )|E] как [Concept( 'tax_collector', 'сборщика налогов' )|E]"
 diarch_aptitude_helps_tax_collectors_postamble: "[Concept( 'aptitude', 'пригодности' )|E] [Concept( 'diarch_possessive', 'диарха' )|E] в качестве бонуса к собственной пригодности #WEAK (не складывается)#!"
 diarch_aptitude_helps_tax_collectors_t1: "#P [tax_collectors|E] получают [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t2: "#P [tax_collectors|E] получают [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t3: "#P [tax_collectors|E] получают [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t4: "#P [tax_collectors|E] получают [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_is_preferred_liege_heir: "[Concept( 'diarch', 'Диарх' )|E] — [Concept('designated_heir', 'предопределенный наследник')|E]"
 diarchy_transition_into_co_emperorship_on_majority: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], начнется [Concept( 'diarchy', 'диархия' )|E]"
 half_sop_swing_transfer_over_on_majority: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], сдвиг [Concept( 'scales_of_power', 'равновесия сил' )|E] уменьшится вдвое"
 liege_may_voluntarily_cede_authority: "[Concept('liege', 'Сюзерен')|E] может добровольно сместить [Concept('scales_of_power', 'равновесие сил')|E] в пользу диарха #WEAK (чтобы получить преимущества, которые дают крайние положения равновесия сил)#!"
 diarch_gain_skill_on_majority_t1: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], он получит #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_primary_value')|0]#! к [Concept( 'skill', 'навыку' )|E], связанному с его [Concept( 'education', 'образованием' )|E] и #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_secondary_value')|0]#! к двум другим навыкам"
 diarch_gain_skill_on_majority_t2: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], он дополнительно получит #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_value')|0])#! к [Concept( 'skill', 'навыку' )|E], связанному с его [Concept( 'education', 'образованием' )|E] и #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_value')|0])#! к двум другим навыкам"
 diarch_gain_skill_on_majority_t3: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], он дополнительно получит #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_value')|0])#! к [Concept( 'skill', 'навыку' )|E], связанному с его [Concept( 'education', 'образованием' )|E] и #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_value')|0])#! к двум другим навыкам"
 diarch_gain_skill_on_majority_t4: "Когда [Concept( 'diarch', 'диарх' )|E] [Concept( 'adult', 'повзрослеет' )|E], он дополнительно получит #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_value')|0])#! к [Concept( 'skill', 'навыку' )|E], связанному с его [Concept( 'education', 'образованием' )|E] и #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_diff_value')|0]#! #WEAK (всего +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_value')|0])#! к двум другим навыкам"
 unlock_adjust_imperial_bureaucracy_interaction: "[Concept( 'diarchs', 'Диархи' )|E] могут потребовать от [Concept( 'liege', 'сюзерена' )|E] изменить [Concept( 'imperial_bureaucracy', 'уровень имперской бюрократии' )|E] за счет:\n$SPACE4$$EFFECT_LIST_BULLET$централизации, что приведет к снижению затрат и штрафов к [Concept( 'opinion', 'мнению' )|E],\n$SPACE4$$EFFECT_LIST_BULLET$или децентрализации, которая снизит уровень [Concept( 'strife', 'недовольства' )|E]"
 unlock_scapegoat_counterpart_interaction: "И [Concept( 'diarch', 'диарх' )|E], и [Concept( 'liege', 'сюзерен' )|E] могут публично высказываться друг против друга. При этом каждый источник агрессивной риторики:\n$SPACE4$$EFFECT_LIST_BULLET$получает [Concept( 'influence', 'влияние' )|E];\n$SPACE4$$EFFECT_LIST_BULLET$катастрофически снижает [Concept( 'opinion', 'мнение' )|E] оппонента о себе;\n$SPACE4$$EFFECT_LIST_BULLET$вызывает проблемы в [Concept( 'realm', 'державе' )|E].\n$SPACE4$$EFFECT_LIST_BULLET$Исход борьбы зависит от превосходства в [Concept( 'diplomacy', 'дипломатии' )|E] или [Concept( 'intrigue', 'интригах' )|E]"
 unlock_diarch_requests_military_expedition_interaction: "[Concept( 'diarch', 'Диарх' )|E] может потребовать у [Concept( 'liege', 'сюзерена' )|E] доступа к [Concept( 'casus_belli', 'казус белли' )|E] [Concept( 'imperial_expedition_cb', 'имперской экспедиции' )|E] и захватить территорию для себя или отказаться от нее и получить огромное количество [Concept( 'influence', 'влияния' )|E]"
 unlock_diarch_demand_kingdom_interaction: "[Concept( 'diarchs', 'Диархи' )|E] с [Concept( 'duchy', 'герцогскими' )|E] [Concept( 'title_tier', 'титулами' )|E] могут потребовать сделать их [Concept( 'governorship', 'губернаторами' )|E] [Concept( 'kingdom', 'королевских' )|E] титулов"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive: "Эффективность [Concept( 'co_emperor', 'императоров-соправителей' )|E] на [Concept( 'administrative', 'бюрократических' )|E] постах выше на [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_massive_value')|%=+0]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major: "Эффективность [Concept( 'co_emperor', 'императоров-соправителей' )|E] на [Concept( 'administrative', 'бюрократических' )|E] постах выше на [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_major_value')|%=+0]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium: "Эффективность [Concept( 'co_emperor', 'императоров-соправителей' )|E] на [Concept( 'administrative', 'бюрократических' )|E] постах выше на [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_medium_value')|%=+0]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild: "Эффективность [Concept( 'co_emperor', 'императоров-соправителей' )|E] на [Concept( 'administrative', 'бюрократических' )|E] постах выше на [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_mild_value')|%=+0]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_massive$ в соответствии с текущим [Concept( 'scales_of_power', 'равновесием сил' )|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_major$ в соответствии с текущим [Concept( 'scales_of_power', 'равновесием сил' )|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_medium$ в соответствии с текущим [Concept( 'scales_of_power', 'равновесием сил' )|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_mild$ в соответствии с текущим [Concept( 'scales_of_power', 'равновесием сил' )|E]#!"
 diarch_children_born_in_purple_if_culturally_appropriate: "Если позволяют [Concept('culture_tradition', 'культурные традиции')|E], а [GetTitleByKey('b_constantinople').GetNameNoTier] находится под контролем, [Concept('children', 'дети')|E] [Concept('diarch', 'диарха')|E] будут рождаться со [Concept('trait', 'свойством')|E] «[GetTrait('born_in_the_purple').GetName( GetNullCharacter )]»"
 diarch_can_appoint_self_co_emperor: "[SelectLocalization( IsAdministrativeRuler( GetPlayer ), '', '#WEAK недействительно для этого правительства: ')][Concept( 'regents', 'регенты' )|E] могут назначать себя [Concept( 'co_emperor', 'императорами-соправителями' )|E][SelectLocalization( IsAdministrativeRuler( GetPlayer ), '', '#!')]"
 ##################################################
 ##Succession Loc
 #Categories.
 diarch_succession_score.category.familial_ties: "Семейные узы"
 diarch_succession_score.category.personal_ties: "Личные узы"
 diarch_succession_score.category.societal_bonds: "Социальные узы"
 diarch_succession_score.category.suitable_servant: "Подходящий слуга"
 diarch_succession_score.category.royal_court: "Монарший двор"
 diarch_succession_score.category.competence: "Компетентность"
 diarch_succession_score.category.nepotism: "Непотизм"
 diarch_succession_score.category.traits.noble_ambitions: "Свойства #WEAK (Амбициозный дворянин)#!"
 diarch_succession_score.category.traits.civil_service: "Свойства #WEAK (Чиновник)#!"
 diarch_succession_score.category.circumstances: "Обстоятельства"
 #Diarchy Specific
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.ruler: "[Concept( 'extended_family', 'Дальние родственники' )|E]-[Concept( 'landed', 'землевладельцы' )|E] правителя, который [ROOT.Char.GetLiege.Custom('GetChildInvalidPossessive')]"
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.non_ruler: "[Concept( 'unlanded', 'Безземельные' )|E] [Concept( 'extended_family', 'дальние родственники' )|E] правителя, который [ROOT.Char.GetLiege.Custom('GetChildInvalidPossessive')|U]"
 #Familial Ties
 diarch_succession_score.familial_ties.your_parent: "Родитель [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_child: "[Concept( 'child', 'Ребенок' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_sibling: "[ROOT.Char.Custom('SisterBrother')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_grandparent: "[Select_CString(ROOT.Char.IsFemale, 'Бабушка', 'Дедушка' )] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_grandchild: "[Select_CString(ROOT.Char.IsFemale, 'Внучка', 'Внук' )] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_auntuncle: "[ROOT.Char.Custom('GetAuntUncle')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_nibling: "[ROOT.Char.Custom('GetNieceNephew')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_cousin: "[Select_CString(ROOT.Char.IsFemale, 'Кузина', 'Кузен' )] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.your_greatgrandparent: "[Select_CString(ROOT.Char.IsFemale, 'Прабабушка', 'Прадедушка' )] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.yourgreat_grandchild: "[Select_CString(ROOT.Char.IsFemale, 'Правнучка', 'Правнук' )] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.undignified: "[ROOT.Char.GetLiege.Custom('GetLiegeYour')] без должного достоинства"
 diarch_succession_score.familial_ties.undignified.close_family: "Недостоин быть [Concept( 'close_family', 'близким членом семьи' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.undignified.extended_family: "Недостоин быть [Concept( 'extended_family', 'дальним родственником' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.undignified.house: "Недостоин быть членом [Concept( 'house', 'дома' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.familial_ties.undignified.dynasty: "Недостоин быть членом [Concept( 'dynasty', 'династии' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 #Personal Ties
 diarch_succession_score.personal_ties.your_heir: "[Concept( 'heir', 'Наследник' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.your_spouse: "[Concept( 'spouse', 'Супруг' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.your_ward: "[Concept( 'guardian', 'Опекун' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.your_councillor: "[Concept( 'councillor', 'Советник' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.your_powerful_vassal: "[Concept( 'powerful_vassal', 'Могущественный вассал' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.likes_you: "Положительное [Concept( 'opinion', 'мнение' )|E] о [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашем персонаже', 'сюзерене' )]"
 diarch_succession_score.personal_ties.your_positive_relation: "Хорошие [Concept( 'relationship', 'отношения' )|E] с [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонажем ' )][ROOT.Char.GetLiege.Custom('GetLiegeYour')][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'им персонажем', '' )]"
 diarch_succession_score.personal_ties.your_nemesis: "[Concept( 'nemesis', 'Заклятый враг' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.personal_ties.your_negative_relation: "Плохие [Concept( 'relationship', 'отношения' )|E] с [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонажем ' )][ROOT.Char.GetLiege.Custom('GetLiegeYour')][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'им персонажем', '' )]"
 diarch_succession_score.personal_ties.dislikes_you: "Отрицательное [Concept( 'opinion', 'мнение' )|E] о [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашем персонаже', 'сюзерене' )]"
 #Societal Bonds
 diarch_succession_score.societal_bonds.your_house: "[Concept( 'house', 'Дом' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.societal_bonds.your_dynasty: "[Concept( 'dynasty', 'Династия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.societal_bonds.your_faith: "[Concept( 'faith', 'Конфессия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.societal_bonds.your_culture: "[Concept( 'culture', 'Культура' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 #Suitable Servant
 diarch_succession_score.suitable_servant.tax_collector: "[tax_collector|E]"
 diarch_succession_score.suitable_servant.lowborn: "[lowborn|E]"
 diarch_succession_score.suitable_servant.landless: "Безземельный [Concept( 'character', 'персонаж' )|E]"
 diarch_succession_score.suitable_servant.landed: "Должность преимущественно для безземельных"
 diarch_succession_score.suitable_servant.shares_liege_culture: "Та же [Concept( 'culture', 'культура' )|E], что и у [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.suitable_servant.shares_liege_faith: "Та же [Concept( 'faith', 'конфессия' )|E], что и у [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.suitable_servant.shares_liege_hof: "Тот же [Concept( 'head_of_faith', 'глава конфессии' )|E], что и у [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_righteous: "Считает, что [Concept( 'faith', 'конфессия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )] — $hostility_righteous_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_astray: "Считает, что [Concept( 'faith', 'конфессия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )] — $hostility_astray_tooltippable$"
 diarch_succession_score.suitable_servant.diff_culture_acceptance: "[cultural_acceptance|E]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_hostile: "Считает, что [Concept( 'faith', 'конфессия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )] — $hostility_hostile_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_evil: "Считает, что [Concept( 'faith', 'конфессия' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )] — $hostility_evil_tooltippable$"
 #Nepotism
 diarch_succession_score.nepotism.primary_spouse.friend: "[Concept( 'friends', 'Дружит' )|E] с [Concept( 'primary_spouse', 'главным супругом' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.consort.friend: "[Concept( 'friends', 'Дружит' )|E] с консортом [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.primary_spouse.best_friend: "[Concept( 'best_friends', 'Лучшие друзья' )|E] с [Concept( 'primary_spouse', 'главным супругом' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.consort.best_friend: "[Concept( 'best_friends', 'Лучшие друзья' )|E] с консортом [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.primary_spouse.rival: "[Concept( 'rivals', 'Соперники' )|E] с [Concept( 'primary_spouse', 'главным супругом' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.consort.rival: "[Concept('rivals', 'Соперники')|E] с [Concept('primary_spouse', 'главной женой/главным мужем')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена')]"
 diarch_succession_score.nepotism.primary_spouse.nemesis: "[Concept( 'nemeses', 'Заклятые враги' )|E] с [Concept( 'primary_spouse', 'главным супругом' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.consort.nemesis: "[Concept('nemeses', 'Заклятые враги')|E] с [Concept('primary_spouse', 'главной женой/главным мужем')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена')]"
 diarch_succession_score.nepotism.any_consort.shares_minority_culture: "Принадлежит к тому же [Concept( 'culture', 'культурному' )|E] меньшинству, что и консорт [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.any_consort.shares_minority_faith: "Принадлежит к тому же [Concept( 'faith', 'религиозному' )|E] меньшинству, что и консорт [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.friend: "[Concept( 'friends', 'Дружит' )|E] с [Concept( 'child', 'ребенком' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.best_friend: "[Concept( 'best_friends', 'Лучшие друзья' )|E] с [Concept( 'child', 'ребенком' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.rival: "[Concept( 'rivals', 'Соперники' )|E] с [Concept( 'child', 'ребенком' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.nemesis: "[Concept( 'nemeses', 'Заклятые враги' )|E] с [Concept( 'child', 'ребенком' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.shares_minority_culture: "Принадлежит к тому же [Concept( 'culture', 'культурному' )|E] меньшинству, что и [Concept( 'child', 'ребенок' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.sah_child.shares_minority_faith: "Принадлежит к тому же [Concept( 'faith', 'религиозному' )|E] меньшинству, что и [Concept( 'child', 'ребенок' )|E] [Concept( 'courtier', 'при дворе' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.nepotism.incumbent_vizier.close_family: "[Concept( 'close_family', 'Близкое родство' )|E] с [Concept( 'vizier', 'визирем' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.extended_family: "[Concept( 'extended_family', 'Дальнее родство' )|E] с [Concept( 'vizier', 'визирем' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.friend: "[Concept( 'friends', 'Друг' )|E] [Concept( 'vizier', 'визиря' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.best_friend: "[Concept( 'best_friends', 'Лучший друг' )|E] [Concept( 'vizier', 'визиря' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.rival: "[Concept( 'rivals', 'Соперник' )|E] [Concept( 'vizier', 'визиря' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.nemesis: "[Concept( 'nemeses', 'Заклятый враг' )|E] [Concept( 'vizier', 'визиря' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_culture: "Принадлежит к тому же [Concept( 'culture', 'культурному' )|E] меньшинству, что и [Concept( 'vizier', 'визирь' )|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_faith: "Принадлежит к тому же [Concept( 'faith', 'религиозному' )|E] меньшинству, что и [Concept( 'vizier', 'визирь' )|E]"
 #Traits
 ## Personality
 diarch_succession_score.traits.ambitious: "[GetTrait('ambitious').GetName( ROOT.Char )]"
 diarch_succession_score.traits.content: "[GetTrait('content').GetName( ROOT.Char )]"
 diarch_succession_score.traits.diligent: "[GetTrait('diligent').GetName( ROOT.Char )]"
 diarch_succession_score.traits.lazy: "[GetTrait('lazy').GetName( ROOT.Char )]"
 diarch_succession_score.traits.arrogant: "[GetTrait('arrogant').GetName( ROOT.Char )]"
 diarch_succession_score.traits.humble: "[GetTrait('humble').GetName( ROOT.Char )]"
 diarch_succession_score.traits.patient: "[GetTrait('patient').GetName( ROOT.Char )]"
 diarch_succession_score.traits.impatient: "[GetTrait('impatient').GetName( ROOT.Char )]"
 diarch_succession_score.traits.just: "[GetTrait('just').GetName( ROOT.Char )]"
 diarch_succession_score.traits.greedy: "[GetTrait('greedy').GetName( ROOT.Char )]"
 diarch_succession_score.traits.generous: "[GetTrait('generous').GetName( ROOT.Char )]"
 ## Lifestyle
 diarch_succession_score.traits.diplomat: "[GetTrait('diplomat').GetName( ROOT.Char )]"
 diarch_succession_score.traits.administrator: "[GetTrait('administrator').GetName( ROOT.Char )]"
 diarch_succession_score.traits.avaricious: "[GetTrait('avaricious').GetName( ROOT.Char )]"
 diarch_succession_score.traits.schemer: "[GetTrait('schemer').GetName( ROOT.Char )]"
 #Royal Court
 diarch_succession_score.royal_court.court_type.diplomacy: "[diplomacy|E] при дипломатическом дворе #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.martial: "[martial|E] при воинственном дворе #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.stewardship: "[stewardship|E] при административном дворе #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.intrigue: "[intrigue|E] дворе интриг #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.learning: "[learning|E] ученом дворе #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.prowess: "[prowess|E] при племенном дворе #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.speaks_court_language: "Знает [Concept( 'court_language', 'придворный язык' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 #Competence
 ## Competence varies per diarchy type, so you'll likely want to make different loc keys referencing different thresholds here.
 diarch_succession_score.competence.vizierate.diplomacy: "[diplomacy|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.stewardship: "[stewardship|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.intrigue: "[Concept('intrigue', 'Интриги')|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 #Circumstances
 diarch_succession_score.circumstances.cripplingly_ill: "Страдает от мучительной хвори"
 diarch_succession_score.circumstances.badly_wounded: "Страдает от страшных ран"
 diarch_succession_score.circumstances.known_criminal: "Известный [Concept( 'criminal', 'преступник' )|E]"
 diarch_succession_score.circumstances.very_young: "Слишком юный возраст"
 diarch_succession_score.circumstances.stressed_out: "Явно испытывает стресс"
 diarch_succession_score.circumstances.illegitimate: "Незаконнорожденное дитя"
 diarch_succession_score.circumstances.mildly_ill: "Страдает от легкого недуга"
 diarch_succession_score.circumstances.mildly_wounded: "Страдает от легких ран"
 diarch_succession_score.circumstances.not_speak_language: "Не знает основной [Concept( 'language', 'язык' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 #Disqualifiers
 diarch_succession_score.disqualifiers.neither_vassal_nor_courtier: "Не является [Concept( 'vassal', 'вассалом' )|E] или [Concept( 'courtier', 'придворным' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'вашего персонажа', 'сюзерена' )]"
 diarch_succession_score.disqualifiers.child: "Является [Concept( 'child', 'ребенком' )|E]"
 diarch_succession_score.disqualifiers.imprisoned: "Находится [Concept( 'imprisoned', 'в заключении' )|E]"
 diarch_succession_score.disqualifiers.incapable_or_infirm: "[GetTrait('incapable').GetName( ROOT.Char )|U] или [GetTrait('infirm').GetName( ROOT.Char )|l]"
 diarch_succession_score.disqualifiers.right_gendered_for_liege: "Пол не отвечает требованиям [Concept( 'faith', 'конфессии' )|E] [Concept( 'liege', 'сюзерена' )|E]"
 diarch_succession_score.disqualifiers.count_or_above: "Владеет титулом выше [Concept( 'barony', 'баронского' )|E]"
 ##################################################
 ##Loyalty Loc
 diarch_loyalty_score.regency.opinion_of_you: "[Concept( 'opinion', 'Мнение' )|E] о [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонаже ' )][ROOT.Char.GetLiege.GetNamePossessiveOrMy|V][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'ем персонаже', '' )|V]"
 diarch_loyalty_score.regency.your_positive_relation: "$diarch_succession_score.personal_ties.your_positive_relation$"
 diarch_loyalty_score.regency.your_negative_relation: "$diarch_succession_score.personal_ties.your_negative_relation$"
 diarch_loyalty_score.regency.lazy: "[GetTrait('lazy').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.diligent.positive: "[GetTrait('diligent').GetName( ROOT.Char )] и положительное [Concept( 'opinion', 'мнение' )|E]"
 diarch_loyalty_score.regency.diligent.negative: "[GetTrait('diligent').GetName( ROOT.Char )] и отрицательное [Concept( 'opinion', 'мнение' )|E]"
 diarch_loyalty_score.regency.craven: "[GetTrait('craven').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.honest: "[GetTrait('honest').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.deceitful: "[GetTrait('deceitful').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.content: "[GetTrait('content').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.ambitious: "[GetTrait('ambitious').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.arbitrary: "[GetTrait('arbitrary').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.just: "[GetTrait('just').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.disloyal: "[GetTrait('disloyal').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.loyal: "[GetTrait('loyal').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.humble: "[GetTrait('humble').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.arrogant: "[GetTrait('arrogant').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.patient: "[GetTrait('patient').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.impatient: "[GetTrait('impatient').GetName( ROOT.Char )]"
 diarch_loyalty_score.regency.compassion_for_helpless: "[Concept( 'personality', 'Личности' )|E] свойственно сострадание к [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонажу ' )][ROOT.Char.GetLiege.Custom('GetChildInvalid')][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'ему персонажу', '' )]"
 diarch_loyalty_score.regency.chief_eunuch: "[GetCourtPositionType('chief_eunuch_court_position').GetName()]"
 diarch_loyalty_score.regency.chief_qadi: "[GetCourtPositionType('chief_qadi_court_position').GetName()]"
 diarch_loyalty_score.regency.tradition_fp2_malleable_subjects: "[Concept( 'culture', 'Культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_fp2_malleable_subjects').GetName]»"
 diarch_loyalty_score.regency.tradition_talent_acquisition: "[Concept( 'lowborn', 'Худородное' )|E] происхождение, [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_talent_acquisition').GetName]»"
 diarch_loyalty_score.regency.tradition_astute_diplomats.positive: "Положительное [Concept( 'opinion', 'мнение' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_astute_diplomats').GetName]»"
 diarch_loyalty_score.regency.tradition_astute_diplomats.negative: "Отрицательное [Concept( 'opinion', 'мнение' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_astute_diplomats').GetName]»"
 diarch_loyalty_score.regency.tradition_ruling_caste: "[Concept( 'liege', 'Сюзерен' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_ruling_caste').GetName]»"
 diarch_loyalty_score.regency.tradition_family_entrepreneurship: "[Concept( 'extended_family', 'Дальнее родство' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_family_entrepreneurship').GetName]»"
 diarch_loyalty_score.regency.tradition_hereditary_hierarchy: "[Concept( 'culture', 'Культура' )|E] свойственна традиция «[GetCultureTradition('tradition_hereditary_hierarchy').GetName]»"
 diarch_loyalty_score.regency.tradition_tribe_unity: "Одинаковый [Concept( 'house', 'дом' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_tribe_unity').GetName]»"
 diarch_loyalty_score.regency.tradition_strong_kinship: "Одинаковый [Concept( 'house', 'дом' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_strong_kinship').GetName]»"
 diarch_loyalty_score.regency.tradition_chivalry.gain: "Благородный [Concept( 'liege', 'сюзерен' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_chivalry').GetName]»"
 diarch_loyalty_score.regency.tradition_chivalry.loss: "Бесчестный [Concept( 'liege', 'сюзерен' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_chivalry').GetName]»"
 diarch_loyalty_score.regency.tradition_philosopher_culture: "[Concept('education', 'Образование')|E] [Concept( 'learning', 'учености' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_philosopher_culture').GetName]»"
 diarch_loyalty_score.regency.tradition_vegetarianism: "Отвратительные пищевые предпочтения [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонажа ' )][ROOT.Char.GetLiege.Custom('GetLiegeYour')][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'его персонажа', '' )]"
 diarch_loyalty_score.regency.tradition_eye_for_an_eye: "[Concept( 'culture', 'Культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_eye_for_an_eye').GetName]»"
 diarch_loyalty_score.regency.tradition_byzantine_succession: "[Concept( 'culture', 'Культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_byzantine_succession').GetName]»"
 diarch_loyalty_score.regency.tradition_warrior_culture: "[Concept( 'education', 'Познания' )|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, '', 'персонажа ' )][ROOT.Char.GetLiege.Custom('GetLiegeYour')][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'его персонажа', '' )] в не[Concept( 'martial', 'военном деле' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_warrior_culture').GetName]»"
 diarch_loyalty_score.regency.tradition_practiced_pirates: "[Concept( 'culture', 'Культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_practiced_pirates').GetName]»"
 diarch_loyalty_score.regency.tradition_faith_bound: "Другая [Concept( 'faith', 'конфессия' )|E], [Concept( 'culture', 'культуре' )|E] свойственна традиция «[GetCultureTradition('tradition_faith_bound').GetName]»"
 diarch_loyalty_score.regency.tyranny: "[Concept( 'tyranny', 'Тирания' )|E] [ROOT.Char.GetLiege.Custom('GetLiegeYour')|l][Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'его персонажа', '' )]"
 diarch_loyalty_score.regency.temporary_regency.dread: "[Concept( 'dreadful', 'Ужасающий' )|E] [Concept( 'liege', 'сюзерен' )|E] скоро вернется"
 diarch_loyalty_score.regency.override_negated: "Минимальное [Concept( 'opinion', 'мнение' )|E] нивелирует высочайшую верность"
 diarch_loyalty_score.regency.loyalty_hook.self: "$loyalty_hook$ [Concept( 'hook', 'Влияние' )|E]"
 diarch_loyalty_score.regency.loyalty_hook.predecessor: "$predecessor_loyalty_hook$ [Concept( 'hook', 'Влияние' )|E]"
 diarch_loyalty_score.regency.ai_honour: "[Concept( 'personality', 'Личность' )|E] крайне благородна"
 diarch_loyalty_score_power_at_home_perk: "[GetPerk('power_at_home_perk').GetName( GetNullCharacter )]"
 diarch_loyalty_score.co_rule.co_emperorship.dread: "Внушает [Concept( 'dreadful', 'ужас' )|E]"
 diarch_loyalty_score.co_rulership.designated_heir: "[Concept( 'designated_heir', 'Предопределенный наследник' )|E]"
 diarch_loyalty_score.co_rulership.years_waiting: "Годы ожидания"
 diarch_loyalty_score.co_rulership.age_difference: "Время благоволит молодым"
 diarch_loyalty_score.co_rulership.just_die_already: "#BOL Умри же наконец#!"
 diarch_loyalty_score.co_rulership.your_time_is_up: "#EMP Ваше время на исходе#!"
 diarch_loyalty_score.co_rulership.you_are_too_fit: "[Select_CString(ROOT.Char.GetLiege.IsFemale, 'Старуха слишком крепка', 'Старик слишком крепок')] [Concept('healthy', 'здоровьем')|E]"
 diarch_loyalty_score.co_rulership.showing_no_signs_of_slowing: "[ROOT.Char.GetLiege.Custom('GetLiegeYou')] вообще не стареет"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.overflow_edgecase: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E], вероятно, останется на уровне «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.remains_static: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] останется на уровне «$DIARCHY_WINDOW_VISIBLY_DISLOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_selfless: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$» на «$DIARCHY_WINDOW_VISIBLY_LOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_situational: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_VISIBLY_DISLOYAL$» на «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_selfless: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$» на «$DIARCHY_WINDOW_VISIBLY_LOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_self_interested: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$» на «$DIARCHY_WINDOW_VISIBLY_DISLOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.remains_static: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] останется на уровне «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.overflow_edgecase: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E], вероятно, останется на уровне «$DIARCHY_WINDOW_VISIBLY_LOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.remains_static: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] останется на уровне «$DIARCHY_WINDOW_VISIBLY_LOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_self_interested: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_VISIBLY_LOYAL$» на «$DIARCHY_WINDOW_VISIBLY_DISLOYAL$»"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_situational: "[Concept( 'diarch_loyalty', 'Верность' )|E] вашего [Concept( 'diarch', 'диарха' )|E] изменится с «$DIARCHY_WINDOW_VISIBLY_LOYAL$» на «$DIARCHY_WINDOW_UNKNOWN_LOYALTY$»"
 ##################################################
 ##Tax Collection
 diarchy_tax_collector_boost.scales_of_power: "[scales_of_power|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t1: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|%V0] [Concept( 'aptitude', 'пригодности' )|E] [Concept( 'diarch_possessive', 'диарха' )|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t2: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|%V0] [Concept( 'aptitude', 'пригодности' )|E] [Concept( 'diarch_possessive', 'диарха' )|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t3: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|%V0] [Concept( 'aptitude', 'пригодности' )|E] [Concept( 'diarch_possessive', 'диарха' )|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t4: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|%V0] [Concept( 'aptitude', 'пригодности' )|E] [Concept( 'diarch_possessive', 'диарха' )|E]"
 ##################################################
 ##Schemes
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_loyal: "#WEAK [GetTrait('loyal').GetName(actor)]: [recipient.GetTitledFirstName] верно служит сюзерену ([actor.GetLiege.GetTitledFirstName]) и [Select_CString(recipient.IsFemale, 'должна', 'должен' )] остаться#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_disloyal: "#WEAK [GetTrait('loyal').GetName(actor)]: [recipient.GetTitledFirstName] — пройдоха и [Select_CString(recipient.IsFemale, 'должна', 'должен' )] уйти ради блага державы#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.disloyal.remove_loyal: "#WEAK [GetTrait('disloyal').GetName(actor)]: [recipient.GetTitledFirstName] — подпевала и [Select_CString(recipient.IsFemale, 'должна', 'должен' )] уйти#!"
 overthrow_regent_scheme_interaction.tt.cannot_release: "Нельзя выполнять действия, освобождающие прежнего [Concept( 'regent', 'регента' )|E], пока текущий $game_concept_regent$ на посту"
 ##################################################
 ##Vizier Candidates
 vizier_candidate_has_studied_recently_modifier: "Напряженная учеба"
 vizier_candidate_has_studied_recently_modifier_desc: "Этот персонаж недавно бросил все свои силы на то, чтобы улучшить свои навыки чиновника. Результаты на лицо, как и последствия."
 vizier_extravagance_treasure_title: "Сокровища"
 vizier_extravagance_activities_title: "Занятия"
 vizier_extravagance_property_title: "Имения"
 vizier_extravagance_charity_title: "Пожертвования"
 vizier_extravagance_t1_title: "Заметные"
 vizier_extravagance_t1_treasure_modifier: "$vizier_extravagance_t1_title$ $vizier_extravagance_treasure_title$"
 vizier_extravagance_t1_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_activities_modifier: "$vizier_extravagance_t1_title$ $vizier_extravagance_activities_title$"
 vizier_extravagance_t1_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_property_modifier: "$vizier_extravagance_t1_title$ $vizier_extravagance_property_title$"
 vizier_extravagance_t1_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_charity_modifier: "$vizier_extravagance_t1_title$ $vizier_extravagance_charity_title$"
 vizier_extravagance_t1_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t1_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t2_title: "Впечатляющие"
 vizier_extravagance_t2_treasure_modifier: "$vizier_extravagance_t2_title$ $vizier_extravagance_treasure_title$"
 vizier_extravagance_t2_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_activities_modifier: "$vizier_extravagance_t2_title$ $vizier_extravagance_activities_title$"
 vizier_extravagance_t2_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_property_modifier: "$vizier_extravagance_t2_title$ $vizier_extravagance_property_title$"
 vizier_extravagance_t2_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_charity_modifier: "$vizier_extravagance_t2_title$ $vizier_extravagance_charity_title$"
 vizier_extravagance_t2_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t2_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t3_title: "Знаменитые"
 vizier_extravagance_t3_treasure_modifier: "$vizier_extravagance_t3_title$ $vizier_extravagance_treasure_title$"
 vizier_extravagance_t3_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_activities_modifier: "$vizier_extravagance_t3_title$ $vizier_extravagance_activities_title$"
 vizier_extravagance_t3_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_property_modifier: "$vizier_extravagance_t3_title$ $vizier_extravagance_property_title$"
 vizier_extravagance_t3_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_charity_modifier: "$vizier_extravagance_t3_title$ $vizier_extravagance_charity_title$"
 vizier_extravagance_t3_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t3_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t4_title: "Выдающиеся"
 vizier_extravagance_t4_treasure_modifier: "$vizier_extravagance_t4_title$ $vizier_extravagance_treasure_title$"
 vizier_extravagance_t4_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_activities_modifier: "$vizier_extravagance_t4_title$ $vizier_extravagance_activities_title$"
 vizier_extravagance_t4_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_property_modifier: "$vizier_extravagance_t4_title$ $vizier_extravagance_property_title$"
 vizier_extravagance_t4_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_charity_modifier: "$vizier_extravagance_t4_title$ $vizier_extravagance_charity_title$"
 vizier_extravagance_t4_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Charity')]"
 vizier_extravagance_t4_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Charity')]"
 viz_extravagance.t1.treasure.hankerchiefs: "Этот персонаж меняет льняные платки с необычайной скоростью, летом так и вовсе по десять штук на дню, выбрасывая их после первого же использования."
 viz_extravagance.t1.treasure.cosmetics: "Этот персонаж имеет в своем распоряжении ненормально большое для своего положения количество духов, притираний и мазей."
 viz_extravagance.t1.treasure.jewellery: "Кажется, этот персонаж не знает недостатка в новых побрякушках: лицо и [ROOT.Char.GetDiarchy.GetDiarch.Custom('HandHands')] буквально блестят от золота, серебра и драгоценных камней."
 viz_extravagance.t1.treasure.furniture: "Мебель этого персонажа изготавливается только из лучших заморских пород дерева и металлов и, как того требует хороший вкус, меняется в соответствии с модой."
 viz_extravagance.t1.treasure.clothing: "В распоряжении этого персонажа поистине бездонный гардероб нарядов по последней моде, а порой он и сам становится ее законодателем."
 viz_extravagance.t1.treasure.hats: "Этот персонаж никогда не носит один и тот же головной убор дольше пары недель — зачем ограничивать себя, если каждый год появляется так много новых, более высоких вариантов."
 viz_extravagance.t1.treasure.relics: "Известно, что в распоряжении этого персонажа находится небольшая, но впечатляющая коллекция священных реликвий."
 viz_extravagance.t1.treasure.drugs: "Известно, что в шкафчиках этого персонажа можно найти великолепную подборку экзотических наркотиков, напитков и настоек, многих из которых нет больше ни у кого из обитателей владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.treasure.game_pieces: "У этого персонажа есть образцы всех известных в этой части света настольных игр, а их фишки вырезаны из драгоценных камней и костей легендарных животных."
 viz_extravagance.t1.treasure.hourglasses: "В распоряжении этого персонажа находятся одни из наиболее точных песочных часов — сложно придумать более великолепный инструмент для чиновника."
 viz_extravagance.t1.activities.parades: "Этот персонаж обожает устраивать процессии, раздавая нуждающимся деньги и еду, чаще всего за свой счет и от своего имени."
 viz_extravagance.t1.activities.festivals: "Все знают, что этот персонаж устраивает небольшие празднества в садах и нижних залах своих частных резиденций, чтобы и простолюдины могли приобщиться к блеску высшего сословия."
 viz_extravagance.t1.activities.auctions: "Этот персонаж регулярно проводит благотворительные аукционы, на которых распродает часть своих богатств, чтобы собрать средства для бедняков."
 viz_extravagance.t1.activities.feasts: "Этот персонаж регулярно устраивает закрытые пиры с местной знатью. Ходят слухи, что в борьбе за приглашение доходит и до кровопролития."
 viz_extravagance.t1.activities.board_game_tourneys: "Этому персонажу нравится устраивать соревнования по настольным играм для представителей высшего класса, во время которых сильные мира сего из владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] играют по самым свежим правилам."
 viz_extravagance.t1.activities.pigeon_racing: "У этого персонажа есть немного постыдное увлечение гонками голубей. Даже своя обширная голубятня имеется."
 viz_extravagance.t1.activities.orgies: "Известно, что этот персонаж проводит #EMP закрытые#! встречи с наиболее... сладострастными обитателями владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.activities.feasts.weekly: "Этот персонаж каждую неделю организует пышные банкеты — мелкая знать владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] чуть ли не зависит от них из-за одной только кухни."
 viz_extravagance.t1.activities.exhibitions: "Этот персонаж знает толк в искусстве и не только покровительствует искусству, но и выставляет на обозрение плоды своих щедрот, порой даже для самых скромных представителей общества."
 viz_extravagance.t1.activities.feasts.commoners: "Этот персонаж регулярно устраивает пышные пиры, но не забывает приглашать на них наиболее выдающихся обитателей владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], даже если их сословная принадлежность обычно служит препятствием для входа на подобные пиры."
 viz_extravagance.t1.property.townhouse: "У этого персонажа есть свой дом во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. За его подобающе скромным видом таится пышное убранство."
 viz_extravagance.t1.property.minor_businesses: "Деловые интересы этого персонажа обширны и разнообразны и включают в себя небольшие мастерские, мелкие гильдии и скромные имения вокруг столицы."
 viz_extravagance.t1.property.small_arena: "Этот персонаж владеет небольшим частным ипподромом и содержит его. А доходы от ставок являются приятной прибавкой."
 viz_extravagance.t1.property.manse: "У этого персонажа есть частная усадьба за стенами владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] — достаточно близко, чтобы не доставлять неудобств, но достаточно далеко, чтобы избегать лишних ушей."
 viz_extravagance.t1.property.toll_road: "Этот персонаж единолично владеет доходной платной дорогой, ведущей во владение [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Остается только гадать, как эта дорога оказалась в частных руках и когда именно была установлена пошлина за проезд."
 viz_extravagance.t1.property.agent_network: "Этот персонаж располагает сетью агентов по всей державе, которые помогают следить и поддерживать деловые интересы даже на самых удаленных заставах."
 viz_extravagance.t1.property.rooftop_garden: "Этот персонаж платит за содержание обширного сада на крыше дома во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], что изрядно изумляет публику на улицах."
 viz_extravagance.t1.property.market_officials_on_payroll: "Известно, что на содержании у этого персонажа находятся все смотрители и таможенные служащие одного из крупнейших столичных рынков. Все ради сохранения мира в державе, несомненно."
 viz_extravagance.t1.property.hostel: "Этот персонаж владеет дешевой ночлежкой во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], целенаправленно обслуживающей самых бедных и немощных членов общества."
 viz_extravagance.t1.property.gangers: "Этот персонаж, #EMP по слухам#!, подкупил одну из крупнейших банд владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Зачем именно видному чиновнику понадобилась шайка головорезов, остается только гадать."
 viz_extravagance.t1.charity.orphans: "Этот персонаж жертвует средства, на которые каждый год в обучение берется несколько сирот. Детям дают подобающее обучение, еду, кров и моральные наставления до тех пор, пока они не повзрослеют."
 viz_extravagance.t1.charity.building_repair: "Этот персонаж вносит средства в небольшой фонд для выплаты жителям столицы, чьим домам был причинен ущерб, — если ремонт им не по средствам, они получат выплаты."
 viz_extravagance.t1.charity.feasts.religious: "Этот персонаж оплачивает несколько ежегодных религиозных пиршеств для простого люда из владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.charity.widowers: "Этот персонаж платит пособия бедствующим вдовцам столицы."
 viz_extravagance.t1.charity.widows: "Этот персонаж платит пособия бедствующим вдовам столицы."
 viz_extravagance.t1.charity.beggars: "Этот персонаж жертвует средства в фонд, за счет которого нищим и отчаявшимся жителям владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] предоставляются еда и одежда — многим из низов общества иначе просто не выжить."
 viz_extravagance.t1.charity.awkward_children: "Этот персонаж платит средства, за счет которых дети-слуги получают новые кувшины взамен разбитых при утреннем заборе воды, причем так, чтобы их хозяева ничего не узнали об этой досадной случайности."
 viz_extravagance.t1.charity.civil_service.guard: "Этот персонаж за свой счет содержит небольшой сторожевой пост и охрану неподалеку от одного из важнейших административных зданий владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.charity.birds: "Этот персонаж платит за то, чтобы на определенных аллеях столицы регулярно разбрасывали зерно для птиц, ведь только варвар может обречь подобных существ на смерть от голода."
 viz_extravagance.t1.charity.monastery: "Этот персонаж оплачивает содержание созданной на его средства закрытой религиозной общины вдали от грехов обыденной жизни."
 viz_extravagance.t1.charity.judges: "Этот персонаж платит профессиональным судьям державы, чтобы они тратили больше времени на разбор дел."
 viz_extravagance.t1.charity.kitchens: "Этот персонаж содержит несколько небольших бесплатных кухонь, которые кормят благодарных бедняков владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.treasure.cabinet_of_curiosities: "У этого персонажа есть комната для экзотических вещиц и странных предметов из далеких земель. Хотя практической пользы от этого мало, комната вызывает #EMP восхищение#! у гостей."
 viz_extravagance.t2.treasure.gems: "По слухам, у этого персонажа множество мешков драгоценных камней. Те немногие, кто видел эту коллекцию, утверждают, что под каждый вид камней отведен отдельный мешочек."
 viz_extravagance.t2.treasure.sculpture: "Этот персонаж — большой ценитель искусства, и в его резиденциях часто можно встретить статуи, отлитые из драгоценных металлов или высеченные из дорогого камня."
 viz_extravagance.t2.treasure.decorative_martial_gear: "Этому персонажу нравятся декоративные оружие и доспехи, и его резиденция заполнена множеством непрактичного, зато красивого оружия — от золотых мечей до выложенных самоцветами щитов."
 viz_extravagance.t2.treasure.bezoar_cutlery: "У этого персонажа есть невероятно дорогой набор столовых приборов из безоара: говорят, эти камни способны замедлить, нейтрализовать или даже обратить вспять действие самых смертельных ядов, что делает этот набор не только стильным, но #EMP и#! практичным."
 #Narrator's note: bezoars do not, in fact, stop poison. Le big RIP.
 viz_extravagance.t2.treasure.fly_stones: "У этого персонажа есть небольшая коллекция мушиных камней: по слухам, эти мистические камни отгоняют мух, комаров и прочих жужжащих вредителей, что делает их крайне ценным предметом за обеденным столом."
 #Narrator's note: fly stones are sadly fictional.
 viz_extravagance.t2.treasure.indexed_bribes: "Этот персонаж известен своими методичными и ранжированными взятками, которые, по слухам, настолько предсказуемы, что у него, должно быть, есть сотня мешочков на все случаи жизни с четко отмеренным количеством монет в каждом."
 viz_extravagance.t2.treasure.map_of_world: "У этого персонажа есть карта всего известного мира. Говорят, это одна из самых точных карт в державе и занимает она целую стену. Обладатель карты часто смотрит на нее, погрузившись в размышления."
 viz_extravagance.t2.treasure.horse_armour: "Многочисленные скакуны этого персонажа украшены не хуже, чем наряд их владельца — от выложенных жемчугом седел до серебряных уздечек."
 viz_extravagance.t2.treasure.crockery: "Этот персонаж часто похваляется, что на его кухне используются самые большие котлы и сковороды из редчайших материалов, какие можно достать во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.activities.feasts.pool: "Этот персонаж обожает устраивать пиршества на берегу большого искусственного водоема, выстроенного за большие деньги в одной из его резиденций. Для гостей имеются бархатные подушки, диваны и изобилие напитков."
 viz_extravagance.t2.activities.gambling.horse: "Гордостью и радостью этого персонажа являются конюшни со скаковыми жеребцами — почти каждый из них чистокровных заморских кровей."
 viz_extravagance.t2.activities.feasts.interactive: "Пиры этого персонажа славятся своими играми: в поданных кушаниях можно найти мешочки с монетами, в уборной попадаются документы на землю, где не хватает лишь имени, скульптуры представляют собой головоломки, решив которые, можно заполучить самоцвет, и так далее."
 viz_extravagance.t2.activities.feasts.long: "Этот персонаж строго придерживается мнения, что пирушка не заканчивается до тех пор, пока не опустеют кладовые хозяина, из-за чего некоторые из его пиров порой затягиваются на неделю и даже более."
 viz_extravagance.t2.activities.concerts: "Этот персонаж ценит музыку превыше всех прочих видов искусства и считает ее отсутствие подлинной трагедией. Многие из устраиваемых им празднеств по сути являются огромными концертами, на которые иногда пускают даже простолюдинов."
 viz_extravagance.t2.activities.theatre: "Немногие любят театр, актерскую игру и акробатику так, как этот персонаж. На его пирах всегда очень много бродячих актеров, и каждый раз разыгрывается старая классика с новыми лицами."
 viz_extravagance.t2.activities.poetry: "Этот персонаж считает себя поэтом, и, независимо от качества поэзии, приглашения на пиры, где зачитываются стихи, пользуются большим спросом."
 viz_extravagance.t2.activities.amnesties: "Этот персонаж считает, что каждый заслуживает прощения, если покается и искупит грехи, и использует свое положение, чтобы регулярно амнистировать преступников, выказавших достаточное раскаяние."
 viz_extravagance.t2.activities.animal_baiting: "Этот персонаж больше всего на свете любит хрипы, рев и вой свирепого зверя, борющегося за свою жизнь. На большинстве пиров устраиваются бои между загонщиками, собаками и дикими зверями из ближних и дальних земель."
 viz_extravagance.t2.activities.sermons: "Религиозность этого персонажа выходит за рамки требуемой, из-за чего на его пирах то и дело звучат молитвы, а странствующие [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural|l] являются частыми гостями."
 viz_extravagance.t2.property.monopoly: "Этому персонажу повезло получить монополию на определенный товар в стенах владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. Разумеется, тот факт, что раздача подобных монополий находится в его руках, никак с этим не связан."
 viz_extravagance.t2.property.exotic_market: "Этот персонаж владеет одним из известнейших рынков экзотических товаров во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] и облагает его изрядным налогом."
 viz_extravagance.t2.property.mine: "Этот персонаж владеет доходной шахтой недалеко от столицы, являющейся ключевым источником металла для быта и торговли."
 viz_extravagance.t2.property.warehouses: "Этому персонажу принадлежит ряд просторных складов рядом с торговым узлом столицы. Из-за обилия экзотических товаров местные прозвали их сокровищницей."
 viz_extravagance.t2.property.messenger_network: "На службе этого персонажа обширная сеть тайных (и, что важнее, #EMP верных#!) гонцов, способных доносить его волю на в самые дальние углы державы."
 viz_extravagance.t2.property.workshops: "Этому персонажу принадлежат почти все мастерские на одной из крупнейших ремесленных улиц владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], известной своими разнообразными и красивыми товарами."
 viz_extravagance.t2.property.personal_temple: "В собственности у этого персонажа находится [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.HouseOfWorship|l] с пышным убранством, куда нет хода никому, кроме его самого, его родных и ближайших сподвижников."
 viz_extravagance.t2.property.fort: "Этому персонажу принадлежит небольшой форт в приграничных землях, где часто бывают [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural|l]. Несмотря на дороговизну содержания, живность региона представляет немалый интерес для звероловов."
 viz_extravagance.t2.property.treasury: "Сокровищница этого персонажа настолько обширна, что ей требуется отдельное здание — укрепленный комплекс в сердце владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], где монетам точно ничего не грозит."
 viz_extravagance.t2.property.defensible_palace: "Этот персонаж содержит небольшой укрепленный дворец во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. По слухам, в нем полно тайных коридоров и скрытых путей для побега."
 viz_extravagance.t2.charity.schools: "Этот персонаж лично содержит ряд школ, посвященных обучению детей, у которых в противном случае не было бы ни малейшей надежды на образование."
 viz_extravagance.t2.charity.hospitals: "Этот персонаж лично содержит несколько знаменитых больниц во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], в которых лечат беднейших представителей общества, полагаясь исключительно на щедрость своего спонсора."
 viz_extravagance.t2.charity.poor_funerals: "Этот персонаж лично оплачивает похороны людей, умерших во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], не имея средств, родных или друзей, способных обеспечить им достойное погребение."
 viz_extravagance.t2.charity.scholars.philosophical: "Этот персонаж за свой счет содержит несколько видных философов и институтов, занимающихся постижением мира."
 viz_extravagance.t2.charity.scholars.legal: "Этот персонаж платит из своего кармана видным адвокатам, юристам и представителям духовенства, чтобы они разъясняли законы простым людям и следили за их соблюдением."
 viz_extravagance.t2.charity.civil_service.extra_positions: "Этот персонаж лично платит чиновникам на ключевых постах и направляет средства туда, где они нужнее всего, многократно усиливая власть бюрократии."
 viz_extravagance.t2.charity.police: "Этот персонаж платит инспекторам и служителям закона, чтобы они патрулировали владение [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] и следили за исполнением законов ровно настолько, насколько это нужно визирю."
 viz_extravagance.t2.charity.scholars.theological: "Этот персонаж лично содержит известнейшие школы теологии в державе и инвестирует в развитие хорошей #L [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.GetName|l]ой#! теории от имени единоверцев."
 viz_extravagance.t2.charity.scholars.mystical: "Этот персонаж лично содержит ряд известных мистиков, эзотериков и экзальтированных личностей, которые разносят свои странные знания по дворам владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.charity.circumcision: "Этот персонаж лично ежегодно оплачивает обрезание и религиозное воспитание определенного количества мальчиков-сирот с улиц владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.charity.preachers: "Этот персонаж тратит личные средства на то, чтобы странствующие [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural|l] могли скитаться по земле, помогать нуждающимся верующим и давать духовные наставления последователям малых верований."
 viz_extravagance.t3.treasure.mirrors: "Этот персонаж владеет дюжиной самых блестящих зеркал, какие только можно купить за деньги, что является признаком показной роскоши, какую могут позволить себе очень немногие знатные люди."
 viz_extravagance.t3.treasure.parasols: "Кажется, что у этого персонажа есть отдельный зонт на каждый день в году: некоторые вышиты золотом, иные серебром, третьи изготовлены из шелка, какие-то из дамаста, какие-то украшены рубинами, изумрудами и так далее..."
 viz_extravagance.t3.treasure.silk_bigtop: "У этого персонажа есть шатер для путешествий, в который легко поместится более пятидесяти человек. Шатер сшит из дорогого шелка и богато украшен, а опоры выполнены из драгоценных металлов или дерева, покрытого дорогим лаком."
 viz_extravagance.t3.treasure.fabrics: "Этого персонаж гордится тем, что у него в достатке самых дорогих тканей: и шелк, и дамаст, и бархат, и тонкая парча, и умело выполненная пике, и все это представлено в почти бесконечном многообразии региональных разновидностей."
 viz_extravagance.t3.treasure.exotic_pets: "Этот персонаж поражает и пугает гостей своими экзотическими питомцами. Среди них львы, тигры, иноземные олени и куда более странные звери из дальних земель."
 viz_extravagance.t3.treasure.carpets: "Этому персонажу принадлежит особо известный ковер: сотню локтей в длину и вдвое меньше в ширину, вытканный из сырцового шелка, сотканный золотой нитью и отделанный серебряным сатином. Говорят, на нем вышиты религиозные и исторические сюжеты, охватывающие всю историю мира."
 viz_extravagance.t3.treasure.gold_mattress: "У этого персонажа есть матрас, по слухам — вышитый золотой нитью, на котором спали многие из видных деятелей нашего времени."
 viz_extravagance.t3.treasure.birth_control: "У этого персонажа есть вытяжки, пилюли и даже более экзотические средства, обеспечивающие безопасное, приятное и бесплодное совокупление."
 viz_extravagance.t3.treasure.sculpture.articulated: "Радостью и гордостью этого персонажа является его же сочлененная статуя, позу и наряд которой можно менять по желанию визиря."
 viz_extravagance.t3.treasure.plants: "Этот персонаж владеет знаменитой коллекцией редких растений, мхов и трав — каждый образец хранится в одной из пятисот хрустальных емкостей."
 viz_extravagance.t3.activities.feasts.surprise: "Этот персонаж славится пирами, на которых одаривает очаровавших его гостей: за остроумную шутку можно получить десять тысяч голов скота, за яркий наряд — дворец со слугами, а за интересный разговор — одеяние из окрашенного шелка."
 viz_extravagance.t3.activities.aid: "Этот персонаж задабривает знатных людей, проживающих вблизи его имения, время от времени посылая им подарки: сотню роскошных ковров, три тысячи седел тонкой работы, двенадцать котлов амбры, десять тысяч хороших копий и другие мелочи."
 viz_extravagance.t3.activities.scholars.debates: "Этот персонаж приглашает на встречи разномастных ученых со всего света и наслаждается общением с величайшими умами своего времени, собравшимися за одним столом."
 viz_extravagance.t3.activities.feasts.give_away: "Этот персонаж получает удовольствие от организации пиров для своих верных союзников, последователей и прихлебателей. Совершенно случайно на таких пирах всегда раздаются невероятно дорогие подарки, которым, кажется, просто нет конца."
 viz_extravagance.t3.activities.land_and_livestock_grants: "Неисчислимые стада скота этого персонажа стали местной легендой, а число голов, раздаваемых в награду за хорошую службу или в качестве щедрой компенсации, превышает десять тысяч в год."
 viz_extravagance.t3.activities.feasts.spectacle: "Пиры этого персонажа всегда отличаются зрелищностью: если на них нет #EMP хотя бы#! ловкача, балансирующего шест, на конце которого прыгает ребенок, жонглирующий горящими углями, то в чем вообще смысл?"
 viz_extravagance.t3.activities.feasts.coin_shower: "Этот персонаж наслаждается возможностью демонстрировать богатство на пирах самым буквальным образом: на полюбившихся гостей нередко обрушиваются сотни, а то и тысячи монет."
 viz_extravagance.t3.activities.gambling.palanquin: "Этот персонаж утверждает, что изобрел и в совершенстве освоил необычный вид спорта: гонки на паланкинах, в которых носильщики соревнуются, кто быстрее доставит своего господина в определенную точку владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t3.activities.orgies: "Этот персонаж открыто закатывает пиры с плотскими утехами, на которых гостей обхаживают и обслуживают."
 viz_extravagance.t3.activities.parades: "Этот персонаж считает, что нет смысла скрывать богатство: он обожает закатывать парады, регулярно проводя по улицам владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] экзотических питомцев, породистых лошадей, опрятных слуг и пронося дорогие наряды."
 viz_extravagance.t3.property.pool.cushions: "У этого персонажа есть большой бассейн, обложенный подушками, — погружение в воду вовсе не повод отказываться от роскоши."
 viz_extravagance.t3.property.businesses: "Деловые интересы этого персонажа представляют собой жуткое хитросплетение взаимосвязанных торговых путей, монополий, покровительства и поместий."
 viz_extravagance.t3.property.palace.huge: "У этого персонажа есть дворец, который официально лишь #EMP немного#! меньше того, которым владеет [ROOT.Char.GetTitleAsNameNoTooltip|l]. Видевшие этот дворец сомневаются в правдивости этих слов."
 viz_extravagance.t3.property.bathhouse: "У этого персонажа есть великолепная личная баня, куда нет хода никому, кроме ближайших соратников. В этом политическом центре в окружении идеальной чистоты творятся самые грязные махинации во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t3.property.stables: "У этого персонажа огромные конюшни на сотни, а то и больше лучших скакунов в державе."
 viz_extravagance.t3.property.pool.gold: "У этого персонажа есть бассейн, дно которого усыпано толстым слоем золотых монет: в чем смысл богатства, если в нем нельзя купаться?"
 viz_extravagance.t3.property.fleet.commercial: "У этого персонажа есть десятки личных торговых кораблей — настоящий флот, разбросанный по всему свету."
 viz_extravagance.t3.property.business.stolen: "В руки этого персонажа постоянно попадают небольшие промыслы, владельцы которых не сумели выплатить долги ростовщика или непосредственно правительству. Большинство из них предпочитают помалкивать об этом из чувства самосохранения."
 viz_extravagance.t3.property.tycoon: "Этому персонажу принадлежит чуть ли не четверть владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] — частные владения занимают целые кварталы."
 viz_extravagance.t3.property.den_of_vice: "По слухам, этот персонаж владеет одним из наиболее известных притонов во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], где можно приобрести какие угодно экзотические вещества. Если хватит серебра."
 viz_extravagance.t3.charity.observatories: "Этот персонаж покровительствует большой обсерватории, которая наблюдает за небом и записывает движение звезд."
 viz_extravagance.t3.charity.universities: "Этот персонаж поддерживает несколько небольших, но престижных местных университетов, развивая науки от своего имени."
 viz_extravagance.t3.charity.libraries: "Деньги этого персонажа часто расходуются на создание, расширение и поддержание нескольких библиотек и переписывание выдающихся трудов во имя повышения образованности высшего сословия."
 viz_extravagance.t3.charity.bathhouses: "Этот персонаж построил и поддерживает обширный комплекс общественных бань во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], что обеспечивает любовь простого народа, который в противном случае не мог бы позволить себе подобную роскошь."
 viz_extravagance.t3.charity.hospitals.equipment: "Этот персонаж находит время не только на содержание местных больниц, но и на обеспечение их лечебными мазями, хирургическими инструментами и различными эзотерическими инструментами."
 viz_extravagance.t3.charity.civil_service.expansion: "Этот персонаж платит жалование различным служащим, что позволяет более равномерно распределять рутинные обязанности и снижает нагрузку на правительство."
 viz_extravagance.t3.charity.watermills: "Этот персонаж спонсирует строительство общественных водяных мельниц в бедных деревнях и далеких селах, тем самым значительно улучшая жизнь местного населения."
 viz_extravagance.t3.charity.beggar_spies: "По слухам, легендарная паранойя этого персонажа побуждает его платить жалование едва ли не половине попрошаек и бродяг в державе и даже предоставлять им кров взамен на поставляемые сведения."
 viz_extravagance.t3.charity.hajj_water_tanks: "Этот персонаж лично платит за создание и пополнение водоемов за стенами священной Мекки, вода из которых помогает паломникам утолить жажду во время хаджа."
 viz_extravagance.t3.charity.holy_warrior_gear: "Этот персонаж регулярно жертвует оружие и доспехи воинам, сражающимся за правое дело, будь то набеги на врагов веры или охрану ее последователей."
 viz_extravagance.t4.treasure.cushions: "В распоряжении этого персонажа находятся тысячи подушек и почти бесконечные запасы тафты и шелка, благодаря которым в каждой комнате его резиденции так приятно посидеть (или вздремнуть)."
 viz_extravagance.t4.treasure.martial_gear: "Этот персонаж слишком сильно любит военные игрушки. По слухам, запасы декоративного орудия и доспехов превышают количество #EMP настоящего#! вооружения, которым располагает [ROOT.Char.GetTitleAsNameNoTooltip|l]."
 viz_extravagance.t4.treasure.cosmetics: "У этого персонажа просто невероятное количество парфюмерии: целые кувшины драгоценной амбры, розовая вода, пахучая галия, мускус, экстракт алойного дерева и, конечно же, шафран — и все это в таких количествах, что на них можно было бы купить целую армию."
 viz_extravagance.t4.treasure.office: "Личный кабинет этого персонажа полностью отделан камнем с драгоценными металлами и стеклом, буквально излучая власть."
 viz_extravagance.t4.treasure.crockery.historic: "У этого персонажа есть целый набор посуды и приборов для пиров, каждый предмет в котором, по слухам, когда-то принадлежал правителю далеких экзотических земель или владыке древней империи."
 viz_extravagance.t4.treasure.precious_orchard: "Этот персонаж знаменит своим бесценным садом: двор заполнен искусственными деревьями из золота и серебра, на которых весят фрукты, выточенные из самоцветов."
 viz_extravagance.t4.treasure.fleet.personal: "Этот персонаж знаменит великолепной фигурой, вырезанной на носу его личной прогулочной барки, а также целым флотом меньших суденышек, бороздящих воды владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] от его имени."
 viz_extravagance.t4.treasure.massive_sword: "Этот персонаж прославился декоративным мечом длиной в три человеческих роста, который висит на одной из широких стен его любимого зала."
 viz_extravagance.t4.treasure.mystic_ingredients: "О коллекции экзотических алхимических ингредиентов этого персонажа слагают легенды: в ней есть странные растения из далеких земель, причудливые руды из недр Земли и порошки из мяса и костей легендарных существ."
 viz_extravagance.t4.treasure.sensible_investments_for_smart_adults: "У этого персонажа есть манускрипт с уродливым изображением обезьяны. Говорят, он стоит баснословных денег, хотя причина такой стоимости остается неясной."
 viz_extravagance.t4.activities.feasts.pool.rose: "Этот персонаж славится пиршествами на берегу бассейна, украшенного цветами ценой в десятки тысяч монет — их красота и аромат превосходят все когда-либо виденное гостями."
 viz_extravagance.t4.activities.give_aways: "Этот персонаж по прихоти раздает подарки, способные затмить состояние, скопленное богатейшими из торговцев за всю свою жизнь."
 viz_extravagance.t4.activities.feasts.big: "То, что этот персонаж называет «частным пиром для друзей», в глазах большинства выглядит как невероятных размеров празднество, какие случаются раз в десятилетие."
 viz_extravagance.t4.activities.menagerie: "В зверинце этого персонажа есть шипящие рептилии, красочные птицы, огромные млекопитающие и практически все представители огромного бестиария нашего мира."
 viz_extravagance.t4.activities.aid: "Милость этого персонажа выражается в настолько внушительных дарах в знак поддержки, что некоторые из соседей-«дворян» целиком полагаются на них для поддержания образа."
 viz_extravagance.t4.activities.host: "Этот персонаж считает приемы с иностранными дипломатами делом первостепенной важности, уступающим лишь щедрым тратам, призванным показать ничтожность державы прибывших гостей в сравнении с его блеском."
 viz_extravagance.t4.activities.gambling.xtra_xtreme: "Этот персонаж играет на деньги, животных, земли, жизни и вообще на все, что придет ему в голову, — и все в таких безумных количествах, что его богатство может показаться #EMP поистине#! бездонным."
 viz_extravagance.t4.activities.masquerade: "Этот персонаж устраивает регулярные маскарады, выбирая темы из истории и мифологии, и с каждым месяцем гости должны тратить все больше на свои наряды."
 viz_extravagance.t4.activities.plants.ever_changing: "Этот персонаж считает, что смысл жизни в разнообразии пряностей, и содержит сад с то и дело меняющимися растениями, ароматами и экзотическими травами, и все это цветет и плодоносит в разное время года при разных условиях."
 viz_extravagance.t4.activities.feasts.cannibal: "Все сходятся во мнении, что на пирах этого персонажа подают самые лучшие блюда с сочным мясом, хотя немногие сходятся во мнении, кому именно принадлежало это мясо."
 viz_extravagance.t4.property.palace.pool: "Этот персонаж содержит отдельный дворец с огромным бассейном, а сам проживает в другом месте, тем самым отделяя личные покои и рабочие помещения от места приема гостей."
 viz_extravagance.t4.property.palace.spa: "У этого персонажа есть обширная загородная усадьба за стенами владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], где можно отдохнуть от городской суеты благодаря множеству акров прилегающих поместий."
 viz_extravagance.t4.property.army: "У этого персонажа есть собственная армия головорезов и грабителей, готовых исполнять его волю в любой части владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t4.property.livestock: "Личные стада, скакуны и тягловый скот этого персонажа занимает значительную часть пастбищ в державе."
 viz_extravagance.t4.property.palace.guest: "У этого персонажа есть личный дворец для приема гостей — символ богатства и власти, очевидный для каждого."
 viz_extravagance.t4.property.spire: "Этот персонаж исполняет большую часть обязанностей визиря в грозной башне, возвышающейся над всеми зданиями во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]. По слухам, из ее окон видны все аллеи и улицы."
 viz_extravagance.t4.property.palace.monthly: "У этого персонажа есть не меньше дюжины дворцов во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], и он меняет их каждый месяц."
 viz_extravagance.t4.property.bordello: "У этого персонажа есть собственный публичный дом, где его любимые артисты регулярно доставляют ему все мыслимые наслаждения."
 viz_extravagance.t4.property.gaol: "У этого персонажа есть собственная долговая тюрьма: когда бедняки не в состоянии выплатить долги визирю, их ждет стремительное и недвусмысленное наказание. До тех пор, пока родные не сумеют наскрести нужные средства."
 viz_extravagance.t4.property.palace.torture: "«Преисподняя, где правит [ROOT.Char.GetDiarchy.GetDiarch.GetFirstNameNoTooltip]» — так называют сад, в котором, по слухам, этот персонаж наслаждается жестокими истязаниями своих врагов и соперников."
 viz_extravagance.t4.charity.waystations: "Этот персонаж оплачивает содержание застав и караван-сараев по всей державе, где в первую очередь стараются дать кров небольшим группам и одиноким путникам."
 viz_extravagance.t4.charity.bridges: "Этот персонаж славится тем, что тратит средства на строительство и содержание новых мостов по всей державе — признак выдающегося престижа для любого чиновника."
 viz_extravagance.t4.charity.dole: "Этот персонаж оплачивает частную раздачу пищи нуждающимся обитателям владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], чтобы никто не оставался голодным без денег."
 viz_extravagance.t4.charity.housing: "Этот персонаж оплачивает строительство домов под сдачу в пустующих частях владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] или прямо под стенами для тех, кто нуждается в пристанище."
 viz_extravagance.t4.charity.gardens: "Этот персонаж содержит большой общественный сад — уголок покоя в мире, который часто бывает слишком жесток."
 viz_extravagance.t4.charity.civil_service.fire: "Этот персонаж лично отвечает за содержание пожарных во владении [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] — в остальном мире о подобном почти и не слышали."
 viz_extravagance.t4.charity.aqueducts: "Этот персонаж за свой счет построил и поддерживает несколько небольших акведуков, поставляющих пресную воду во владение [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], за что многие бедняки ему несказанно благодарны."
 viz_extravagance.t4.charity.festivals: "Этот персонаж оплачивает ежегодное проведение празднества для жителей владения [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], чего местные обитатели с нетерпением ждут каждый год."
 viz_extravagance.t4.charity.pilgrimage: "Этот персонаж в рамках благотворительности выплачивает пособия и предоставляет все необходимое всем желающим совершить паломничество."
 viz_extravagance.t4.charity.loans: "Этот персонаж в рамках благотворительности гасит законные и не очень займы и долги, от которых страдают бедняки державы."
 diarch_loyalty_score.regency.tradition_ep3_palace_politics: "У [Concept( 'culture', 'культуры' )|E] есть традиция: [GetCultureTradition('tradition_ep3_palace_politics').GetName]"
