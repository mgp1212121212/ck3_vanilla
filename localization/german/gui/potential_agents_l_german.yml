l_german:
 POTENTIAL_AGENTS: "Agenten einladen"
 POTENTIAL_AGENT_HEADER: "Möglicher Agent ([PotentialAgentWindow.GetAgentSlotType.GetNameNoTooltip])"
 AGENT_SCHEME_PHASE_DURATION: "[scheme_speed|E]"
 CHARACTER_SORT_ACCEPTANCE: "Akzeptanz"
 CHARACTER_SORT_CONTRIBUTION: "Beitrag"
 CHARACTER_SORT_RELEVANCE: "Relevanz"
 CHARACTER_SORT_AGE: "Alter"
 CHARACTER_SORT_EDUCATION_AVAILABLE: "Verfügbare Ausbildung"
 CHARACTER_SORT_TITLES: "Rang"
 CHARACTER_SORT_VASSAL_SPEED: "Tempo"
 CHARACTER_SORT_VASSAL_POWER: "Stärke"
 AGENT_ALREADY_CONSIDERING: "#Z Überdenkt unser Angebot#!"
 AGENT_WILL_ACCEPT: "#P Wird sich anschließen ($ACCEPTANCE|=0$)#!"
 AGENT_MAY_ACCEPT: "#Z Kann überzeugt werden ($ACCEPTANCE|=0$)#!"
 AGENT_WONT_ACCEPT: "#N Lehnt ab ($ACCEPTANCE|=0$)#!"
 AGENT_WONT_ACCEPT_DESC: "#T Schließt sich Komplott nicht an#!"
 AGENT_WILL_ACCEPT_DESC: "#T Wird sich dem Komplott anschließen#!"
 AGENT_MAY_ACCEPT_DESC: "#T Kann durch Geschenke und [hooks|E] zur Teilnahme beeinflusst werden#!"
 SCHEME_PROGRESS_EQUAL: "Tempo und Widerstand sind gleich; Fortschritt ändert sich nicht."
 SCHEME_PROGRESS_INCREASE: "Es besteht eine Chance von #P $CHANCE$ %#!, jeden Monat $PROGRESS|0P$ Fortschritt zu erhalten."
 SCHEME_PROGRESS_DECREASE: "Es besteht eine Chance von #N $CHANCE$ %#!, jeden Monat $PROGRESS|0N$ Fortschritt zu verlieren. Der Fortschritt kann nicht unter #V 0#! sinken."
 SCHEME_WITH_GIFT: "Ich erhalte [gold_i][gold|E]: $VALUE|=+0$"
 SCHEME_WITH_HOOK: "Ich setze ein [hook] ein: $VALUE|=+0$"
 SCHEME_AGAINST_RIVAL: "Komplott gegen meinen [Concept('rival', 'Rivalen')|E]: $VALUE|=+0$"
 SCHEME_AGAINST_NEMESIS: "Komplott gegen meinen [nemesis|E]: $VALUE|=+0$"
 SCHEME_AGAINST_FRIEND: "Komplott gegen meinen [friend|E]: $VALUE|=+0$"
 SCHEME_AGAINST_BEST_FRIEND: "Komplott gegen meinen [Concept('best_friend', 'besten Freund')|E]: $VALUE|=+0$"
 SCHEME_FOR_LOVER: "Komplott für meine [lover|E]: $VALUE|=+0$"
 SCHEME_FOR_FRIEND: "Komplott für meinen [friend|E]: $VALUE|=+0$"
 SCHEME_FOR_BEST_FRIEND: "Komplott für meinen [Concept('best_friend', 'besten Freund')|E]: $VALUE|=+0$"
 SCHEME_AGAINST_SOULMATE: "Komplott gegen meinen [Concept('soulmate', 'Seelengefährten')|E]: $VALUE|=+0$"
 SCHEME_FOR_SOULMATE: "Komplott für meinen [Concept('soulmate', 'Seelengefährten')|E]: $VALUE|=+0$"
 SCHEME_AGAINST_WET_NURSE: "Komplott gegen meine [GetCourtPositionType('wet_nurse_court_position').GetName]: $VALUE|=+0$"
 SCHEME_AGAINST_SPOUSE: "Dem Ehepartner treu: $VALUE|=+0$"
 SCHEME_NURSED_CHILD: "Dem gestilltem Kind treu: $VALUE|=+0$"
 SCHEME_IS_SACRED: "Mein Glaube betrachtet Komplotte als etwas Heiliges: $VALUE|=+0=$"
 HAS_LOYAL_TRAIT: "[trait|E] „[GetTrait('loyal').GetName(GetNullCharacter)|U]“: $VALUE|=+0=$"
 HAS_DISLOYAL_TRAIT: "[trait|E] „[GetTrait('disloyal').GetName(GetNullCharacter)|U]“: $VALUE|=+0=$"
 HAS_COMPASSIONATE_TRAIT: "[trait|E] „[GetTrait('compassionate').GetName(GetNullCharacter)|U]“: $VALUE|=+0=$"
 BEFRIEND_MUTUAL_FRIENDS: "„Ich will, dass meine Freunde Freunde sind!“: $VALUE|=+0=$"
 BEFRIEND_WOULD_MAKE_GOOD_FRIEND: "Ziel liegt am Herzen: $VALUE|=+0$"
 BEFRIEND_WOULD_MAKE_BAD_FRIEND: "Ziel liegt am Herzen: $VALUE|=+0$"
 BEFRIEND_WANTS_PEOPLE_TO_GET_ALONG: "Will, dass Leute miteinander auskommen: $VALUE|=+0$"
 SEDUCE_IS_SPOUSE: "„Unsere Ehe ist heilig!“: $VALUE|=+0$"
 SEDUCE_IS_LOVER: "Will, dass ich keine Affären mehr habe!: $VALUE|=+0$"
 NO_POTENTIAL_MEMBERS: "#weak Es gibt keine Agenten zum Einladen#!"
 SCHEME_MURDER_COUPLE: "Ich habe Euren Blutdurst seit jeher geliebt: $VALUE|=+0$"
 SCHEME_MURDER_DISINTERESTED: "Ich will damit nichts zu tun haben: $VALUE|=+0$"
 SCHEME_AGENT_STRIFE_LIKELIHOOD: "[target.GetShortUINameNoTooltip] hat unangemessene [strife|E] verursacht: $VALUE|=+0$"
 ASSIGNED_AGENT_CONTRIBUTION_TOOLTIP: "#WEAK (Max. Beitrag kann nicht über +[EmptyScope.ScriptValue('agent_scheme_contributor_max')] hinausgehen)#!\n[agent_i] Der Gesamtbeitrag dieses [Concept('agent', 'Agenten')|E]:"
 POTENTIAL_AGENT_CONTRIBUTION_TOOLTIP: "#WEAK (Maximaler Beitrag kann nicht über +[EmptyScope.ScriptValue('agent_scheme_contributor_max')] hinausgehen)#!\n[agent_i] Der Gesamtbeitrag dieses [Concept('agent', 'Agenten')|E] würde betragen:"
 AGENT_SPYMASTER: "Ratsspitzel: #P $VALUE|0$ %#!"
 SCHEME_PHASE_DURATION_TRIGGER: "[scheme_speed|E]: $VALUE|=+0$"
 RESPECTED_HOST: "[target.GetShortUINameNoTooltip|U] ist [Select_CString(target.IsFemale, 'eine hochgeschätzte Gastgeberin', 'ein hochgeschätzter Gastgeber')]: $VALUE|=+0$"
 VARANGIAN_LOYALTY: "[target.GetShortUINameNoTooltip|U] hat die eingeschworene Warägertreue: $VALUE|=+0$"
 IS_POLITICKER: "Meine [accolade|E] ermutigt zu unmoralischen politischen Listen: $VALUE|=+0$"
 SCHEME_TAUGHT_TO_SCHEME: "Ihr habt mich gelehrt, für Euch Ränkespiele zu betreiben: $VALUE|=+0$"
 IS_PART_OF_STRUGGLE: "[target.GetShortUINameNoTooltip|U] ist Teil des [Concept('struggle', 'Ringens')|E]: $VALUE|=+0$"
 INTRIGUE_EDUCATION_5_BONUS: "[GetTrait('education_intrigue_5').GetName(GetNullCharacter)|U]: $VALUE|=+0$"
 SCHEME_DUTIOUS_FAMILY: "Ihr seid streng bezüglich familiärer Pflichten: $VALUE|=+0$"
 SCHEME_AGENT_SPOUSE_STRIFE_LIKELIHOOD: "[spouse|E] von [target.GetShortUINameNoTooltip] hat unangemessene [strife|E] verursacht: $VALUE|=+0$"
 ai_opinion.reason.trait_is_sinful.lustful: "„[GetTrait('lustful').GetName(GetNullCharacter)|U]“ ist eine [sin|E]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_virtuous.lustful: "„[GetTrait('lustful').GetName(GetNullCharacter)|U]“ ist eine [virtue|E]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_sinful.chaste: "„[GetTrait('chaste').GetName(GetNullCharacter)|U]“ ist eine [sin|E]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_virtuous.chaste: "„[GetTrait('chaste').GetName(GetNullCharacter)|U]“ ist eine [virtue|E]: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_shunned.owner: "Das wäre beschämend für Euer Geschlecht: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_criminal.owner: "Das wäre sündig für Euer Geschlecht: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_shunned.target: "Das wäre beschämend für das Geschlecht von [target.GetFirstNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_criminal.target: "Das wäre sündig für das Geschlecht von [target.GetFirstNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.ai_values.energy.flavour: "[personality|E] (Arbeitsmoral): $VALUE|=+0$"
 ai_opinion.reason.ai_values.energy: "[personality|E] ($player_facing_ai_energy$): $VALUE|=+0$"
 ai_opinion.reason.ai_values.honour.compelled_to_serve: "[personality|E] ($player_facing_ai_honor$ sollte genügen): $VALUE|=+0$"
 ai_opinion.reason.ai_values.boldness.dislikes_you: "[personality|E] ($player_facing_ai_boldness$ und mag Euch nicht): $VALUE|=+0$"
 ai_opinion.reason.ai_values.vengefulness.dislikes_you: "[personality|E] ($player_facing_ai_vengefulness$ und mag Euch nicht): $VALUE|=+0$"
 ai_opinion.reason.ai_values.dishonour: "[personality|E] (mangelt es an $player_facing_ai_honor$): $VALUE|=+0$"
 ai_opinion.reason.ai_values.vengefulness.dislikes_target: "[personality|E] ($player_facing_ai_vengefulness$ und mag [target.GetFirstNameNoTooltip] nicht): $VALUE|=+0$"
 ai_opinion.reason.courtier.followers_must_work: "Befiehlt [follower|E] zu arbeiten: $VALUE|=+0$"
 ai_opinion.reason.relation.nemesis: "Ihr seid mein [nemesis|E]: $VALUE|=+0$"
 ai_opinion.reason.relation.rival: "Ihr seid mein [rival|E]: $VALUE|=+0$"
 ai_opinion.reason.court_position.stooge: "Ich bin Euer [GetCourtPositionType('stooge_camp_officer').GetNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.laamp_nemesis: "#XB „Macht es doch selber, Schuft!“#!: $VALUE|=+0$"
 ai_opinion.reason.laamp_rival: "#N „Ich werde Euch nicht dienen.“#!: $VALUE|=+0$"
 ai_opinion.reason.laamp_stooge: "„Auf keinen Fall.“ $VALUE|=+0$"
 invite_agent_to_scheme_interaction.tt.no_stooges: "[recipient.GetShortUIName|U] ist nicht Euer [GetCourtPositionType('stooge_camp_officer').GetNameNoTooltip]"
 ai_agent_join_political_base: "Politische Zurückhaltung: $VALUE|=+0$"
 ai_agent_join_political_relative_house_power: "Relative [powerful_family_rating|E]: $VALUE|=+0$"
 scheme_agent_aptitude.skill.prowess: "[prowess|E]"
 scheme_agent_aptitude.skill.intrigue: "[intrigue|E]"
 scheme_agent_aptitude.skill.martial: "[martial|E]"
 scheme_agent_aptitude.skill.diplomacy: "[diplomacy|E]"
 scheme_agent_aptitude.skill.learning: "[learning|E]"
 scheme_agent_aptitude.skill.stewardship: "[stewardship|E]"
 scheme_agent_aptitude.trait.vengeful.target_is_rival: "[GetTrait('vengeful').GetName(GetNullCharacter)|U] gegen [Concept('rival', 'Rivalen')|E]"
 scheme_agent_aptitude.trait.sadistic: "[GetTrait('sadistic').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.callous: "[GetTrait('callous').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.patient: "[GetTrait('patient').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.brave: "[GetTrait('brave').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.deceitful: "[GetTrait('deceitful').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.arbitrary: "[GetTrait('arbitrary').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.just: "[GetTrait('just').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.honest: "[GetTrait('honest').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.craven: "[GetTrait('craven').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.impatient: "[GetTrait('impatient').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.compassionate: "[GetTrait('compassionate').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.forgiving: "[GetTrait('forgiving').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.forgiving.target_is_rival: "[GetTrait('forgiving').GetName(GetNullCharacter)] gegen [Concept('rival', 'Rivalen')|E]"
 scheme_agent_aptitude.trait.diligent: "[GetTrait('diligent').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.paranoid: "[GetTrait('paranoid').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.trusting: "[GetTrait('trusting').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.lazy: "[GetTrait('lazy').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.gregarious: "[GetTrait('gregarious').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.shy: "[GetTrait('shy').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.calm: "[GetTrait('calm').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.wrathful: "[GetTrait('wrathful').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.loyal: "[GetTrait('loyal').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.confider: "[GetTrait('confider').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.humble: "[GetTrait('humble').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.content: "[GetTrait('content').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.ambitious: "[GetTrait('ambitious').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.arrogant: "[GetTrait('arrogant').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.contrite: "[GetTrait('contrite').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.disloyal: "[GetTrait('disloyal').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.lustful: "[GetTrait('lustful').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.chaste: "[GetTrait('chaste').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.fickle: "[GetTrait('fickle').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.stubborn: "[GetTrait('stubborn').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.eccentric: "[GetTrait('eccentric').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.temperate: "[GetTrait('temperate').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.gluttonous: "[GetTrait('gluttonous').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.zealous: "[GetTrait('zealous').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.cynical: "[GetTrait('cynical').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.greedy: "[GetTrait('greedy').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.generous: "[GetTrait('generous').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.herbalist: "[GetTrait('lifestyle_herbalist').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.mystic: "[GetTrait('lifestyle_mystic').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physician: "[GetTrait('lifestyle_physician').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.witch: "[GetTrait('witch').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.disloyal.depose_scheme: "„[GetTrait('disloyal').GetName(GetNullCharacter)|U]“ in einem „[GetScheme('depose').GetTypeName]“-[scheme|E]"
 scheme_agent_aptitude.loyal.depose_scheme: "„[GetTrait('loyal').GetName(GetNullCharacter)|U]“ in einem „[GetScheme('depose').GetTypeName]“-[scheme|E]"
 scheme_agent_aptitude.trait.diplomat: "[GetTrait('diplomat').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.family_first: "[GetTrait('family_first').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.august: "[GetTrait('august').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.strategist: "[GetTrait('strategist').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.overseer: "[GetTrait('overseer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.gallant: "[GetTrait('gallant').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.architect: "[GetTrait('architect').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.administrator: "[GetTrait('administrator').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.avaricious: "[GetTrait('avaricious').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.schemer: "[GetTrait('schemer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.seducer: "[GetTrait('seducer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.torturer: "[GetTrait('torturer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.whole_of_body: "[GetTrait('whole_of_body').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.scholar: "[GetTrait('scholar').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.theologian: "[GetTrait('theologian').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_bad_1: "[GetTrait('physique_bad_1').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_bad_2: "[GetTrait('physique_bad_2').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_bad_3: "[GetTrait('physique_bad_3').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_good_1: "[GetTrait('physique_good_1').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_good_2: "[GetTrait('physique_good_2').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.physique_good_3: "[GetTrait('physique_good_3').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_bad_1: "[GetTrait('intellect_bad_1').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_bad_2: "[GetTrait('intellect_bad_2').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_bad_3: "[GetTrait('intellect_bad_3').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_good_1: "[GetTrait('intellect_good_1').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_good_2: "[GetTrait('intellect_good_2').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.intellect_good_3: "[GetTrait('intellect_good_3').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.beauty_bad_1: "[GetTrait('beauty_bad_1').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.beauty_bad_2: "[GetTrait('beauty_bad_2').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.beauty_bad_3: "[GetTrait('beauty_bad_3').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.beauty_good_1: "[GetTrait('beauty_good_1').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.beauty_good_2: "[GetTrait('beauty_good_2').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.beauty_good_3: "[GetTrait('beauty_good_3').GetName(GetNullCharacter)|U]"
 scheme_agent_aptitude.trait.weak: "[GetTrait('weak').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.drunkard: "[GetTrait('drunkard').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.athletic: "[GetTrait('athletic').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.blind: "[GetTrait('blind').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.strong: "[GetTrait('strong').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.shrewd: "[GetTrait('shrewd').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.berserker: "[GetTrait('berserker').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.shieldmaiden: "[GetTrait('shieldmaiden').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.varangian: "[GetTrait('varangian').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.logistician: "[GetTrait('logistician').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.military_engineer: "[GetTrait('military_engineer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.organizer: "[GetTrait('organizer').GetName(GetNullCharacter)]"
 scheme_agent_aptitude.trait.forder: "[GetTrait('forder').GetName(GetNullCharacter)]"
 #################################################
 #Debug Agents
 agent_hitman: "Hitman"
 agent_hitman_desc: "Ein mysteriöser, knallharter Glatzkopf, der die Wahrscheinlichkeit erhöht, dass Euer Mordversuch gelingt."
 agent_vampire: "Vampir"
 agent_vampire_desc: "Ein Agent, der für seine Geheimhaltung bekannt ist."
 agent_werewolf: "Werwolf"
 agent_werewolf_desc: "Ein Agent, der dafür bekannt ist, schnell aus der Haut zu fahren."
 agent_mage: "Magier"
 agent_mage_desc: "Ein Agent, der für seine Grenzüberschreitungen bekannt ist."
 agent_wraith: "Gespenst"
 agent_wraith_desc: "Ein Agent, der dafür bekannt ist, der absolut und kategorisch Beste zu sein."
 agent_changeling: "Wechselbalg"
 agent_changeling_desc: "Ein Agent, der für seine Dynamik bekannt ist."
 #################################################
 #Max Success Chance Agents
 agent_assassin: "Meuchler"
 agent_assassin_i: "[success_chance_max_i]"
 agent_assassin_desc: "#WEAK Messer, Gift oder Heugabel – es schert mich nicht, solange das Ziel nur bei Morgengrauen nicht mehr am Leben ist.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('sadistic').GetName(GetNullCharacter)]“ und „[GetTrait('patient').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('compassionate').GetName(GetNullCharacter)]“ und „[GetTrait('impatient').GetName(GetNullCharacter)]“"
 agent_thug: "Grobian"
 agent_thug_i: "[success_chance_max_i]"
 agent_thug_desc: "#WEAK Eins über die Rübe, und dann haltet das Fass bereit. Es soll schnell gehen, aber laut muss es nicht sein.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('wrathful').GetName(GetNullCharacter)]“ und „[GetTrait('callous').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('calm').GetName(GetNullCharacter)]“ und [GetTrait('compassionate').GetName(GetNullCharacter)]“"
 agent_comrade_in_arms: "Rückendeckung"
 agent_comrade_in_arms_i: "[success_chance_max_i]"
 agent_comrade_in_arms_desc: "#WEAK Nach einem kleinen Weilchen werde ich mich daran „erinnern“, dass ich irgendwo mein Medaillon habe fallen lassen, und davonstromern, damit Ihr beide Euch … unter vier Augen unterhalten könnt.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('deceitful').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('honest').GetName(GetNullCharacter)]“"
 agent_musician: "Musikant"
 agent_musician_i: "[success_chance_max_i]"
 agent_musician_desc: "#WEAK Könnte man es Leben nennen, gäbe es die Musik nicht? Ich denke nicht, doch mir fehlt es ja auch nie an Musik.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('eccentric').GetName(GetNullCharacter)]“ und „[GetTrait('stubborn').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('fickle').GetName(GetNullCharacter)]“ und „[GetTrait('impatient').GetName(GetNullCharacter)]“"
 agent_tumbler: "Gaukler"
 agent_tumbler_i: "[success_chance_max_i]"
 agent_tumbler_desc: "#WEAK Tanzen, springen, herumtollen und sich verrenken! Fenster oder Mauer: Ich falle wie eine Katze und springe wie ein Spatz.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('brave').GetName(GetNullCharacter)]“ und „[GetTrait('temperate').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('craven').GetName(GetNullCharacter)]“ und „[GetTrait('gluttonous').GetName(GetNullCharacter)]“"
 agent_poet: "Dichter"
 agent_poet_i: "[success_chance_max_i]"
 agent_poet_desc: "#WEAK Jeder kleine Adlige kann durch etwas Bildung lernen, seine Worte zu meistern – doch es braucht schon wahres, ungezügeltes Talent, um Reime zu schmieden.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E], [intrigue_i] [intrigue|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“"
 agent_shill: "Lockvogel"
 agent_shill_i: "[success_chance_max_i]"
 agent_shill_desc: "#WEAK Eine freundliche Stimme von jemand völlig Fremden kann einiges bei einer Menge bewirken – und wer vermag schon wirklich zu sagen, wer wen kennt?#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('arbitrary').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('just').GetName(GetNullCharacter)]“"
 agent_diplomat: "Diplomat"
 agent_diplomat_i: "[success_chance_max_i]"
 agent_diplomat_desc: "#WEAK In manchen Lagen ist Feingefühl gefragt, und es gibt nichts Feineres als Worte, die man insgeheim flüstert.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('gregarious').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('shy').GetName(GetNullCharacter)]“"
 agent_scribe: "Schreiber"
 agent_scribe_i: "[success_chance_max_i]"
 agent_scribe_desc: "#WEAK Ich sage immer, dass die besten Bediensteten zwar geübt im Schreiben, aber untertänig sind, was ihre Anweisungen angeht.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('humble').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('arrogant').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_wolf_hunter: "Wolfsjäger"
 agent_wolf_hunter_i: "[success_chance_max_i]"
 agent_wolf_hunter_desc: "#WEAK Romantik ohne Gefahr fehlt die Leidenschaft, und was verkörpert die Gefahr besser als der Pelz eines Wolfs?#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E] & [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('brave').GetName(GetNullCharacter)]“ und „[GetTrait('compassionate').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('brave').GetName(GetNullCharacter)]“ und „[GetTrait('sadistic').GetName(GetNullCharacter)]“"
 agent_thief: "Dieb"
 agent_thief_i: "[success_chance_max_i]"
 agent_thief_desc: "#WEAK Gewalt ist – so sagt man – das Erkennungszeichen von Stümpern.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [prowess_i] [prowess|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('patient').GetName(GetNullCharacter)]“ und „[GetTrait('deceitful').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('impatient').GetName(GetNullCharacter)]“ und „[GetTrait('honest').GetName(GetNullCharacter)]“"
 agent_tutor: "Tutor"
 agent_tutor_i: "[success_chance_max_i]"
 agent_tutor_desc: "#WEAK Ein guter Lehrmeister passt sich ebenso sehr an seinen Schüler an wie an sein Fach.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('diligent').GetName(GetNullCharacter)]“ und „[GetTrait('humble').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('sadistic').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_poisoner: "Vergifter"
 agent_poisoner_i: "[success_chance_max_i]"
 agent_poisoner_desc: "#WEAK Die richtige Kräutermischung kann selbst den Stärksten in ein frühes Grab befördern.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_herbalist').GetName(GetNullCharacter)]“ und „[GetTrait('callous').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('compassionate').GetName(GetNullCharacter)]“"
 agent_eunuch: "Eunuch"
 agent_eunuch_i: "[success_chance_max_i]"
 agent_eunuch_desc: "#WEAK Still wie der Mond bewegt er sich durch die Marmorflure, ein Hüter von Geheimnissen in einem Land, in dem Worte eine Währung darstellen. Im Schatten von Kaisern wispert er und formt das Schicksal des Reiches mit nichts als dem leisesten Murmeln.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('patient').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('compassionate').GetName(GetNullCharacter)]“ und „[GetTrait('honest').GetName(GetNullCharacter)]“"
 agent_muscle: "Muskeln"
 agent_muscle_i: "[success_chance_max_i]"
 agent_muscle_desc: "#WEAK Manchmal braucht man Muskeln mehr als Köpfchen.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('strong').GetName(GetNullCharacter)]“ und „[GetTrait('athletic').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('weak').GetName(GetNullCharacter)]“ und „[GetTrait('craven').GetName(GetNullCharacter)]“"
 agent_physic: "Physikus"
 agent_physic_i: "[success_chance_max_i]"
 agent_physic_desc: "#WEAK Eine Kenntnis der menschlichen Anatomie wird vorausgesetzt, doch es braucht auch einen starken Magen, um das in die Praxis umzusetzen.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_physician').GetName(GetNullCharacter)]“ und „[GetTrait('whole_of_body').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('impatient').GetName(GetNullCharacter)]“ und „[GetTrait('wrathful').GetName(GetNullCharacter)]“"
 agent_smith: "Schmied"
 agent_smith_i: "[success_chance_max_i]"
 agent_smith_desc: "#WEAK Nichts jedes Kunstwerk wird gemalt – so manches wird auch #EMP geschaffen#!.\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [stewardship_i] [stewardship|E] & [prowess_i] [prowess|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('ambitious').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('lazy').GetName(GetNullCharacter)]“ und „[GetTrait('fickle').GetName(GetNullCharacter)]“"
 agent_ambusher: "Hinterhaltleger"
 agent_ambusher_i: "[success_chance_max_i]"
 agent_ambusher_desc: "#WEAK Schlagt als Erstes zu, schlagt hart zu, schlagt unerwartet zu – wer sich daran hält, muss kein zweites Mal zuschlagen.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]“ und „[GetTrait('schemer').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('compassionate').GetName(GetNullCharacter)]“ und „[GetTrait('just').GetName(GetNullCharacter)]“"
 agent_bodyguard: "Leibwächter"
 agent_bodyguard_i: "[success_chance_max_i]"
 agent_bodyguard_desc: "#WEAK Ein gutes Schwert in Griffweite kann noch effektiver sein, wenn es schon jemand in Händen hält.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [prowess_i] [prowess|E] & [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('strong').GetName(GetNullCharacter)]“ und „[GetTrait('physique_good_3').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('craven').GetName(GetNullCharacter)]“ und „[GetTrait('weak').GetName(GetNullCharacter)]“"
 agent_scout: "Aufklärer"
 agent_scout_i: "[success_chance_max_i]"
 agent_scout_desc: "#WEAK Wenn man nicht weiß, was einen erwartet, kann man auch nicht rechtzeitig reagieren.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_traveler').GetName(GetNullCharacter)]“ und „[GetTrait('forder').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('craven').GetName(GetNullCharacter)]“ und „[GetTrait('fickle').GetName(GetNullCharacter)]“"
 agent_outrider: "Vorreiter"
 agent_outrider_i: "[success_chance_max_i]"
 agent_outrider_desc: "#WEAK Beweglichkeit macht so manches möglich – ein Handlager am rechten Ort kann Berge versetzen und ein gutes Pferd eben jenen Handlager.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [martial_i] [martial|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]“ und „[GetTrait('lifestyle_traveler').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('craven').GetName(GetNullCharacter)]“ und „[GetTrait('fickle').GetName(GetNullCharacter)]“"
 agent_bookkeeper: "Buchhalter"
 agent_bookkeeper_i: "[success_chance_max_i]"
 agent_bookkeeper_desc: "#WEAK Ach, die Summen? Ja, sie passen. Natürlich, natürlich …#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('scholar').GetName(GetNullCharacter)]“ und „[GetTrait('theologian').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('arbitrary').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_bailiff: "Landvogt"
 agent_bailiff_i: "[success_chance_max_i]"
 agent_bailiff_desc: "#WEAK Es steht uns nicht zu, zu hinterfragen, was richtig ist – wir setzen nur durch, was geschrieben steht.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('just').GetName(GetNullCharacter)]“ und „[GetTrait('overseer').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('content').GetName(GetNullCharacter)]“ und „[GetTrait('shy').GetName(GetNullCharacter)]“"
 agent_draughtsman: "Zeichner"
 agent_draughtsman_i: "[success_chance_max_i]"
 agent_draughtsman_desc: "#WEAK Ein Genie der Maschinen, ein außergewöhnlicher Schrauber, der Eure Einfälle Wirklichkeit werden lässt … Zumindest auf dem Papier.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('architect').GetName(GetNullCharacter)]“ und „[GetTrait('journaller').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('content').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_outcast: "Ausgestoßener"
 agent_outcast_i: "[success_chance_max_i]"
 agent_outcast_desc: "#WEAK Ein Außenseiter kann eine hervorragende Quelle sein: Wer stellt schon infrage, warum eine arme Seele im Schatten herumlungert und wie sich ein Bettler aussucht, unter welchem Fenster er wartet?#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('humble').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('ambitious').GetName(GetNullCharacter)]“"
 agent_wrangler: "Bändiger"
 agent_wrangler_i: "[success_chance_max_i]"
 agent_wrangler_desc.flavour: "#WEAK Es ist eine Kunst, ein Tier so zu beruhigen und gefügig zu machen, dass es sich dem eigenen Willen unterwirft – am besten bevor es einen anfallen kann.#!"
 agent_wrangler_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('diplomat').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('forgiving').GetName(GetNullCharacter)]“"
 agent_wrangler_desc: "$agent_wrangler_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$agent_wrangler_desc.requirements$"
 agent_wrangler_speed: "$agent_wrangler$"
 agent_wrangler_speed_i: "[scheme_speed_i]"
 agent_wrangler_speed_desc: "$agent_wrangler_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_wrangler_desc.requirements$"
 agent_devotee: "Ergebener"
 agent_devotee_i: "[success_chance_max_i]"
 agent_devotee_desc: "#WEAK Habt Ihr von meinem Anführer gehört? Meinem tapferen und gerechten Lehnsherrn? Wohin er auch geht: Ich werde folgen.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('eccentric').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('callous').GetName(GetNullCharacter)]“"
 agent_alchemist: "Alchemist"
 agent_alchemist_i: "[success_chance_max_i]"
 agent_alchemist_desc: "#WEAK Diese Welt ist nur eine Ansammlung seltsamer Substanzen! Ein Strudel unerklärlicher Kräfte! Wer genug versteht, kann die Schöpfung selbst unter seine Kontrolle bringen …#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_physician').GetName(GetNullCharacter)]“ und „[GetTrait('eccentric').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('content').GetName(GetNullCharacter)]“ und „[GetTrait('cynical').GetName(GetNullCharacter)]“"
 #################################################
 #Secrecy Agents
 agent_lookout: "Späher"
 agent_lookout_i: "[secrecy_i]"
 agent_lookout_desc.flavour: "#WEAK Ein Paar Hände, das die Drecksarbeit macht, nutzt nichts, wenn niemand für es Schmiere steht.#!"
 agent_lookout_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('patient').GetName(GetNullCharacter)]“ und „[GetTrait('paranoid').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('impatient').GetName(GetNullCharacter)]“ und „[GetTrait('trusting').GetName(GetNullCharacter)]“"
 agent_lookout_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$agent_lookout_desc.requirements$"
 agent_lookout_success: "$agent_lookout$"
 agent_lookout_success_i: "[success_chance_max_i]"
 agent_lookout_success_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$agent_lookout_desc.requirements$"
 agent_lookout_speed: "$agent_lookout$"
 agent_lookout_speed_i: "[scheme_speed_i]"
 agent_lookout_speed_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_lookout_desc.requirements$"
 agent_alibi: "Ausrede"
 agent_alibi_i: "[secrecy_i]"
 agent_alibi_desc: "#WEAK Lächerlich! Wir haben den ganzen Abend miteinander verbracht – das kann ich beschwören! Ihr wisst, dass auf mein Wort Verlass ist.#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('loyal').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('disloyal').GetName(GetNullCharacter)]“"
 agent_justiciar: "Justiziar"
 agent_justiciar_i: "[secrecy_i]"
 agent_justiciar_desc.flavour: "#WEAK Eine Kenntnis der Gesetze und ein Ruf, sie gerecht anzuwenden, sind bewundernswerte, wenn auch sehr trockene Eigenschaften.#!"
 agent_justiciar_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('just').GetName(GetNullCharacter)]“ und „[GetTrait('honest').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('arbitrary').GetName(GetNullCharacter)]“ und „[GetTrait('deceitful').GetName(GetNullCharacter)]“"
 agent_justiciar_desc: "#WEAK $agent_justiciar_desc.flavour$#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$agent_justiciar_desc.requirements$"
 agent_justiciar_speed: "$agent_justiciar$"
 agent_justiciar_speed_i: "[scheme_speed_i]"
 agent_justiciar_speed_desc: "$agent_justiciar_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_justiciar_desc.requirements$"
 agent_decoy: "Lockvogel"
 agent_decoy_i: "[secrecy_i]"
 agent_decoy_desc: "#WEAK Ein umgekippter Kelch, ein Witz zur rechten Zeit, eine dreiste Herausforderung zum Duell. Alle Blicke werden anderweitig abgelenkt, und niemand ahnt, dass der wahre Plan sich im Schatten entspinnt.#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('eccentric').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('lazy').GetName(GetNullCharacter)]“ und „[GetTrait('content').GetName(GetNullCharacter)]“"
 #################################################
 #Speed Agents
 agent_infiltrator: "Unterwanderer"
 agent_infiltrator_i: "[scheme_speed_i]"
 agent_infiltrator_desc: "#WEAK Ein nicht vorgelegter Riegel, eine verkaterte Wache, eine handgezeichnete Karte, die ein Freund von drinnen über die Mauern wirft.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_footpad: "Straßenräuber"
 agent_footpad_i: "[scheme_speed_i]"
 agent_footpad_desc: "#WEAK Eine Geldbörse, ein Hals, ein Bauch – es gibt vieles, worin man auf einem Hinterhof eine Klinge bohren kann, wenn man nur den rechten Augenblick abpasst.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [prowess_i] [prowess|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('calm').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('wrathful').GetName(GetNullCharacter)]“"
 agent_socialite: "Feierlöwe"
 agent_socialite_i: "[scheme_speed_i]"
 agent_socialite_desc: "#WEAK Ein Trinkspruch, meine Herren und Damen, auf einen guten Freund von mir, von dem Ihr alle hoffentlich ebenso viel haltet wie von mir!#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E], [intrigue_i] [intrigue|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('arrogant').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('humble').GetName(GetNullCharacter)]“"
 agent_gabbler: "Schwätzer"
 agent_gabbler_i: "[scheme_speed_i]"
 agent_gabbler_desc.flavour: "#WEAK Es ist eine Kunst für sich, stundenlang zu reden und dabei rein gar nichts zu sagen.#!"
 agent_gabbler_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('gregarious').GetName(GetNullCharacter)]“ und „[GetTrait('fickle').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('humble').GetName(GetNullCharacter)]“"
 agent_gabbler_desc: "$agent_gabbler_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_gabbler_desc.requirements$"
 agent_gabbler_secrecy: "$agent_gabbler$"
 agent_gabbler_secrecy_i: "[secrecy_i]"
 agent_gabbler_secrecy_desc: "$agent_gabbler_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$agent_gabbler_desc.requirements$"
 agent_cleric: "Kleriker"
 agent_cleric_i: "[scheme_speed_i]"
 agent_cleric_desc.flavour: "#WEAK Der Glaube braucht das Feuer wie das Land den Regen. Man kann sie voneinander trennen, doch sie sind ärmer ohne einander.#!"
 agent_cleric_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [learning_i][learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('zealous').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('cynical').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_cleric_desc: "$agent_cleric_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_cleric_desc.requirements$"
 agent_cleric_success: "$agent_cleric$"
 agent_cleric_success_i: "[success_chance_max_i]"
 agent_cleric_success_desc: "$agent_cleric_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$agent_cleric_desc.requirements$"
 agent_theologian: "Theologe"
 agent_theologian_i: "[scheme_speed_i]"
 agent_theologian_desc.flavour: "#WEAK Religion ist mehr als nur Leidenschaft: Rhetorik, Entschlossenheit und fortschrittliches Denken sind Herz und Atem der Gelehrsamkeit.#!"
 agent_theologian_desc.requirements: "$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('just').GetName(GetNullCharacter)]“ und „[GetTrait('stubborn').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('arbitrary').GetName(GetNullCharacter)]“ und „[GetTrait('fickle').GetName(GetNullCharacter)]“"
 agent_theologian_desc: "$agent_theologian_desc.flavour$\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$agent_theologian_desc.requirements$"
 agent_theologian_success: "$agent_theologian$"
 agent_theologian_success_i: "[success_chance_max_i]"
 agent_theologian_success_desc: "$agent_theologian_desc.flavour$\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$agent_theologian_desc.requirements$"
 agent_herald: "Herold"
 agent_herald_i: "[scheme_speed_i]"
 agent_herald_desc: "#WEAK Ein guter Herold ist laut, einfühlsam und vollkommen unerschrocken.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('arrogant').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('humble').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_drillmaster: "Drillmeister"
 agent_drillmaster_i: "[scheme_speed_i]"
 agent_drillmaster_desc: "#WEAK Denkt daran: Wir drillen unsere Besten, damit wir unter den schlechtesten Bedingungen kämpfen können.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [martial_i] [martial|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('diligent').GetName(GetNullCharacter)]“ und „[GetTrait('patient').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('content').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_tracker: "Spurenleser"
 agent_tracker_i: "[scheme_speed_i]"
 agent_tracker_desc: "#WEAK Der Schlamm ist noch feucht, wo der Narr hingetreten ist – wir dürften keine Stunde hinter ihm liegen!#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [martial_i] [martial|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('lifestyle_traveler').GetName(GetNullCharacter)]“ und „[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('impatient').GetName(GetNullCharacter)]“ und „[GetTrait('lazy').GetName(GetNullCharacter)]“"
 agent_planner: "Planer"
 agent_planner_i: "[scheme_speed_i]"
 agent_planner_desc: "#WEAK Einen Plan sorgfältig zu erstellen, ist die eine Sache, doch der Unterschied zwischen einen guten Planer und einem Fachmann liegt auf der Hand: Sobald etwas schiefläuft, kann der Fachmann aus dem Stegreif handeln.#!\n$EFFECT_LIST_BULLET$ Bietet [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('architect').GetName(GetNullCharacter)]“ und „[GetTrait('paranoid').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('lazy').GetName(GetNullCharacter)]“ und „[GetTrait('profligate').GetName(GetNullCharacter)]“"
 agent_supplier: "Versorger"
 agent_supplier_i: "[scheme_speed_i]"
 agent_supplier_desc: "#WEAK Um beim Handeln erfolgreich zu sein, braucht es Verbindungen, Zeitplanung und Gerissenheit. Die Logistik verbindet alle drei.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [stewardship_i] [stewardship|E] & [diplomacy_i] [diplomacy|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('avaricious').GetName(GetNullCharacter)]“ und „[GetTrait('overseer').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('shy').GetName(GetNullCharacter)]“ und „[GetTrait('stubborn').GetName(GetNullCharacter)]“"
 #Political Scheme Agents
 scheme_agent_aptitude.scaled_house_power_score: "Skalierende [powerful_family_rating|E]"
 agent_intermediary: "Mittelsmann"
 agent_intermediary_i: "[success_chance_max_i]"
 agent_intermediary_desc: "$agent_diplomat_desc$"
 agent_proponent: "Fürsprecher"
 agent_proponent_i: "[success_chance_max_i]"
 agent_proponent_desc: "#WEAK Jemand, der Eure Leistungen lauthals und stolz verkündet – ungeachtet dessen, ob sie echt sind oder nicht –, kann wahre Wunder für den eigenen Ruf wirken.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('gregarious').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('shy').GetName(GetNullCharacter)]“"
 agent_sycophant: "Speichellecker"
 agent_sycophant_i: "[success_chance_max_i]"
 agent_sycophant_desc: "#WEAK Ein Kompliment ist bei den Mächtigen nie fehl am Platz. Sorgsam bedachte Nettigkeiten und kluges Einschmeicheln umso mehr.#!\n$EFFECT_LIST_BULLET$ Bietet [success_chance_max_i] [scheme_potential|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('stubborn').GetName(GetNullCharacter)]“ und „[GetTrait('deceitful').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('honest').GetName(GetNullCharacter)]“ und „[GetTrait('humble').GetName(GetNullCharacter)]“"
 agent_political_socialite: "Feierlöwe"
 agent_political_socialite_i: "[scheme_speed_i]"
 agent_political_socialite_desc: "$agent_socialite_desc$"
 agent_bureaucrat: "Bürokrat"
 agent_bureaucrat_i: "[scheme_speed_i]"
 agent_bureaucrat_desc: "#WEAK Das Wissen um richtige Abläufe und ordentliche Ablagen gewährt unzählige Gelegenheiten für konstruktive Unehrlichkeiten.#!\n$EFFECT_LIST_BULLET$ Verringert [scheme_speed_i] [scheme_speed|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('architect').GetName(GetNullCharacter)]“ und „[GetTrait('paranoid').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('lazy').GetName(GetNullCharacter)]“ und „[GetTrait('impatient').GetName(GetNullCharacter)]“"
 agent_bureaucrat_title: "$agent_bureaucrat$"
 agent_bureaucrat_title_i: "$agent_bureaucrat_i$"
 agent_bureaucrat_title_desc: "$agent_bureaucrat_desc$"
 agent_courtesan: "Kurtisane"
 agent_courtesan_i: "[secrecy_i]"
 agent_courtesan_desc: "#WEAK Man würde meinen, die Großen und Mächtigen wüssten, wem sie ihre Geheimnisse anvertrauen können. Doch dies ist nicht der Fall.#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$EFFECT_LIST_BULLET$ Erfordert [diplomacy_i] [diplomacy|E] & [intrigue_i] [intrigue|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('beauty_good_3').GetName(GetNullCharacter)]“ und „[GetTrait('lustful').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('beauty_bad_3').GetName(GetNullCharacter)]“ und „[GetTrait('chaste').GetName(GetNullCharacter)]“"
 agent_amanuensis: "Amanuensis"
 agent_amanuensis_i: "[secrecy_i]"
 agent_amanuensis_desc: "#WEAK Ein Sekretär ist immer da, wird immer übersehen, macht immer Notizen in einer Ecke …#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$EFFECT_LIST_BULLET$ Erfordert [learning_i] [learning|E] & [stewardship_i] [stewardship|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('paranoid').GetName(GetNullCharacter)]“ und „[GetTrait('diligent').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('lazy').GetName(GetNullCharacter)]“ und „[GetTrait('profligate').GetName(GetNullCharacter)]“"
 agent_eunuch_speed: "Eunuch"
 agent_eunuch_speed_i: "[secrecy_i]"
 agent_eunuch_speed_desc: "#WEAK Still wie der Mond bewegt er sich durch die Marmorflure, ein Hüter von Geheimnissen in einem Land, in dem Worte eine Währung darstellen. Im Schatten von Kaisern wispert er und formt das Schicksal des Reiches mit nichts als dem leisesten Murmeln.#!\n$EFFECT_LIST_BULLET$ Bietet [secrecy_i] [secrecy|E]\n$EFFECT_LIST_BULLET$ Erfordert [intrigue_i] [intrigue|E] & [learning_i] [learning|E]\n$EFFECT_LIST_BULLET$ #P Vorteile#! durch [traits|E] wie „[GetTrait('deceitful').GetName(GetNullCharacter)]“ und „[GetTrait('patient').GetName(GetNullCharacter)]“\n$EFFECT_LIST_BULLET$ #N Nachteile#! durch [traits|E] wie „[GetTrait('compassionate').GetName(GetNullCharacter)]“ und „[GetTrait('honest').GetName(GetNullCharacter)]“"
