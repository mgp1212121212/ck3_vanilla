l_german:
 activity_invite_rule_hunters: "Hofjäger"
 activity_invite_rule_glory_hounds: "Ruhmesjäger-Vasallen"
 activity_window_character_animal_slayer: "Tiertöter\n[Character.GetShortUINameNoTooltip|U]"
 activity_window_character_master_of_hunt: "$master_of_hunt_court_position$\n[Character.GetShortUINameNoTooltip|U]"
 activity_window_character_hunter: "Jäger\n[Character.GetShortUINameNoTooltip|U]"
 standard_header: "$hunt_type_standard$:"
 legendary_header: "$hunt_type_legendary$:"
 falconry_header: "$hunt_type_falconry$:"
 activity_hunt_destination_selection: "[SelectLocalization(GetPlayer.GetGovernment.HasGovernmentFlag('government_is_nomadic'), 'activity_hunt_destination_selection_nomadic','activity_hunt_destination_selection_regular')]"
 activity_hunt_destination_selection_nomadic: "Manche Orte sind besser für eine Jagd geeignet als andere. Für übliche Jagden ist die [hunt_success_chance_no_prefix|E] in Provinzen erhöht, die wild und abgelegen sind, für eine Nerge hingegen sind Provinzen mit hoher [fertility|E], in denen lange Zeit keine Nerge stattfand, wünschenswert."
 activity_hunt_destination_selection_regular: "Manche Orte sind besser für eine Jagd geeignet als andere. Die [hunt_success_chance_no_prefix|E] ist in solchen Provinzen erhöht, die wild und abgelegen sind, in denen es kürzlich [hunt_sightings_no_prefix|E] gab oder die besondere [buildings|E] aufweisen."
 hunt_success_bar: "[hunt_success_chance_no_prefix|E]: [Activity.MakeScope.Var('hunt_success_chance').GetValue|V1] %#!"
 hunt_cannot_hunt_parameter_tt: "[culture|E] kann nicht jagen"
 #Province Descs
 activity_hunt_province_desc: "Ihr veranstaltet eine Jagd in [ROOT.Province.GetName]\nVerschiedenste Faktoren beeinflussen die [hunt_success_chance|E]\n"
 activity_hunt_province_desc_standard_sighting: "#P +++ Sichtung [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_ART_IND_G')] [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_GEN')]#!\n"
 activity_hunt_province_desc_dangerous_sighting: "#P +++ Sichtung [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_ART_IND_G')] [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_GEN')]#!\n"
 activity_hunt_province_desc_falconry_sighting: "#P +++ Sichtung [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_ART_IND_G')] [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType_DE_GEN')]#!\n"
 activity_hunt_province_desc_terrain_great: "#P ++ [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_good: "#P + [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_bad: "#N - [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_terrible: "#N -- [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_mismanaged_game: "#N - [GetModifier('hunt_mismanaged_game_modifier').GetName]#!"
 activity_hunt_province_desc_punished_poachers: "#P + [GetModifier('hunt_punished_locals_modifier').GetName]#!"
 activity_hunt_province_desc_abundant_game: "#P + [GetModifier('ep3_abundant_game_modifier').GetName]#!"
 activity_hunt_province_desc_no_holding: "#P + Kein [holding|P]#!\n"
 activity_hunt_province_desc_hunting_grounds_minor: "#P + $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_hunting_grounds_medium: "#P ++ $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_hunting_grounds_major: "#P +++ $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_rainbow_mountains_major: "#P +++ $building_type_rainbow_mountains_01$#! ([building|E])\n"
 activity_hunt_province_desc_visegrad_castle_01_major: "#P +++ $building_type_visegrad_castle_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_minor: "#N - $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_medium: "#N -- $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_major: "#N --- $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_minor: "#P + $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_medium: "#P ++ $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_major: "#P +++ $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_development: "#N - Hohe Entwicklung#!\n"
 activity_hunt_province_desc_development_bad: "#N -- Hohe Entwicklung#!\n"
 activity_hunt_province_desc_development_terrible: "#N --- Hohe Entwicklung#!\n"
 activity_hunt_province_desc_recent_hunt_major: "#N --- Jüngst unternommene Jagden#!\n"
 activity_hunt_province_desc_recent_hunt_medium: "#N -- Jüngst unternommene Jagden#!\n"
 activity_hunt_province_desc_recent_hunt_minor: "#N - Jüngst unternommene Jagden#!\n"
 activity_hunt_province_desc_wild_predators: "#N - [GetModifier('ep3_wild_predators_modifier').GetName]#!"
 activity_hunt_province_desc_culture: "#P + [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([culture_traditions|E])\n"
 activity_hunt_province_desc_hidden_hinterlands: "#p +++ Verborgenes Hinterland#!\n"
 activity_hunt_province_desc_fertility: "#P + Hohe Fruchtbarkeit#!\n"
 activity_hunt_province_desc_fertility_good: "#P ++ Hohe Fruchtbarkeit#!\n"
 activity_hunt_province_desc_fertility_great: "#P +++ Hohe Fruchtbarkeit#!\n"
 #Host Desc
 activity_hunt_host_desc_piety: "$BULLET_WITH_TAB$Teilnehmer können an [piety_i|E][piety|E] gewinnen\n$BULLET_WITH_TAB$Teilnehmer können [stress_loss_i][stress|E] abbauen\n"
 activity_hunt_host_desc_prestige: "$BULLET_WITH_TAB$Teilnehmende können [prestige_i|E][prestige|E] gewinnen\n$BULLET_WITH_TAB$Teilnehmende können [legitimacy_i][legitimacy|E] gewinnen\n$BULLET_WITH_TAB$Teilnehmende können [stress_loss_i][stress|E] abbauen\n"
 activity_hunt_host_desc_trait_xp: "$BULLET_WITH_TAB$Teilnehmer können [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E] gewinnen\n"
 activity_hunt_host_desc_trait: "$BULLET_WITH_TAB$Teilnehmer können [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait|E] erhalten\n"
 activity_hunt_host_desc: "[SelectLocalization(ObjectsEqual(GetPlayer.GetGovernment, GetGovernment('nomad_government')),'activity_hunt_nomad_additions_desc', 'blank_line')]$BULLET_WITH_TAB$Können [GetVassalStance('glory_hound').GetTextIcon][GetVassalStance('glory_hound').GetName]-[Concept('vassal', 'Vasallen')|E]-[opinion|E] erhalten\n$BULLET_WITH_TAB$Können Trophäen-[artifacts|E] erhalten\n"
 activity_legend_seed_tt: "$BULLET_WITH_TAB$Kann einen [legend_seed|E] erhalten\n"
 activity_hunt_guest_desc_accolade: "$BULLET_WITH_TAB$Teilnehmende [acclaimed_knights|E] können [glory|E] erlangen\n"
 activity_hunt_host_desc_animal: "\n[hunt_danger|E]/Seltenheitsbelohnung:\n$BULLET_WITH_TAB$[prestige_i|E][prestige|E]\n$BULLET_WITH_TAB$Trophäen-[artifacts|E]"
 activity_hunt_host_desc_moh: "\n@warning_icon! #negative_value Ihr habt keinen [GetCourtPositionType('master_of_hunt_court_position').GetName()] angestellt"
 activity_hunt_host_desc_huntsperson: "\n@warning_icon! #negative_value  Ihr habt keinen [GetCourtPositionType('huntperson_camp_officer').GetName()] angestellt"
 activity_hunt_host_desc_recent: "\n@warning_icon! #negative_value Alle gehaltenen [counties|E] haben kürzlich eine [GetActivityType('activity_hunt').GetName] abgehalten"
 #Conclusion Desc
 activity_hunt_conclusion_desc_legendary_success: "Die Jagd nach [activity.Custom('GetAnimalType_DE_ART_DEF_S_D')] sagenumwobenen [activity.Custom('GetLegendaryColor')|l]en [activity.Custom('GetAnimalType_DE_DAT')] ist endlich beendet! Man wird Lieder über diesen Tag singen und über die Fähigkeiten, die nötig sind, um ein solches Biest zu erlegen!"
 activity_hunt_conclusion_desc_legendary: "Die Jagd nach [activity.Custom('GetAnimalType_DE_ART_DEF_S_D')] schwer aufspürbaren [activity.Custom('GetLegendaryColor')|l]en [activity.Custom('GetAnimalType_DE_DAT')] geht weiter und ein Ende ist noch nicht in Sicht …"
 activity_hunt_conclusion_desc_falconry_success: "Die [activity.Custom('GetRaptorPlural')] haben uns bei der Jagd nach den Tieren ([activity.Custom('GetAnimalPlural')]) stolz gemacht!"
 activity_hunt_conclusion_desc_falconry: "Die [activity.Custom('GetRaptorPlural')] waren bei der Jagd auf [activity.Custom('GetAnimalPlural')] nicht erfolgreich …"
 activity_hunt_conclusion_desc_standard_success: "Wir kehren glorreich von der Jagd auf [activity.Custom('GetAnimalPlural')] zurück!"
 activity_hunt_conclusion_desc_standard: "Unsere Jagd auf [activity.Custom('GetAnimalPlural')] war dieses Mal nicht erfolgreich …"
 activity_hunt_guest_help_text: "[activity_guests|E] haben die Möglichkeit, Zeit miteinander zu verbringen und bei einer aktiven Teilnahme ihre Jagd- und Kriegsführungs-Werte zu verbessern.\n[GetVassalStance('glory_hound').GetTextIcon][GetVassalStance('glory_hound').GetName]-[vassals|E] schätzen diesen Sport besonders und gewinnen [opinion|E].\n$activity_hunt_guest_help_text_party_size$."
 activity_hunt_guest_help_text_party_size: "Jeder teilnehmende [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)] erhöht leicht die [hunt_success_chance_no_prefix|E]"
 hunt_type_stress: "$BULLET_WITH_TAB$@stress_icon! Anspannungsverlust"
 hunt_type_safety: "$BULLET_WITH_TAB$@death_icon! Sicherheit"
 hunt_type_skill_prowess: "$BULLET_WITH_TAB$@skill_prowess_icon! Kampfgeschick"
 hunt_type_skill_stewardship: "$BULLET_WITH_TAB$@skill_stewardship_icon! Verwaltung"
 hunt_type_skill_learning: "$BULLET_WITH_TAB$@skill_learning_icon! Bildung"
 ### ACTIVITY
 #GUESTS
 #PHASES
 hunt_phase: "Jagd"
 hunt_type_standard: "Jagd"
 hunt_type_standard_desc: "$EFFECT_LIST_BULLET$ Wählt eine Beute aus einer Vielzahl von einheimischen Tieren\n$EFFECT_LIST_BULLET$ Erhöht $trait_track_hunter$-[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Höhere [hunt_danger_no_prefix|E] gewährt mehr [prestige_i|E][prestige|E]\n$EFFECT_LIST_BULLET$ Kämpfende Geschlechter können aktiv teilnehmen\n$EFFECT_LIST_BULLET$ Nicht-kämpfende Geschlechter können zuschauen\n#weak Stolze und verschlagene Bestien pirschen durch die Wildnis: Sie zu überlisten und zu besiegen, stellt den Mut auf die Probe und schärft das eigene Können.#!"
 hunt_type_legendary: "Legendär"
 hunt_type_legendary_desc: "$EFFECT_LIST_BULLET$ Sucht ein mythisches Tier, das in der Gegend gesichtet wurde\n$EFFECT_LIST_BULLET$ Erhöht $trait_track_hunter$-[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Höhere [hunt_danger_no_prefix|E] gewährt mehr [prestige_i|E][prestige|E]\n$EFFECT_LIST_BULLET$ Kämpfende Geschlechter dürfen teilnehmen\n$EFFECT_LIST_BULLET$ Nicht-kämpfende Geschlechter dürfen zuschauen\n#weak Mythische Kreaturen werden von Gelehrten oft als Legende abgetan, doch die Wälder könnten noch viele Geheimnisse bergen.#!"
 hunt_type_falconry: "Falknerei"
 hunt_type_falconry_desc: "$EFFECT_LIST_BULLET$ Wählt eine Beute aus einer Vielzahl von Wildvögeln\n$EFFECT_LIST_BULLET$ Erhöht $trait_track_falconer$-[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Beide Geschlechter können teilnehmen\n#weak Wenn auch kostspielig, so bieten Falkenjagd und Falknerei unter den edlen Beschäftigungen eine unvergleichliche Freude an der Beherrschung der Natur.#!"
 #OPTIONS
 hunt_option_attendants: "Teilnehmer"
 hunt_attendants_few: "Örtliche Wildhüter"
 hunt_attendants_few_desc: "#weak Eine kleine Gruppe von teilnehmenden Jägern wird von örtlichen Wildhütern begleitet.#!"
 hunt_attendants_normal: "Suchtrupps"
 hunt_attendants_normal_desc: "$BULLET_WITH_TAB$Erhöht [hunt_success_chance_no_prefix|E] etwas$hunt_attendants_roco_tt$\n\n#weak Mehrere Gruppen von Bediensteten helfen, das Wild aufzustöbern und in die Enge zu treiben.#!"
 hunt_attendants_many: "Jagdgruppen"
 hunt_attendants_many_desc: "$BULLET_WITH_TAB$Erhöht die [hunt_success_chance_no_prefix|E] merklich\n\n#weak Ausgewiesene Jagdgruppen sind bereit, das Wild zu verfolgen und zu lenken.#!"
 hunt_option_party_size: "Gruppengröße"
 hunt_party_size_few: "Überschaubare Gruppe"
 hunt_party_size_few_desc: "$BULLET_WITH_TAB$Euer [GetPlayer.Custom('GetHuntMasterTooltipDesc')], Euer [GetCourtPositionType('bodyguard_court_position').GetName()], Eure [GetCourtPositionType('court_physician_court_position').GetName()] sowie Eure [spouses|E], [friends|E], [lovers|E] und Jäger schließen sich an\n\n#weak Eine kleine Schar enger Vertrauter und Höflinge.#!"
 hunt_party_size_normal: "Vernünftige Gruppe"
 hunt_party_size_normal_desc: "$BULLET_WITH_TAB$Mehr [prestige_i|E][prestige|E] bei Abschluss\n$BULLET_WITH_TAB$Landlose $knight_culture_player_plural$ and [GetTrait('lazy').GetName(GetNullCharacter)|l] oder kriegerisch geneigte [courtiers|E] und [guests|E] schließen sich an\n\n#weak Eine ordentliche Gruppe von Hochgestellten und Höflingen des Reichs.#!"
 hunt_party_size_many: "Beachtliche Gruppe"
 hunt_party_size_many_desc: "$BULLET_WITH_TAB$Viel mehr [prestige_i|E][prestige|E] bei Abschluss\n$BULLET_WITH_TAB$Alle [courtiers|E] und [guests|E] schließen sich an\n\n#weak Ein umfangreicher Ausschnitt des Hofs, des Reichs und seiner Umgebung.#!"
 hunt_activity_master_of_hunt_appointed: "$master_of_hunt_court_position$ ernannt"
 hunt_attendants_roco_tt: "[SelectLocalization(HasDlcFeature('royal_court'), 'hunt_attendants_roco_tt_ROCO_DLC', 'hunt_attendants_roco_tt_NO_ROCO_DLC')]"
 hunt_attendants_roco_tt_ROCO_DLC: "\n$BULLET_WITH_TAB$Effekt erhöht sich durch [court_amenities|E] „$court_servants$“"
 hunt_attendants_roco_tt_NO_ROCO_DLC: ""
 #ARTIFACTS
 artifact_animal_trinket_name: "[newly_created_artifact.Custom('ArtifactAnimalTrinketType')|U] ([owner.Custom('GetAnimalType')])"
 artifact_animal_trinket_description: "[newly_created_artifact.Custom('ArtifactAnimalTrinketType_DE_ART_DEF_S_N')|U] [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] [owner.Custom('GetAnimalType_DE_ART_IND_G')] [owner.Custom('GetAnimalType')], erjagt von [creator.GetName] in [location.GetBaronyNameExplicitly]."
 artifact_animal_trinket: "Tiertrophäe"
 hunt_revenge_skull_name_1: "Fluch von [host.GetTitledFirstNameNoTooltip]"
 hunt_revenge_skull_name_2: "Fluch von [host.GetTitleAsNameNoTooltip]"
 hunt_revenge_skull_name_3: "Schlächter von [host.GetTitleAsNameNoTooltip]"
 hunt_revenge_skull_desc: "Der Kopf [newly_created_artifact.GetFeatureText('animal_skull_type')]. [creator.GetTitledFirstName] aus [location.GetBaronyNameExplicitly], der Erbe von [host.GetTitledFirstName], forderte ihn, nachdem das Tier [host.GetTitledFirstName] getötet hatte. Der Schädel ist [SCOPE.Custom('ArtifactAdverbQuality')|l] konserviert und an einem [SCOPE.Custom('ArtifactAdverbWealth')|l] geschmückten Trophäenschild aus [newly_created_artifact.GetFeatureText('generic_material_wood')] angebracht."
 hunt_rampage_trinket_slain_desc: "[newly_created_artifact.Custom('ArtifactAnimalTrinketType_DE_ART_DEF_S_N')|U] [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] wütenden [activity.Custom('GetAnimalTypeKill_DE_GEN')], [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_N')] [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly] angegriffen hatte und von dem Messer von [animal_slayer.GetFirstName] getötet wurde."
 hunt_rampage_trinket_wound_desc: "[newly_created_artifact.Custom('ArtifactAnimalTrinketType_DE_ART_DEF_S_N')|U] [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] wütenden [activity.Custom('GetAnimalTypeKill_DE_GEN')], [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_N')] [host.GetName] und [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly] angegriffen und [animal_slayer.GetFirstName] verwundet hat, als [animal_slayer.Custom('DE_PRO_PER_S_3P_N')] das Tier töten wollte."
 hunt_rampage_trinket_death_desc: "[newly_created_artifact.Custom('ArtifactAnimalTrinketType_DE_ART_DEF_S_N')|U] [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] wütenden [activity.Custom('GetAnimalTypeKill_DE_GEN')], [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_N')] [host.GetName] und [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly] angegriffen und [animal_slayer.GetFirstName] getötet hat, als [animal_slayer.Custom('DE_PRO_PER_S_3P_N')] das Tier töten wollte."
 feature_animal_trinket_type_antler: "Geweih"
 feature_animal_trinket_type_horn: "Horn"
 feature_animal_trinket_type_tusk: "Hauer"
 feature_animal_trinket_type_claws: "Klauen"
 feature_animal_trinket_type_fangs: "Reißzähne"
 feature_animal_trinket_type_tail: "Schwanz"
 feature_animal_trinket_type_foot: "Fuß"
 artifact_animal_wild: "unbändig"
 artifact_animal_beastly: "bestialisch"
 artifact_bird_feather_name: "[owner.Custom('GetAnimalType')|U]-Feder"
 artifact_bird_feather_description: "Die Feder [owner.Custom('GetAnimalType_DE_ART_IND_G')] [owner.Custom('GetAnimalType_DE_GEN')], gejagt vom [creator.GetInvolvedActivity.Custom('GetRaptorType')] von [creator.GetName] in [location.GetBaronyNameExplicitly]."
 artifact_bird_feather_raptor_description: "Die Feder eines Raubvogels ([owner.GetInvolvedActivity.Custom('GetRaptorType')]) von [owner.GetTitledFirstName], die von einem größeren Raubvogel bei der Jagd in [location.GetBaronyNameExplicitly] herausgerissen wurde."
 feature_bird_feather_type_feather: "Feder"
 artifact_bird_feather: "Feder"
 #INTENTS
 slay_beast_intent: "Bestie erlegen"
 slay_beast_intent_desc: "Ihr wollt einfach nur eine gute Jagd haben und derjenige sein, der die Beute zur Strecke bringt."
 #EFFECTS
 I_AM_REMOVED_FROM_ACTIVITY: "Ihr werdet aus der Aktivität entfernt"
 CHARACTER_IS_REMOVED_FROM_ACTIVITY: "Entfernt [CHARACTER.GetShortUIName] von der Aktivität"
 GLOBAL_IS_REMOVED_FROM_ACTIVITY: "Entfernt [CHARACTER.GetShortUIName] von der Aktivität"
 I_AM_REMOVED_FROM_ACTIVITY_PAST: "Ich wurde aus einer Aktivität entfernt"
 CHARACTER_IS_REMOVED_FROM_ACTIVITY_PAST: "[CHARACTER.GetShortUIName] wurde aus der Aktivität entfernt"
 GLOBAL_IS_REMOVED_FROM_ACTIVITY_PAST: "[CHARACTER.GetShortUIName] wurde aus der Aktivität entfernt"
 #TOOLTIPS
 hunt_success_chance: "[hunt_success_chance_no_prefix|E]"
 hunt_base_cost: "Grundkosten"
 steppe_season_hunt_discount_desc: "[steppe_season|E]"
 hunt_activity_every_brave_participant_tt: "Alle Teilnehmer ohne die Eigenschaft „[GetTrait('craven').GetName(GetNullCharacter)]“:"
 hunt_activity_every_craven_participant_tt: "Alle Teilnehmer mit der Eigenschaft „[GetTrait('craven').GetName(GetNullCharacter)]“:"
 hunt.hide_tt: "Erhalten ein [court_artifact|E], das aus dem Fell [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] [activity.Custom('GetAnimalType_DE_GEN')] besteht"
 hunt.skull_tt: "Erhalten ein [court_artifact|E], das aus dem Schädel [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] [activity.Custom('GetAnimalType_DE_GEN')] besteht"
 hunt.trinket_tt: "Erhalten eine [artifact|E]-Trophäe [activity.Custom('GetAnimalTypeKill_DE_ART_IND_G')] [activity.Custom('GetAnimalType_DE_GEN')]"
 hunt_location_no_game_tt: "In diesem Land gibt es kein geeignetes Wild"
 activity_every_attendee_tt: "Alle Teilnehmer von „[activity.GetShortName]“"
 hunt_every_hunter_attendee_tt: "Jeder teilnehmende [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]"
 every_other_attendee_tt: "Jeder andere [activity_guest|E]"
 hunt_ends_tt: "„[GetActivityType('activity_hunt').GetName]“ endet"
 hunt_success_tt: "„[activity.GetShortName]“ ist #positive_value erfolgreich#!"
 hunt_fails_tt: "„[activity.GetShortName]“ #X schlägt fehl#! (#weak [hunt_success_chance_no_prefix|E]: [activity.MakeScope.Var('hunt_success_chance').GetValue|1] %)#!"
 hunt_activity_chase_tt: "[host.GetShortUIName] versucht, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')] mit dem #weak Speer#! #V in die Enge#! zu treiben\n@warning_icon! #X Diese Vorgehensweise ist [Concept('hunt_dangerous', 'gefährlicher')|El]#!"
 hunt_activity_ambush_tt: "[host.GetShortUIName] versucht, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')] mit dem #weak Bogen#! aus dem #V Hinterhalt#! zu treffen"
 hunt_activity_stealth_tt: "[host.GetShortUIName] versucht, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')] mit dem #weak Bogen#! zu #V überraschen#!"
 hunt_activity_captive_tt: "[host.GetShortUIName] versucht, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] gefangenen [activity.Custom('GetAnimalType_DE_AKK')] laufen zu lassen und mit dem #weak Speer#! zu #V töten#!\n@warning_icon! #X Diese Vorgehensweise ist [Concept('hunt_dangerous', 'gefährlicher')|El]#!"
 hunt_activity_falconry_tt: "Ihr versucht, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')] mit einem #weak Raubvogel#! zu #V beizen#!"
 hunt_activity_success_increase_minor_tt: "[hunt_success_chance_no_prefix|E] #positive_value leicht erhöht#!"
 hunt_activity_success_increase_medium_tt: "[hunt_success_chance_no_prefix|E] #positive_value erhöht#!"
 hunt_activity_success_increase_major_tt: "[hunt_success_chance_no_prefix|E] #positive_value stark erhöht#!"
 hunt_activity_success_increase_massive_tt: "[hunt_success_chance_no_prefix|E] #positive_value gewaltig erhöht#!"
 hunt_activity_success_increase_adventurer_initial_medium_tt: "[hunt_success_chance_no_prefix|E] #positive_value stark erhöht#!"
 hunt_activity_success_increase_adventurer_initial_high_tt: "[hunt_success_chance_no_prefix|E] #positive_value gewaltig erhöht#!"
 hunt_activity_success_decrease_minor_tt: "[hunt_success_chance_no_prefix|E] #negative_value leicht verringert#!"
 hunt_activity_success_decrease_medium_tt: "[hunt_success_chance_no_prefix|E] #negative_value verringert#!"
 hunt_activity_success_decrease_major_tt: "[hunt_success_chance_no_prefix|E] #negative_value stark verringert#!"
 hunt_seek_current_tt: "[host.GetShortUIName|U] wird [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')|V] suchen:\n[activity.Custom('ActivityAnimalSafety')]\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_current_legendary_tt: "[host.GetShortUIName|U] wird [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] #V [activity.Custom('GetLegendaryColor')|l]en#! [activity.Custom('GetAnimalType_DE_AKK')|V] suchen:\n[activity.Custom('ActivityAnimalSafety')]\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_current_falconry_tt: "[host.GetShortUIName|U] wird versuchen, [activity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalType_DE_AKK')|V] zu #V beizen#!:\n[activity.Custom('ActivityAnimalSafety')][activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_waterfowl_falconry_tt: "[host.GetShortUIName|U] wird versuchen, [activity.Custom('GetAnimalTypeWaterfowl_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeWaterfowl_DE_AKK')|V] zu #V beizen#!:\n[activity.Custom('ActivityAnimalSafety')][activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_gamebird_falconry_tt: "[host.GetShortUIName|U] wird versuchen, [activity.Custom('GetAnimalTypeGamebird_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeGamebird_DE_AKK')|V] zu #V beizen#!:\n[activity.Custom('ActivityAnimalSafety')][activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_fox_tt: "Ihr sucht: #V $animal_type_fox$#!:\n$hunt_animal_safety_safer$\n$hunt_animal_prestige_lowest$"
 hunt_seek_hare_tt: "Ihr sucht #V $animal_type_hare$#!:\n$hunt_animal_safety_safest$\n$hunt_animal_prestige_lowest$"
 hunt_seek_buck_tt: "Ihr sucht [host.Custom('GetRegionalDeerType_DE_1')] [host.Custom('GetRegionalDeerType')|V]:\n$hunt_animal_safety_middling$\n$hunt_animal_prestige_middling$"
 hunt_seek_wolf_tt: "Ihr sucht [THIS.Char.Custom('GetRegionalWolfType_DE_ART_IND_A')] [THIS.Char.Custom('GetRegionalWolfType_DE_AKK')|V]:\n$hunt_animal_safety_middling$\n$hunt_animal_prestige_middling$"
 hunt_seek_boar_tt: "Ihr sucht einen #V $animal_type_boar$#!:\n$hunt_animal_safety_dangerous$\n$hunt_animal_prestige_high$"
 hunt_seek_hare_falconry_tt: "Ihr versucht, einen #V Hasen#! zu #V beizen#!:\n$hunt_animal_prestige_middling$"
 hunt_modifier_success_slightly_improved_location_tt: "Solange dieser Modifikator aktiv ist, ist Eure [hunt_success_chance|E] in dieser [county|E] #positive_value leicht erhöht#!"
 hunt_modifier_success_slightly_improved_tt: "Solange dieser Modifikator aktiv ist, ist Eure [hunt_success_chance|E] #positive_value leicht erhöht#!"
 hunt_modifier_success_slightly_worse_tt: "Solange dieser Modifikator aktiv ist, ist Eure [hunt_success_chance|E] #negative_value leicht verringert#!"
 hunt_pelt_damaged_tt: "Fell-Trophäen-[artifacts|E] sind #negative_value nicht#! verfügbar"
 hunt_no_antlers_tt: "[activity.Custom('GetAnimalType')|U]-Geweih-Trophäen-[artifacts|E] sind #negative_value nicht#! verfügbar"
 hunt_skull_damaged_tt: "[activity.Custom('GetAnimalType')|U]-Schädel-Trophäen-[court_artifacts|E] sind #negative_value nicht#! verfügbar"
 hunt_female_quarry_tt: "Die Jagd gibt #negative_value die Hälfte#! an [prestige_i|E][prestige|E]"
 hunt_female_quarry_piety_tt: "Die Jagd gibt #negative_value die Hälfte#! an [piety_i|E][piety|E]"
 hunt_no_artifact_tt: "Trophäen sind #negative_value nicht#! verfügbar"
 hunt_random_attendee_injured_tt: "@death_icon!Ein zufälliger Teilnehmer wird verletzt"
 hunt_random_attendee_killed_tt: "@death_icon!Ein zufälliger Teilnehmer stirbt"
 hunt_target_attendee_injured_tt: "[murder_target.GetShortUIName] erhält die Eigenschaft „[GetTrait('wounded_1').GetName(GetNullCharacter)]“"
 hunt_target_attendee_injured_chance_tt: "[murder_target.GetShortUIName] könnte verletzt werden"
 hunt_target_attendee_killed_tt: "@death_icon![murder_target.GetShortUIName] stirbt"
 hunt_murder_involvement_discovered_tt: "@warning_icon! #X Eure Beteiligung könnte aufgedeckt werden#!"
 hunt_every_hunter_tt: "Jeder Teilnehmer"
 hunt_every_slay_beast_hunter_tt: "Jeder Teilnehmer mit dem [intent|E] „$slay_beast_intent$“"
 hunt_every_other_hunter_tt: "Jeder teilnehmende Gast"
 hunt_progress_towards_trait_0_tt: "[THIS.Char.GetShortUINameNoFormat|U] kann die [lifestyle_trait|E] „[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]“ annehmen"
 hunt_progress_towards_trait_1_tt: "Leichte Erhöhung der [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]"
 hunt_progress_towards_trait_2_tt: "Erhöhung der [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]"
 hunt_progress_towards_trait_3_tt: "Starke Erhöhung der [GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-[trait_level_track_xp|E]"
 every_non_cynical_dharmic_attendee_tt: "Teilnehmer mit dem [Concept('faith', 'Glauben')|E] des dharmischen Pazifismus ohne die [trait|E] „[GetTrait('cynical').GetName(GetNullCharacter)]“"
 every_non_cynical_dharmic_attendee_reverse_tt: "Andere Teilnehmer"
 hunter_xp_gain_message: "[GetTrait('lifestyle_hunter').GetName(GetNullCharacter)]-Erfahrung"
 hunter_prestige_gain_message: "Jagte [activity.Custom('GetAnimalType_DE_ART_IND_A')] [activity.Custom('GetAnimalType_DE_AKK')|U]"
 hunter_accident_victim_family_tt: "[family|E] von [murder_target.GetShortUIName]"
 hunt_animal_safety_safest: "@death_icon![hunt_danger_no_prefix|E]: #P Harmlos#! #weak (1/5)#!"
 hunt_animal_safety_safer: "@death_icon![hunt_danger_no_prefix|E]: #P Mild#! #weak (2/5)#!"
 hunt_animal_safety_middling: "@death_icon![hunt_danger_no_prefix|E]: Leidlich sicher #weak (3/5)#!"
 hunt_animal_safety_dangerous: "@death_icon![hunt_danger_no_prefix|E]: #N Gefährlich#! #weak (4/5)#!"
 hunt_animal_safety_treacherous: "@death_icon![hunt_danger_no_prefix|E]: #N Tückisch#! #weak (5/5)#!"
 hunt_animal_prestige_lowest: "[prestige_i|E][prestige|E]: #N Trivial#! #weak (1/5)#!"
 hunt_animal_prestige_lower: "[prestige_i|E][prestige|E]: #N Bescheiden#! #weak (2/5)#!"
 hunt_animal_prestige_middling: "[prestige_i|E][prestige|E]: Mittelmäßig #weak (3/5)#!"
 hunt_animal_prestige_high: "[prestige_i|E][prestige|E]: #P Beeindruckend#! #weak (4/5)#!"
 hunt_animal_prestige_highest: "[prestige_i|E][prestige|E]: #P Glorreich#! #weak (5/5)#!"
 hunt_increases_safety_tt: "#D Erhöht die Sicherheit#!"
 hunt_character_wound_tt: "@warning_icon!Es besteht die Gefahr einer ernsten Verletzung"
 hunt_attempted_accident_murder_tt: "@warning_icon! #X Die Teilnehmer sind nach dem letzten „Jagdunfall“ vorsichtiger#!"
 hunt_any_county_legendary_sighting_tt: "Erfordert, dass eine [GetModifier('hunt_sighting_legendary_modifier').GetNameWithTooltip] in Eurem [realm|E] gemeldet wurde"
 hunt_start_health_tt: "Eure [health|E] ist zu niedrig"
 hunt_captive_animal_tt: "[host.GetShortUIName|U] wird [host.Custom('GetAnimalTypeCaptive_DE_ART_IND_A')] gefangen[host.Custom('GetAnimalTypeCaptive_DE_END_ADJ_DEF_S_A')] [host.Custom('GetAnimalTypeCaptive_DE_AKK')|V] jagen"
 hunt_every_attempted_murderer_tt: "Gegen jeden Mörder:"
 activity_hunt_location_legendary_sighting_tt: "[county|E] muss eine [GetModifier('hunt_sighting_legendary_modifier').GetNameWithTooltip] haben"
 activity_hunt_location_any_game_tt: "Der Ort muss Jagdwild haben"
 activity_hunt_selection_tooltip: "Jagt mit Eurem Hof zum Zeitvertreib und für den Ruhm Wild\n\nErwartete Belohnungen:\n$BULLET_WITH_TAB$[prestige_i] [prestige|E]\n$BULLET_WITH_TAB$[legitimacy_i] [Concept('legitimacy', 'Legitimitätszuwachs')|E]\n$BULLET_WITH_TAB$[stress_loss_i] [Concept('stress', 'Anspannungsabbau')|E] Loss[SelectLocalization(ObjectsEqual(GetPlayer.GetGovernment, GetGovernment('nomad_government')),'activity_hunt_nomad_additions_tooltip', 'blank_line')]"
 activity_hunt_nomad_additions_tooltip: "\n$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] ([GetPlayer.GetGovernment.GetName]): [GetModifier('mpo_si_slaughtered_animals').GetNameWithTooltip]\n$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] ([GetPlayer.GetGovernment.GetName]): [dread_i][dread|E] ([GetModifier('hunt_sighting_dangerous_modifier').GetNameWithTooltip])\n$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] ([GetPlayer.GetGovernment.GetName]): [prowess_i][prowess|E] ([GetModifier('hunt_sighting_dangerous_modifier').GetNameWithTooltip])"
 activity_hunt_nomad_additions_desc: "$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] einer Regierung der Art „[GetPlayer.GetGovernment.GetName]“ können „[GetModifier('mpo_si_slaughtered_animals').GetNameWithTooltip]“ erhalten\n$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] einer Regierung der Art „[GetPlayer.GetGovernment.GetName]“ erhalten [dread_i][dread|E], wenn sie „[GetModifier('hunt_sighting_dangerous_modifier').GetNameWithTooltip]“ beseitigen\n$BULLET_WITH_TAB$[GetPlayer.Custom('GetGovernmentIcon')] [rulers|E] ([GetPlayer.GetGovernment.GetName]): [prowess_i][prowess|E], wenn sie „[GetModifier('hunt_sighting_dangerous_modifier').GetNameWithTooltip]“ beseitigen\n"
 nomad_good_hunt_tt: "Dieses Tier ([activity.Custom('GetAnimalType')]) wird bald für ein großes [GetActivityType('activity_feast').GetName] sorgen!"
 nomad_meager_hunt_tt: "Auch wenn die Sache erfolgreich war, wird ein Tier ([activity.Custom('GetAnimalType')]) noch kein Festmahl abgeben …"
 #MELEE
 hunt_kill_success_melee_root: "Ihr tötet [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeKill_DE_AKK')]"
 hunt_kill_success_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] tötet [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeKill_DE_AKK')]"
 hunt_kill_failure_melee_root: "Ihr werdet von [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_D')] [activity.Custom('GetAnimalTypeKill_DE_DAT')] verwundet"
 hunt_kill_failure_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] wird von [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_D')] [activity.Custom('GetAnimalTypeKill_DE_DAT')] verwundet"
 hunt_kill_critical_failure_melee_root: "Ihr werdet von [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_D')] [activity.Custom('GetAnimalTypeKill_DE_DAT')] getötet"
 hunt_kill_critical_failure_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] wird von [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_D')] [activity.Custom('GetAnimalTypeKill_DE_DAT')] getötet"
 hunt_kill_success_melee: "Die Bestie wird erschlagen"
 hunt_kill_success_capture: "Die Bestie wird gefangen"
 hunt_kill_failure_melee: "… aber verwundet [THIS.Char.GetFirstNameOrMeNoTooltip]"
 hunt_kill_critical_failure_melee: "… aber tötet [THIS.Char.GetFirstNameOrMeNoTooltip]"
 #GROUP
 hunt_kill_failure_melee_group: "… aber verwundet jemanden"
 hunt_kill_critical_failure_melee_group: "… aber tötet jemanden"
 hunt_kill_murder_missed: "[murder_target.GetFirstNameOrMeNoTooltip] [SelectLocalization(murder_target.IsPlayer, 'habt', 'hat')] Glück"
 hunt_kill_murder_injured: "[murder_target.GetFirstNameOrMeNoTooltip] [SelectLocalization(murder_target.IsPlayer, 'werdet', 'wird')] „versehentlich“ verwundet"
 hunt_kill_murder_killed: "[murder_target.GetFirstNameOrMeNoTooltip] [SelectLocalization(murder_target.IsPlayer, 'werdet', 'wird')] auf „tragische“ Weise getötet"
 hunt_kill_murder_escape: "[murder_target.GetFirstNameOrMeNoTooltip] entkommt"
 #BOW
 hunt_kill_success_bow_host: "Ihr erlegt [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeKill_DE_AKK')]"
 hunt_kill_success_bow_guest: "[animal_slayer.GetFirstNameNoTooltip] erlegt [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_A')] [activity.Custom('GetAnimalTypeKill_DE_AKK')]"
 hunt_kill_failure_bow: "[injury_target.GetFirstNameNoTooltip] wird von [activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_D')] [activity.Custom('GetAnimalTypeKill_DE_DAT')] verwundet"
 hunt_kill_critical_failure_bow: "[activity.Custom('GetAnimalTypeKill_DE_ART_DEF_S_N')|U] [activity.Custom('GetAnimalTypeKill')] entkommt"
 hunt_kill_success_bow_tt: "Die Bestie wird abgeschossen"
 hunt_kill_critical_failure_bow_tt: "Die Bestie entkommt"
 hunt_kill_miss_bow_tt: "Der Pfeil verfehlt sein Ziel"
 #ACTIVITY LOG
 hunt_quarry_selected_log_title: "Jagdbeute"
 hunt_quarry_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, dass die Jagdgesellschaft [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] jagen wird"
 hunt_chase_method_selected_log_title: "Jagdmethode"
 hunt_chase_method_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] zu jagen und in die Enge zu treiben"
 hunt_quarry_legendary_log_title: "Jagdbeute"
 hunt_quarry_legendary_log: "[CHARACTER.GetShortUIName|U] und die Jagdgesellschaft haben sich aufgemacht, um [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] zu jagen"
 hunt_quarry_falconry_log_title: "Jagdbeute"
 hunt_quarry_falconry_log: "[CHARACTER.GetShortUIName|U] und die Jagdgesellschaft haben sich aufgemacht, um ein paar [CHARACTER.GetInvolvedActivity.Custom('GetAnimalPlural')] zu finden"
 hunt_ambush_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_ambush_method_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_DEF_S_D')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')] aufzulauern und das Tier aus dem Hinterhalt anzugreifen"
 hunt_stealth_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_stealth_method_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, sich an [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] anzuschleichen und das Tier zu überraschen"
 hunt_captive_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_captive_method_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, [CHARACTER.Custom('DE_PRO_POS_S_3P')][CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_END_ADJ_DEF_S_A')] gefangen[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_END_ADJ_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] freizulassen und zu jagen"
 hunt_falconry_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_falconry_method_selected_log: "[CHARACTER.GetShortUIName|U] hat beschlossen, [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] mit [CHARACTER.Custom('DE_PRO_POS_S_3P')]em Greifvogel zu jagen"
 hunt_rampage_wound_log_title: "Herumwütend[CHARACTER.Custom('GetAnimalType_DE_END_ADJ_IND_S_N')] [CHARACTER.Custom('GetAnimalType')]"
 hunt_rampage_wound_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_rampage_death_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_death_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_rampage_fled_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_fled_log: "[CHARACTER.GetShortUIName|U] floh vor [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_D')] wütenden [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')]"
 hunt_rampage_frightened_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_frightened_log: "[CHARACTER.GetShortUIName|U] verscheuchte [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] wütend[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_END_ADJ_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')]"
 hunt_rampage_befriend_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_befriend_log: "[CHARACTER.GetShortUIName|U] freundete sich mit [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_D')] wütenden [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')] an"
 hunt_rampage_befriend_fail_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_befriend_fail_log: "Der Versuch von [CHARACTER.GetShortUIName|U], sich mit [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_D')] wütenden [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')] anzufreunden, schlug fehl"
 hunt_rampage_bodyguardlog_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_bodyguard_log: "Die Leibwache von [CHARACTER.GetShortUIName], [TARGET_CHARACTER.GetShortUIName|U], rettete [CHARACTER.Custom('DE_PRO_PER_S_3P_A')] vor [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_D')] wütenden [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')]"
 hunt_melee_log_title: "[CHARACTER.Custom('GetAnimalTypeKill')|U] erschlagen"
 hunt_melee_log: "[CHARACTER.GetShortUIName|U] erschlägt „[CHARACTER.Custom('GetAnimalType')]“"
 hunt_melee_wounded_log_title: "[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U] findet Opfer"
 hunt_melee_wounded_log: "[CHARACTER.GetShortUIName|U] wurde von einem Tier ([CHARACTER.GetInvolvedActivity.Custom('GetAnimalTypeKill')]) verwundet"
 hunt_melee_killed_log_title: "$hunt_melee_wounded_log_title$"
 hunt_melee_killed_log: "[CHARACTER.GetShortUIName|U] wurde von einem Tier ([CHARACTER.Custom('GetAnimalType')]) getötet"
 hunt_melee_group_log_title: "[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U] in die Ecke gedrängt"
 hunt_melee_group_log: "[CHARACTER.GetShortUIName|U] führte die Jagdgesellschaft beim Erlegen eines Tiers ([CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]) an"
 hunt_melee_capture_log_title: "$hunt_melee_group_log_title$"
 hunt_melee_capture_log: "[CHARACTER.GetShortUIName|U] führte die Jagdgesellschaft beim Einfangen eines Tiers ([CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]) an"
 hunt_melee_group_wounded_log_title: "$hunt_melee_wounded_log_title$"
 hunt_melee_group_wounded_log: "[CHARACTER.GetShortUIName|U] wurde von einem Tier ([CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]) verwundet"
 hunt_melee_group_killed_log_title: "$hunt_melee_killed_log_title$"
 hunt_melee_group_killed_log: "[CHARACTER.GetShortUIName|U] wurde von einem Tier ([CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]) getötet"
 hunt_bow_log_title: "Bogenschuss"
 hunt_bow_log: "[CHARACTER.GetShortUIName|U] erlegte [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] mit einem einzigen Pfeil"
 hunt_bow_wounded_log_title: "Wütend[CHARACTER.Custom('GetAnimalType_DE_END_ADJ_IND_S_N')|U] [CHARACTER.Custom('GetAnimalType')|U]"
 hunt_bow_wounded_log: "[TARGET_CHARACTER.GetShortUIName|U] wurde von [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_D')] verzweifelten [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_DAT')] verwundet, als der Pfeil von [CHARACTER.GetShortUIName] sein Ziel verfehlte"
 hunt_bow_miss_log_title: "[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U] entkommen"
 hunt_bow_miss_log: "Der Pfeil von [CHARACTER.GetShortUIName|U] verfehlte [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_DEF_S_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] und [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_PRO_PER_S_3P_N')] entkam"
 hunt_poachers_punished_log_title: "Wilderer bestraft"
 hunt_poachers_punished_log: "[CHARACTER.GetShortUIName|U] ließ Wilderer hängen, die die Frechheit besaßen, auf [CHARACTER.Custom('DE_PRO_POS_S_3P')]em Land zu jagen"
 hunt_guest_died_log_title: "Jagdunfall"
 hunt_guest_died_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_guest_injured_log_title: "$hunt_guest_died_log_title$"
 hunt_guest_injured_log: "[CHARACTER.GetShortUIName|U] zog sich bei einem Jagdunfall eine Verletzung zu"
 hunt_bird_snatched_log_title: "Jagdvogel getötet"
 hunt_bird_snatched_log: "Der Jagdvogel von [CHARACTER.GetShortUIName|U] wurde von einem Vogel gerissen, der höher in der Nahrungskette stand"
 hunt_eyas_found_log_title: "Nestlinge gefunden"
 hunt_eyas_found_log: "[CHARACTER.GetShortUIName|U] stieß auf ein Raubvogelnest und fand Nestlinge in der Wildnis"
 hunt_completed_success_log_title: "Jagdergebnis"
 hunt_completed_success_log: "Die Jagdgesellschaft von [CHARACTER.GetShortUIName|U] erlegte [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')]"
 hunt_completed_failure_log_title: "$hunt_completed_success_log_title$"
 hunt_completed_failure_log: "Die Jagdgesellschaft von [CHARACTER.GetShortUIName|U] schaffte es nicht, [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_ART_IND_A')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType_DE_AKK')] zu erlegen"
 #APA
 hunt_tracks_character_title: "[hunter.GetShortUINameNoTooltip|U] fand Spuren"
 hunt_tracks_option_title: "Teilnehmer spürten Beute auf"
 hunt_tracks_dog_title: "[hunter.Custom('DogStoryName')], der Hund von [hunter.GetShortUIName], fand eine Fährte"
 hunt_tracks_building_title: "Gut gepflegte Jagdpfade"
 hunt_hunters_bond_title: "[first.GetShortUINameNoTooltip|U] und [second.GetShortUINameNoTooltip] kamen sich beim Jagen näher"
 hunt_dog_bond_title: "[first.GetShortUINameNoTooltip|U] und [second.GetShortUINameNoTooltip] kamen sich über Hunde näher"
 hunt_knowledge_sharing_title: "[first.GetShortUINameNoTooltip|U] teilte Wissen mit [second.GetShortUINameNoTooltip]"
 hunt_small_game_title: "[hunter.GetShortUINameNoTooltip|U] jagte [hunter.Custom('GetRandomRegionalSmallGame')|U]"
 hunt_moh_positive_title: "Geschickter [GetCourtPositionType('master_of_hunt_court_position').GetNameNoTooltip()]"
 hunt_moh_negative_title: "Tölpelhafter [GetCourtPositionType('master_of_hunt_court_position').GetNameNoTooltip()]"
 hunt_poetic_inspiration_title: "[poet.GetShortUINameNoTooltip|U] fand dichterische Inspiration"
 hunt_fervor_gain_title: "Erweckte [root_scope.GetFaith.GetAdjectiveNoTooltip|l]e Harmonie"
 hunt_fervor_gain: "Jagd erweckte Harmonie"
 hunt_distinguished_ability_title: "Fähigkeiten von [hunter.GetShortUINameNoTooltip|U] beeindruckten"
 hunt_annoyed_owner_title: "[first.GetShortUINameNoTooltip|U] verabscheute die Jagd von [second.GetShortUINameNoTooltip]"
 hunt_impressive_grounds_title: "[second.GetShortUINameNoTooltip|U] bewunderte die Jagdreviere von [first.GetShortUINameNoTooltip]"
 hunt_eggs_found_title: "[eggman.GetShortUINameNoTooltip|U] fand Raubvogeleier"
 #CUSTOM LOC
 hunt_sighting_standard_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] in [ROOT.Title.GetNameNoTier] gesichtet"
 hunt_sighting_dangerous_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] versetzen [ROOT.Title.GetNameNoTier] in Angst und Schrecken"
 hunt_sighting_legendary_desc: "[ROOT.Title.Custom('GetLegendaryColor')|l][ROOT.Title.Custom('GetAnimalType_DE_END_ADJ_IND_S_N')] Tier ([ROOT.Title.Custom('GetAnimalType')|VU]) gerüchteweise in [ROOT.Title.GetNameNoTier]"
 hunt_sighting_falconry_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] in [ROOT.Title.GetNameNoTier] gesichtet"
 hunt_completed_host_xp_log_title: "Erfahrung erhalten"
 hunt_completed_host_xp_log: "[CHARACTER.GetShortUIName|U] hat wertvolle Jagderfahrung gesammelt"
 #Animals
 #Pursuit
 animal_type_antelope: "Antilope"
 animal_type_antelope_plural: "Antilopen"
 animal_type_gazelle: "Gazelle"
 animal_type_gazelle_plural: "Gazellen"
 animal_type_roe: "Reh"
 animal_type_roe_plural: "Rehe"
 animal_type_saiga: "Saiga"
 animal_type_saiga_plural: "Saigas"
 animal_type_reindeer: "Rentier"
 animal_type_reindeer_plural: "Rentiere"
 animal_type_buck: "Hirsch"
 animal_type_buck_plural: "Hirsche"
 animal_type_elk: "Elch"
 animal_type_elk_plural: "Elche"
 animal_type_hart_plural: "Hirsche"
 animal_type_zubr: "Zubron"
 animal_type_zubr_plural: "Zubrone"
 animal_type_wisent: "Wisent"
 animal_type_wisent_plural: "Wisente"
 animal_type_bison: "Wisent"
 animal_type_bison_plural: "Wisente"
 animal_type_aurochs_plural: "Auerochsen"
 animal_type_fox_plural: "Füchse"
 animal_type_hare_plural: "Hasen"
 animal_type_lion_plural: "Löwen"
 animal_type_tiger_plural: "Tiger"
 animal_type_leopard: "Leopard"
 animal_type_leopard_plural: "Leoparden"
 animal_type_boar_plural: "Wildschweine"
 animal_type_hyena: "Hyäne"
 animal_type_hyena_plural: "Hyänen"
 animal_type_wolf_plural: "Wölfe"
 animal_type_lynx_plural: "Luchse"
 animal_type_bear_plural: "Bären"
 animal_type_dragon_plural: "Drachen"
 animal_type_unicorn_plural: "Einhörner"
 animal_type_gorilla: "Gorilla"
 animal_type_gorilla_plural: "Gorillas"
 animal_type_shape: "Schemen"
 animal_type_shape_plural: "Schemen"
 #Male
 hunt_animal_male_stag: "Hirschbock"
 hunt_animal_male_dog: "Hund"
 hunt_animal_male_jack: "Hengst"
 hunt_animal_male_bull: "Bulle"
 hunt_animal_male_fallback: "Männchen"
 #Female
 hunt_animal_female_doe: "Ricke"
 hunt_animal_female_hind: "Hirschkuh"
 hunt_animal_female_bitch: "Hündin"
 hunt_animal_female_vixen: "Füchsin"
 hunt_animal_female_jill: "Fähe"
 hunt_animal_female_cow: "Kuh"
 hunt_animal_female_sow: "Bache"
 hunt_animal_female_lioness: "Löwin"
 hunt_animal_female_tigress: "Tigerin"
 hunt_animal_female_leopardess: "Leopardin"
 hunt_animal_female_fallback: "Weibchen"
 #Newborn
 hunt_animal_child_calf: "Kalb"
 hunt_animal_child_fawn: "Rehkitz"
 hunt_animal_child_pup: "Welpe"
 hunt_animal_child_kitten: "Kätzchen"
 hunt_animal_child_leveret: "Häschen"
 hunt_animal_child_piglet: "Ferkel"
 hunt_animal_child_cub: "Junges"
 hunt_animal_child_fallback: "Kind"
 #Young
 hunt_animal_young_brocket: "Spießer"
 hunt_animal_young_squeaker: "Quietscher"
 hunt_animal_young_fallback: "Jungtier"
 #Sounds
 hunt_animal_sound_bark: "Bellen"
 hunt_animal_sound_bark_present: "bellt"
 hunt_animal_sound_bark_participle: "bellend"
 hunt_animal_sound_snort: "Schnauben"
 hunt_animal_sound_snort_present: "schnaubt"
 hunt_animal_sound_snort_participle: "schnaubend"
 hunt_animal_sound_growl: "Knurren"
 hunt_animal_sound_growl_present: "knurrt"
 hunt_animal_sound_growl_participle: "knurrend"
 hunt_animal_sound_roar: "Brüllen"
 hunt_animal_sound_roar_present: "brüllt"
 hunt_animal_sound_roar_participle: "brüllend"
 hunt_animal_sound_scream: "Schrei"
 hunt_animal_sound_scream_present: "schreit"
 hunt_animal_sound_scream_participle: "schreiend"
 hunt_animal_sound_squeal: "Quietschen"
 hunt_animal_sound_squeal_present: "quietscht"
 hunt_animal_sound_squeal_participle: "quietschend"
 hunt_animal_sound_squeak: "Fiepsen"
 hunt_animal_sound_squeak_present: "fiepst"
 hunt_animal_sound_squeak_participle: "fiepsend"
 hunt_animal_sound_bellow: "Geheule"
 hunt_animal_sound_bellow_present: "heult"
 hunt_animal_sound_bellow_participle: "heulend"
 hunt_animal_sound_laugh: "Lachen"
 hunt_animal_sound_laugh_present: "lacht"
 hunt_animal_sound_laugh_participle: "lachend"
 hunt_animal_sound_howl: "Heulen"
 hunt_animal_sound_howl_present: "heult"
 hunt_animal_sound_howl_participle: "heulend"
 hunt_animal_sound_quack: "Quaken"
 hunt_animal_sound_quack_present: "quakt"
 hunt_animal_sound_quack_participle: "quakend"
 hunt_animal_sound_honk: "Schreien"
 hunt_animal_sound_honk_present: "schreit"
 hunt_animal_sound_honk_participle: "schreiend"
 hunt_animal_sound_call: "Rufen"
 hunt_animal_sound_call_present: "ruft"
 hunt_animal_sound_call_participle: "rufend"
 #Groups
 hunt_animal_group_herd: "Herde"
 hunt_animal_group_pack: "Pack"
 hunt_animal_group_sloth: "Meute"
 hunt_animal_group_sounder: "Rotte"
 hunt_animal_group_skulk: "Rudel"
 hunt_animal_group_husk: "Rudel"
 hunt_animal_group_pride: "Rudel"
 hunt_animal_group_mustering: "Schwarm"
 hunt_animal_group_sedge: "Schwarm"
 hunt_animal_group_siege: "Schwarm"
 hunt_animal_group_stand: "Schwarm"
 hunt_animal_group_pod: "Schwarm"
 hunt_animal_group_gaggle: "Schwarm"
 hunt_animal_group_bevy: "Schwarm"
 hunt_animal_group_raft: "Schwarm"
 hunt_animal_group_wedge: "Schwarm"
 hunt_animal_group_flock: "Schwarm"
 hunt_animal_group_group: "Gruppe"
 #Groups
 hunt_animal_group_herd_plural: "Herden"
 hunt_animal_group_pack_plural: "Rudel"
 hunt_animal_group_sloth_plural: "Meuten"
 hunt_animal_group_sounder_plural: "Rotten"
 hunt_animal_group_skulk_plural: "Rudel"
 hunt_animal_group_husk_plural: "Rudel"
 hunt_animal_group_pride_plural: "Rudel"
 hunt_animal_group_mustering_plural: "Schwärme"
 hunt_animal_group_sedge_plural: "Schwärme"
 hunt_animal_group_siege_plural: "Schwärme"
 hunt_animal_group_stand_plural: "Schwärme"
 hunt_animal_group_pod_plural: "Schwärme"
 hunt_animal_group_gaggle_plural: "Schwärme"
 hunt_animal_group_bevy_plural: "Schwärme"
 hunt_animal_group_raft_plural: "Schwärme"
 hunt_animal_group_wedge_plural: "Schwärme"
 hunt_animal_group_flock_plural: "Schwärme"
 hunt_animal_group_group_plural: "Gruppen"
 #Dangers
 hunt_animal_danger_antlers: "Geweihenden"
 hunt_animal_danger_horns: "Hörner"
 hunt_animal_danger_fangs: "Reißzähne"
 hunt_animal_danger_claws: "Klauen"
 hunt_animal_danger_tusks: "Hauer"
 hunt_animal_danger_teeth: "Schneidezähne"
 #Strike
 hunt_animal_strike_kick: "Tritt"
 hunt_animal_strike_kick_present: "tritt"
 hunt_animal_strike_kick_participle: "tretend"
 hunt_animal_strike_buck: "Bocken"
 hunt_animal_strike_buck_present: "bocken"
 hunt_animal_strike_buck_participle: "bockend"
 hunt_animal_strike_bite: "Biss"
 hunt_animal_strike_bite_present: "beißen"
 hunt_animal_strike_bite_participle: "beißend"
 hunt_animal_strike_swipe: "Hieb"
 hunt_animal_strike_swipe_present: "haut"
 hunt_animal_strike_swipe_participle: "hauend"
 hunt_animal_strike_strike: "Schlag"
 hunt_animal_strike_strike_present: "schlägt"
 hunt_animal_strike_strike_participle: "schlagend"
 #Features
 hunt_animal_feature_antlers: "verzweigtes Geweih"
 hunt_animal_feature_horns: "gewundene Hörner"
 hunt_animal_feature_fangs: "spitze Reißzähne"
 hunt_animal_feature_coat: "zotteliges Fell"
 hunt_animal_feature_claws: "tödliche Klauen"
 hunt_animal_feature_spots: "geflecktes Fell"
 hunt_animal_feature_stripes: "gestreiftes Fell"
 hunt_animal_feature_tusks: "geschärfte Hauer"
 hunt_animal_feature_tail: "wogender Schweif"
 hunt_animal_feature_mane: "wallende Mähne"
 hunt_animal_feature_legs: "kräftige Beine"
 hunt_animal_feature_neck: "eleganter Hals"
 hunt_animal_feature_bill: "auffälliger Schnabel"
 hunt_animal_feature_plumage: "gesprenkeltes Gefieder"
 hunt_animal_feature_long_legs: "stelzenartige Beine"
 #Charge
 hunt_animal_charge_bound: "Sprung"
 hunt_animal_charge_bound_present: "springt"
 hunt_animal_charge_bound_participle: "springend"
 hunt_animal_charge_charge: "Stürmen"
 hunt_animal_charge_charge_present: "stürmt"
 hunt_animal_charge_charge_participle: "stürmend"
 hunt_animal_charge_lope: "Schreiten"
 hunt_animal_charge_lope_present: "schreiten"
 hunt_animal_charge_lope_participle: "schreitend"
 hunt_animal_charge_hurtle: "Laufen"
 hunt_animal_charge_hurtle_present: "laufen"
 hunt_animal_charge_hurtle_participle: "laufend"
 #Environment
 foliage_dense_tree: "dichter Wald"
 foliage_tree_line: "Baumgrenze"
 foliage_tree_specific: "[ROOT.Province.Custom('GetRandomRegionalWood')]-Bäume"
 foliage_farm: "Baumgrenze"
 foliage_pine: "spärliche Kiefern"
 foliage_palm: "dürre Palmen"
 foliage_bush: "belaubte Sträucher"
 foliage_scrub: "stacheliges Gestrüpp"
 foliage_undergrowth: "dichtes Unterholz"
 foliage_jungle: "schimmernde Blätter"
 foliage_reeds: "wogendes Schilf"
 foliage_grass: "hohes Gras"
 ground_leaves: "Blätter"
 ground_roots: "Baumwurzeln"
 ground_mud: "Schlamm"
 ground_gravel: "Schotter"
 ground_sand: "Sand"
 ground_rocks: "Felsen"
 ground_grass: "Gras"
 ground_scrub: "Gestrüpp"
 ground_dirt: "Dreck"
 weather_blizzard: "Schneesturm"
 weather_sandstorm: "Sandsturm"
 weather_storm: "Sturm"
 weather_thunderstorm: "Gewitter"
 weather_downpour: "Platzregen"
 weather_gale: "Starkwind"
 danger_cliff: "Klippe"
 danger_ravine: "Schlucht"
 danger_rocks: "Felsen"
 danger_rock: "Felsen"
 danger_ledge: "Felsvorsprung"
 danger_ditch: "Graben"
 danger_slope: "Abhang"
 danger_bank: "Böschung"
 danger_brook: "Bach"
 danger_fence: "Zaun"
 danger_wall: "Wall"
 danger_bog: "Sumpf"
 terrain_plain: "Ebene"
 terrain_plain_plural: "Ebenen"
 terrain_hill: "Hügel"
 terrain_hill_plural: "$terrain_hills$"
 terrain_jungle_plural: "$terrain_jungle$"
 terrain_wetland: "Feuchtgebiet"
 terrain_wetland_plural: "Feuchtgebiete"
 terrain_floodplain: "Auen"
 terrain_floodplain_plural: "Auen"
 terrain_taiga_plural: "$terrain_taiga$"
 terrain_dryland: "Trockengebiet"
 terrain_dryland_plural: "Trockengebiete"
 terrain_steppe_plural: "$terrain_steppe$"
 terrain_forest_plural: "Wälder"
 terrain_desert_plural: "Wüsten"
 terrain_farmland: "Ackerland"
 terrain_farmland_plural: "Ackerland"
 terrain_wood: "Wald"
 terrain_wood_plural: "Wälder"
 terrain_grassland: "Weideland"
 terrain_grassland_plural: "Weideland"
 terrain_flatland: "Tiefland"
 terrain_flatland_plural: "Tiefland"
 terrain_valley: "Tal"
 terrain_valley_plural: "Täler"
 terrain_mountain: "Berg"
 terrain_mountain_plural: "$terrain_mountains$"
 terrain_slope: "Abhang"
 terrain_slope_plural: "Abhänge"
 terrain_field: "Feld"
 terrain_field_plural: "Felder"
 terrain_swampland: "Sumpf"
 terrain_swampland_plural: "Sümpfe"
 terrain_scrubland: "Buschland"
 terrain_scrubland_plural: "Buschland"
 terrain_highland: "Hochland"
 terrain_highland_plural: "Hochländer"
 terrain_woodland: "Waldgebiet"
 terrain_woodland_plural: "Waldgebiete"
 terrain_fallback: "Wildnis"
 terrain_fallback_plural: "Wildnis"
 #BIRDS
 animal_type_stork: "Storch"
 animal_type_stork_plural: "Störche"
 animal_type_crane: "Kranich"
 animal_type_crane_plural: "Kraniche"
 animal_type_heron: "Reiher"
 animal_type_heron_plural: "Reiher"
 animal_type_swan: "Schwan"
 animal_type_swan_plural: "Schwäne"
 animal_type_egret: "Reiher"
 animal_type_egret_plural: "Reiher"
 animal_type_pelican: "Pelikan"
 animal_type_pelican_plural: "Pelikane"
 animal_type_flamingo: "Flamingo"
 animal_type_flamingo_plural: "Flamingos"
 animal_type_bustard: "Trappe"
 animal_type_bustard_plural: "Trappen"
 animal_type_pheasant: "Fasan"
 animal_type_pheasant_plural: "Fasane"
 animal_type_goose: "Gans"
 animal_type_goose_plural: "Gänse"
 animal_type_grouse: "Raufußhuhn"
 animal_type_grouse_plural: "Raufußhühner"
 animal_type_duck: "Ente"
 animal_type_duck_plural: "Enten"
 animal_type_quail: "Wachtel"
 animal_type_quail_plural: "Wachteln"
 animal_type_eagle: "Adler"
 animal_type_vulture: "Geier"
 animal_type_buzzard: "Bussard"
 animal_type_falcon: "Falke"
 animal_type_falcon_plural: "Falken"
 animal_type_hawk: "Habicht"
 animal_type_hawk_plural: "Habichte"
 animal_type_raptor: "Raubvogel"
 animal_type_raptor_plural: "Raubvögel"
 #Track
 hunt_animal_track_hoof: "Huf"
 hunt_animal_track_hoof_plural: "Hufe"
 hunt_animal_track_trotter: "Fuß"
 hunt_animal_track_trotter_plural: "Füße"
 hunt_animal_track_paw: "Pfote"
 hunt_animal_track_paw_plural: "Pfoten"
 hunt_martial_gender_female: "Teilnehmerin"
 hunt_martial_gender_male: "Teilnehmer"
 hunt_martial_gender_equal: "Teilnehmer"
 #MEMORY
 hunt_animal_slayer_memory: "Bestie getötet"
 hunt_animal_slayer_memory_desc_host: "Ich tötete mutig während meiner [GetActivityType('activity_hunt').GetName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_animal_slayer_memory_desc: "Ich tötete mutig während der [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_animal_slayer_memory_desc_host_second_perspective: "Ihr tötetet mutig während Eurer [GetActivityType('activity_hunt').GetName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_animal_slayer_memory_desc_second_perspective: "Ihr tötete mutig während der [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_animal_slayer_memory_desc_host_third_perspective: "[animal_slayer.GetTitledFirstName|U] tötete während [animal_slayer.Custom('DE_PRO_POS_S_3P')]er [GetActivityType('activity_hunt').GetName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ mutig ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_animal_slayer_memory_desc_third_perspective: "[animal_slayer.GetTitledFirstName|U] tötete mutig während der [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ein Tier ([SCOPE.Custom('GetAnimalType')])"
 hunt_success_memory: "Erfolgreiche Jagd"
 hunt_success_memory_desc_host: "Ich hielt eine erfolgreiche [GetActivityType('activity_hunt').GetName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ab"
 hunt_success_memory_desc: "Ich nahm an der erfolgreichen [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ teil"
 hunt_success_memory_desc_host_second_perspective: "Ihr hieltet eine erfolgreiche [GetActivityType('activity_hunt').GetName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ab"
 hunt_success_memory_desc_second_perspective: "Ihr nahmt an der erfolgreichen [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ teil"
 hunt_success_memory_desc_host_third_perspective: "[owner.GetTitledFirstName|U] hielt eine erfolgreiche [GetActivityType('activity_hunt').GetName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ ab"
 hunt_success_memory_desc_third_perspective: "[owner.GetTitledFirstName|U] nahm an der erfolgreichen [GetActivityType('activity_hunt').GetName] von [host.GetTitledFirstName] auf eine Tierart ([SCOPE.Custom('GetAnimalType')]) in „[ROOT.Var('location').Province.GetBaronyNameExplicitly]“ teil"
 adventurer_3_courtiers: "Ihr braucht mindestens #V 3#! [followers|E], die jagen können"
 activity_huntmaster_desc_adventurer: "[GetCourtPositionType('huntperson_camp_officer').GetNameNoTooltip()]"
 activity_huntmaster_desc_regular: "Erzjägermeister"
 activity_huntmaster_tooltip_desc_adventurer: "[GetCourtPositionType('huntperson_camp_officer').GetName()]"
 activity_huntmaster_tooltip_desc_regular: "[GetCourtPositionType('master_of_hunt_court_position').GetName()]"
 followers_adventurer: "Marketender"
 servants_desc_regular: "Diener"
 flushers_adventurer: "Wildtreiber"
 gamekeepers_nomadic: "Meister der Hatz"
 gamekeepers_regular: "Wildhüter"
 poacher_opinion: "In #EMP meinen#! Landen gewildert"
 hunt_invalidated_warning_tt: "@warning_icon! #X Ihr werdet für [SCOPE.ScriptValue('standard_hunting_cooldown_time')|V0] Jahre keine weitere [GetActivityType('activity_hunt').GetName]-[activity|E] ausrichten können#!"
