l_german:
 ##################################################
 ##Misc
 from_diarch_domain_limit_bonus: "Unterstützung durch den [Concept('regent', 'Regenten')|E]"
 from_diarch_monthly_influence_bonus: "Vorteile durch [co_emperor|E]"
 to_diarch_monthly_influence_add_bonus: "Vorteile durch [duumvirate|E]"
 from_co_monarch_diplomacy_vassal_opinion: "Vorteile durch [co_monarch|E]"
 to_co_monarch_monthly_prestige_add_bonus: "Vorteile durch [co_monarchy|E]"
 imprisonment_would_cause_regency_trigger.tt.imprisoned_abroad: "Ihr seid im Ausland [imprisoned|El]"
 DIARCHY_TEMPORARY_OR_DESIGNATED_REGENT_WEDDING_ACCEPTANCE: "Unzuverlässiger [regent|E]: $VALUE|=+0$"
 DIARCHY_ENTRENCHED_REGENT_WEDDING_ACCEPTANCE: "[scales_of_power|E]: $VALUE|=+0$"
 remove_strife_per_invited_powerful_vassal_effect.tt: "[host.GetShortUIName|U] verlor #P [host.MakeScope.Var('strife_loss_total').GetValue|0]#! [strife|E] aufgrund der Teilnahme von [Concept('powerful_vassals', 'mächtigen Vassalen')|E] von [host.GetLiege.GetPrimaryTitle.GetBaseName]"
 family_member_is_civil_servant: "[family_member|E] ist Beamter"
 civil_servant_salary_and_corruption: "Beamtenbereicherung"
 regency_for_personal_reasons_trigger.tt.cannot_govern_by_themselves: "Kann nicht allein regieren"
 SPACE4: "    "
 ##################################################
 ##Swing Update Strings
 update_diarchy_swing_with_perspective_effect.preamble: "[scales_of_power|E] für [liege_loc.GetDiarchyTypeName] von [liege_loc.GetShortUIName|U] sind wie folgt umgeschwungen:"
 update_diarchy_swing_with_perspective_effect.postamble.diarch: "#!zu [liege_loc.GetDiarchy.GetDiarch.GetShortUIName]"
 update_diarchy_swing_with_perspective_effect.postamble.liege: "#!zu [liege_loc.GetShortUIName]"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.liege_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #P [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]#! $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.diarch_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ #N [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0]"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_diarch_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.diarch$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.miniscule_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('miniscule_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.minor_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('minor_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.medium_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('medium_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.major_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('major_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.massive_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('massive_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 update_diarchy_swing_with_perspective_effect.neutral_perspective.monumental_sop_swing_liege_gain.tt: "$update_diarchy_swing_with_perspective_effect.preamble$ [EmptyScope.ScriptValue('monumental_sop_swing_diarch_gain')|0V] $update_diarchy_swing_with_perspective_effect.postamble.liege$"
 ##################################################
 ##Invalid Strings
 ## Nouns
 invalid_child: "Kind"
 invalid_incapable: "[GetTrait('incapable').GetName(ROOT.Char)]"
 invalid_helpless: "hilflos"
 ## Possessive Nouns
 invalid_child_possessive: "des Kindes"
 invalid_incapable_possessive: "des [GetTrait('incapable').GetName(GetNullCharacter)|U]en"
 invalid_helpless_possessive: "des Hilflosen"
 ##################################################
 ##Diarchy Types
 temporary_regency_diarchy_type: "[regency|E]"
 temporary_regency_diarch_title: "$regency_diarch_title$"
 regency_diarchy_type: "[entrenched_regency|E]"
 regency_diarch_title: "Regent"
 vizierate_diarchy_type: "[vizierate|E]"
 vizierate_diarch_title: "Wesir"
 junior_emperorship_diarchy_type: "[nominal_duumvirate|E]"
 junior_emperorship_diarch_title: "nomineller Mitkaiser"
 co_emperorship_diarchy_type: "[duumvirates|E]"
 co_emperorship_diarch_title: "Mitkaiser"
 co_monarchy_diarchy_type: "[co_monarchy|E]"
 co_monarchy_diarch_title: "[co_monarch|E]"
 nomad_regency_diarchy_type: "[Concept('nomadic', 'Nomadische')|E] [regency|E]"
 nomad_regency_diarch_title: "$regency_diarch_title$"
 ##################################################
 ##Mandates
 fill_coffers_mandate: "Schatzkammer füllen"
 fill_coffers_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatseffekte')|E]:#!\n$EFFECT_LIST_BULLET$ Zusätzliches [gold|E]\n$EFFECT_LIST_BULLET$ Kostenlose [Concept('domain', 'Domänen')|E]-[development|E]\n$EFFECT_LIST_BULLET$ Anpassung von [vassal_contracts|E] zugunsten des [Concept('liege', 'Lehnsherrn')|E]\n\n#WEAK Der [regent|E] wurde angewiesen, die Einnahmen für seinen $game_concept_liege$n um jeden Preis zu erhöhen.#!"
 swell_armies_mandate: "Armee vergrößern"
 swell_armies_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatseffekte')|E]:#!\n$EFFECT_LIST_BULLET$ Günstige [men_at_arms|E]-[modifiers|E]\n$EFFECT_LIST_BULLET$ Vorteilhafte [Concept('levy', 'Aufgebots')|E]-$game_concept_modifiers$\n$EFFECT_LIST_BULLET$ Begabte [knights|E]-[courtiers|E]\n\n#WEAK Der [liege|E] hat verfügt, dass der [regent|E] frische Rekruten für derzeitige und zukünftige Feldzüge suchen soll.#!"
 promote_authority_mandate: "Autorität fördern"
 promote_authority_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatseffekte')|E]:#!\n$EFFECT_LIST_BULLET$ [characters|E] und [counties|E] verlassen [factions|E]\n$EFFECT_LIST_BULLET$ Gesteigerte [crown_authority|E]\n$EFFECT_LIST_BULLET$ Gesteigerte [Concept('councillor', 'Ratsmitglieder')|E]-[opinion|E]\n\n#WEAK Der [liege|E] hat seinen [Concept('regent', 'Regenten')|E] angewiesen, die Macht der Krone zu festigen.#!"
 mandate_aptitude.fill_coffers.category: "$fill_coffers_mandate$"
 mandate_aptitude.fill_coffers.primary_skill.stewardship: "[mandate|E] beruht auf [stewardship|E]"
 mandate_aptitude.fill_coffers.secondary_skill.learning: "[mandate|E] nutzt [learning|E]"
 mandate_aptitude.fill_coffers.secondary_skill.intrigue: "[mandate|E] nutzt [intrigue|E]"
 mandate_aptitude.fill_coffers.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.fill_coffers.bonus_trait.callous: "[GetTrait('callous').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.fill_coffers.malus_trait.generous: "[GetTrait('generous').GetName(ROOT.Char)|U] schlecht geeignet"
 mandate_aptitude.fill_coffers.malus_trait.greedy: "[GetTrait('greedy').GetName(ROOT.Char)|U] schlecht geeignet"
 mandate_aptitude.swell_armies.category: "$swell_armies_mandate$"
 mandate_aptitude.swell_armies.primary_skill.martial: "[mandate|E] beruht auf [martial|E]"
 mandate_aptitude.swell_armies.secondary_skill.prowess: "[mandate|E] nutzt [prowess|E]"
 mandate_aptitude.swell_armies.secondary_skill.diplomacy: "[mandate|E] nutzt [diplomacy|E]"
 mandate_aptitude.swell_armies.bonus_trait.arbitrary: "[GetTrait('arbitrary').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.swell_armies.bonus_trait.gregarious: "[GetTrait('gregarious').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.swell_armies.malus_trait.just: "[GetTrait('just').GetName(ROOT.Char)|U] schlecht geeignet"
 mandate_aptitude.swell_armies.malus_trait.shy: "[GetTrait('shy').GetName(ROOT.Char)|U] schlecht geeignet"
 mandate_aptitude.promote_authority.category: "$promote_authority_mandate$"
 mandate_aptitude.promote_authority.primary_skill.diplomacy: "[mandate|E] beruht auf [diplomacy|E]"
 mandate_aptitude.promote_authority.secondary_skill.martial: "[mandate|E] nutzt [martial|E]"
 mandate_aptitude.promote_authority.secondary_skill.learning: "[mandate|E] nutzt [learning|E]"
 mandate_aptitude.promote_authority.bonus_trait.calm: "[GetTrait('calm').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.promote_authority.bonus_trait.just: "[GetTrait('just').GetName(ROOT.Char)|U] äußerst geeignet"
 mandate_aptitude.promote_authority.malus_trait.wrathful: "[GetTrait('wrathful').GetName(ROOT.Char)|U] ist hoffnungslos"
 mandate_aptitude.promote_authority.malus_trait.arbitrary: "[GetTrait('arbitrary').GetName(ROOT.Char)|U] ist hoffnungslos"
 ranching_mandate: "Weidewirtschaft"
 ranching_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatsauswirkungen')|E]:#!\n$EFFECT_LIST_BULLET$ Zusätzliche [herd|E]\n$EFFECT_LIST_BULLET$ Kostenlose [county|E]-[fertility|E]\n$EFFECT_LIST_BULLET$ Anpassung von [vassal_contracts|E] zugunsten des [Concept('liege', 'Lehnsherrn')|E]\n\n#WEAK Der [regent|E] wurde angewiesen, die Einnahmen für seinen $game_concept_liege$n um jeden Preis zu erhöhen.#!"
 horde_mustering_mandate: "Horde sammeln"
 horde_mustering_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatsauswirkungen')|E]:#!\n$EFFECT_LIST_BULLET$ Günstige [men_at_arms|E]-[modifiers|E]\n$EFFECT_LIST_BULLET$ Vorteilhafte [Concept('levy', 'Aufgebots')|E]-$game_concept_modifiers$\n$EFFECT_LIST_BULLET$ Begabte [knights|E]-[courtiers|E]\n\n#WEAK Der [liege|E] hat verfügt, dass der [regent|E] frische Rekruten für derzeitige und zukünftige Feldzüge suchen soll.#!"
 promote_obedience_mandate: "Gehorsam fördern"
 promote_obedience_mandate_desc: "#BOL Mögliche [Concept('mandate', 'Mandatsauswirkungen')|E]:#!\n$EFFECT_LIST_BULLET$ [characters|E] und [counties|E] verlassen [factions|E]\n$EFFECT_LIST_BULLET$ Gesteigerte [crown_authority|E]\n$EFFECT_LIST_BULLET$ Gesteigerte [Concept('councillor', 'Ratsmitglieder')|E]-[opinion|E]\n\n#WEAK Der [liege|E] hat seinen [Concept('regent', 'Regenten')|E] angewiesen, die Macht der Krone zu festigen.#!"
 mandate_aptitude.ranching.category: "$ranching_mandate$"
 mandate_aptitude.horde_mustering.category: "$horde_mustering_mandate$"
 mandate_aptitude.promote_obedience.category: "$promote_obedience_mandate$"
 mandate_aptitude.nomadic_regency.generic_score.no_nomadic_philosophy: "Fehlender [GetTrait('nomadic_philosophy').GetName(ROOT.Char)]"
 nomadic_regency_disliked: "Missfällt Herrscher in einer [regency|E]"
 ##################################################
 ##Parameters
 diarchy_is_regency: "[diarchy|E] ist eine [regency|E]"
 unlock_diarch_imprison_interaction: "[diarchs|E] können im [realm|E] ihres [Concept('liege', 'Lehnsherrn')|E] bei Mit-[vassals|E] und [courtiers|E] eine [Concept('imprison', 'Einkerkerung')|E] versuchen"
 unlock_diarch_revoke_title_interaction: "[diarchs|E] können eine [Concept('revoke', 'Aberkennung')|E] von [Concept('titles', 'Titeln')|E] bei anderen [vassals|E] versuchen"
 unlock_diarch_retract_vassal_interaction: "[diarchs|E] können eine [Concept('retract', 'Entziehung')|E] von [vassals|E] unter ihrem [title_tier|E] von anderen [vassals|E] versuchen"
 diarch_can_subsidise_liege_authority: "[diarchs|E] können anbieten, die [crown_authority|E], [tribal_authority|E] oder [imperial_bureaucracy|E] ihres [Concept('liege', 'Lehnsherrn')|E] zu erhöhen, wobei sie die Kosten und jeden [Concept('opinion', 'Meinungsmalus')|E] übernehmen"
 unlock_syphon_treasury_interaction: "[diarchs|E] können versuchen, [gold|E] von ihrem [Concept('liege', 'Lehnsherrn')|E] zu veruntreuen"
 unlock_shift_privileges_interaction: "[diarchs|E] können versuchen, Mit-[vassals|E] negative [county_modifiers|E] zu geben, und erhalten bei einem Erfolg [gold|E]"
 unlock_legal_meddling_interaction: "[diarchs|E] können versuchen, [claims|E] auf [titles|E] von Mit-[vassals|E] zu fingieren"
 unlock_entrench_regency_interaction: "[diarchs|E] können eine [Concept('entrenched_regency_entrench', 'Verwurzelung')|E] ihrer [regency|E] bewirken, womit sie schwerer ihres Postens enthoben werden können und mehr [diarch_powers|E] erhalten"
 unlock_mulct_vizier_interaction: "#P [lieges|E] können ihren [Concept('diarch', 'Diarchen')|E] mit der [interaction|E] „$mulct_vizier_interaction$“ zwingen, [gold_i][gold|E] abzugeben#!"
 lieges_swing_more_against_diarchs: "Bei [lieges|E] fällt „$swing_scales_currency_interaction$“ stärker als üblich aus #WEAK (sofern sie diese [interaction|E] ergreifen)#!"
 regents_can_try_to_overthrow_present_lieges: "[diarchs|E] können ihrem [Concept('liege', 'Lehnsherrn')|E] ein Ultimatum stellen, indem sie die dauerhafte Übertragung der Herrschaft fordern, #EMP wenn#! sie die Mehrheit der [Concept('powerful_vassals', 'mächtigen Vasallen')|E] ihres [Concept('liege', 'Lehnsherrn')|E] davon überzeugen können, einen Staatsstreich zu unterstützen"
 regents_can_try_to_overthrow_present_lieges_help: "Staatsstreiche werden über eine [decision|E] eingeleitet, wohingegen [powerful_vassals|E] über eine [character_interaction|E] eingeladen werden"
 liege_pays_currency_surcharge_for_mundane_interactions_mild: "[liege|E] zahlt kaum #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_miniscule_value')|0] oder mehr)#! [prestige|E] bei [diarch_affected_actions|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_medium: "[liege|E] zahlt etwas #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_minor_value')|0] oder mehr)#! [prestige|E] bei [diarch_affected_actions|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_major: "[liege|E] zahlt beachtliches #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_medium_value')|0] oder mehr)#! [prestige|E] bei [diarch_affected_actions|E]"
 liege_pays_currency_surcharge_for_mundane_interactions_massive: "[liege|E] zahlt horrend viel #WEAK ([prestige_i][EmptyScope.ScriptValue('liege_diarchy_surcharge_interaction_major_value')|0] oder mehr)#! [prestige|E] bei [diarch_affected_actions|E]"
 can_be_instantly_dismissed: "Diese [regency|E] kann jederzeit beendet werden, sofern der [liege|E] voll regierungsfähig ist"
 dismissal_requires_gift: "[Concept('entrenched_regencies', 'Verwurzelten Regenten')|E] kann ein Geschenk angeboten werden, um sie aus ihrem Posten zu entfernen"
 regency_free_end_below_this_point: "Die [Concept('entrenched_regency', 'verwurzelte Regentschaft')|E] benötigt die Zustimmung des [Concept('regent', 'Regenten')|E], um beendet zu werden"
 regency_cant_be_ended_above_this_point: "[lieges|E] können nicht versuchen, ihren [Concept('regent', 'Regenten')|E] zu entlassen"
 diarch_gets_a_free_change_on_vassal_contract: "[diarchs|E] erhalten eine kostenlose zusätzliche Änderung ihrer [vassal_contract|E], sofern diese noch geändert werden können #WEAK (entsprechend des Einsatzes eines [Concept('hook', 'Druckmittels')|E] gegenüber dem Lehnsherrn)#!"
 primeminister_dismissal_will_upset_administration: "[diarch|E] kann entlassen werden, was aber einen #N negativen#! [modifier|E] auf [stewardship|E] und [income|E] zur Folge hat, der den derzeitigen [scales_of_power|E] entspricht"
 primeminister_requires_county: "[diarchy|E] kann ohne negative [modifiers|E] beendet werden, wenn dem [Concept('diarch', 'Diarchen')|E] mindestens eine [county|E] verliehen wird"
 primeminister_requires_duchy: "[diarchy|E] kann ohne negative [modifiers|E] beendet werden, wenn dem [Concept('diarch', 'Diarchen')|E] mindestens eine [duchy|E] verliehen wird"
 primeminister_requires_duchy.tt.blocked_grant: "Eure derzeitigen [scales_of_power|E] erfordern, dass Ihr [recipient.GetFirstName] mindestens einen [duchy|E]-[title|E] verleiht"
 grant_titles_interaction.tt.primeminister_title_grant.duchy_sufficient: "Die Gewährung einer [duchy|E] oder eines höherrangigeren Titels #ENC WIRD#! Eure [actor.GetDiarchyTypeName] beenden"
 grant_titles_interaction.tt.primeminister_title_grant.county_sufficient: "Die Gewährung einer [county|E] oder eines höherrangigeren Titels #ENC WIRD#! Eure [actor.GetDiarchyTypeName] beenden"
 grant_titles_interaction.tt.primeminister_title_grant.county_insufficient: "Die Gewährung einer [county|E] oder eines niederrangigeren Titels wird Eure [actor.GetDiarchyTypeName] #XB NICHT#! beenden"
 grant_titles_interaction.tt.primeminister_title_grant.barony_doesnt_end: "Die Gewährung einer [barony|E] oder eines niederrangigeren Titels wird Eure [actor.GetDiarchyTypeName] #XB NICHT#! beenden"
 diarch_aptitude_helps_tax_collectors_toggle: "[diarchs|E] erhalten [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_buffed_by_swing_multiplier_value')|+%0] der derzeitigen Punkte der [scales_of_power|E] als zusätzliche [tax_collector|E]-[aptitude|E]"
 diarch_aptitude_helps_tax_collectors_postamble: "der [aptitude|E] des [Concept('diarch', 'Diarchen')|E] als Bonus zur eigenen $game_concept_aptitude$ #WEAK (nicht stapelbar)#!"
 diarch_aptitude_helps_tax_collectors_t1: "#P [tax_collectors|E] erhalten [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t2: "#P [tax_collectors|E] erhalten [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t3: "#P [tax_collectors|E] erhalten [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_aptitude_helps_tax_collectors_t4: "#P [tax_collectors|E] erhalten [EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|+%0] $diarch_aptitude_helps_tax_collectors_postamble$#!"
 diarch_is_preferred_liege_heir: "[diarch|E] ist [designated_heir|E]"
 diarchy_transition_into_co_emperorship_on_majority: "[diarchy|E] wird gestärkt, wenn der [diarch|E] [adult|El] wird"
 half_sop_swing_transfer_over_on_majority: "Die [scales_of_power|E] schlagen halb so stark aus, wenn der [diarch|E] [adult|El] wird"
 liege_may_voluntarily_cede_authority: "Der [liege|E] kann die [scales_of_power|E] freiwillig in Richtung des Diarchen ausschlagen lassen #WEAK (sodass dieser schneller in den Genuss der Vorzüge von stärker ausschlagenden $game_concept_scales_of_power_scales$ kommt)#!"
 diarch_gain_skill_on_majority_t1: "Sobald er [adult|El] wird, erhält der [diarch|E] #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_primary_value')|0]#! zu dem [skill|E] für seine [education|E] und #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t1_secondary_value')|0]#! zu zwei anderen $game_concept_skills$n hinzu"
 diarch_gain_skill_on_majority_t2: "Sobald er [adult|El] wird, erhält der [diarch|E] zusätzlich #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_primary_value')|0])#! zu dem [skill|E] für seine [education|E] und #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t2_secondary_value')|0])#! zu zwei anderen $game_concept_skills$n hinzu"
 diarch_gain_skill_on_majority_t3: "Sobald er [adult|El] wird, erhält der [diarch|E] zusätzlich #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_primary_value')|0])#! zu dem [skill|E] für seine [education|E] und #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t3_secondary_value')|0])#! in zwei anderen $game_concept_skills$n hinzu"
 diarch_gain_skill_on_majority_t4: "Sobald er [adult|El] wird, erhält der [diarch|E] zusätzlich #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_primary_value')|0])#! zu dem [skill|E] für seine [education|E] und #P +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_diff_value')|0]#! #WEAK (insgesamt +[EmptyScope.ScriptValue('diarch_gain_skill_on_majority_t4_secondary_value')|0])#! zu zwei anderen $game_concept_skills$n hinzu"
 unlock_adjust_imperial_bureaucracy_interaction: "[diarchs|E] können erbitten, die [imperial_bureaucracy|E] des [Concept('liege', 'Lehnsherrn')|E] anzupassen, und zwar entweder:\n$SPACE4$$EFFECT_LIST_BULLET$Zentralisieren und dabei die Kosten und jeden [Concept('opinion', 'Meinungsabzug')|E] übernehmen\n$SPACE4$$EFFECT_LIST_BULLET$Dezentralisieren und ihre [strife|E] verringern"
 unlock_scapegoat_counterpart_interaction: "Sowohl [diarch|E] als auch [liege|E] können öffentlich ihr Gegenstück angreifen:\n$SPACE4$$EFFECT_LIST_BULLET$[influence|E] erlangen\n$SPACE4$$EFFECT_LIST_BULLET$Die [opinion|E] vom anderen über sie ruinieren\n$SPACE4$$EFFECT_LIST_BULLET$Schwierigkeiten im [realm|E] anfachen\n$SPACE4$$EFFECT_LIST_BULLET$Skaliert je nachdem, wie viel besser ihre [diplomacy|E] oder ihr [intrigue|E] ist"
 unlock_diarch_requests_military_expedition_interaction: "[diarch|E] kann den Zugriff auf den [casus_belli|E] „[imperial_expedition_cb|E]“ vom [Concept('liege', 'Lehnsherrn')|E] erbitten, um sich Land zu verdienen, dass er entweder behalten oder für große Mengen an [influence|E] abtreten kann"
 unlock_diarch_demand_kingdom_interaction: "[diarchs|E] mit dem [title_tier|E] [duchy|E] können ihr eigenes [governorship|E] mit dem $game_concept_title_tier$ [kingdom|E] fordern"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive: "[co_emperors|E] sind [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_massive_value')|%=+0] effizienter bei der Förderung von [Concept('administrative', 'Verwaltungsämtern')|E]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major: "[co_emperors|E] sind [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_major_value')|%=+0] effizienter bei der Förderung von [Concept('administrative', 'Verwaltungsämtern')|E]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium: "[co_emperors|E] sind [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_medium_value')|%=+0] effizienter bei der Förderung von [Concept('administrative', 'Verwaltungsämtern')|E]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild: "[co_emperors|E] sind [EmptyScope.ScriptValue('diarch_more_efficient_administrative_emperor_promotion_candidate_mild_value')|%=+0] effizienter bei der Förderung von [Concept('administrative', 'Verwaltungsämtern')|E]"
 diarch_more_efficient_administrative_emperor_promotion_candidate_massive.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_massive$ aufgrund der derzeitigen [scales_of_power|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_major.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_major$ aufgrund der derzeitigen [scales_of_power|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_medium.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_medium$ aufgrund der derzeitigen [scales_of_power|E]#!"
 diarch_more_efficient_administrative_emperor_promotion_candidate_mild.tt.interaction_explanation: "#WEAK $diarch_more_efficient_administrative_emperor_promotion_candidate_mild$ aufgrund der derzeitigen [scales_of_power|E]#!"
 diarch_children_born_in_purple_if_culturally_appropriate: "Wenn es die [culture_tradition|E] erlaubt – und wenn „[GetTitleByKey('b_constantinople').GetNameNoTier]“ kontrolliert wird – werden die [children|E] des [Concept('diarch', 'Diarchen')|E] mit der [trait|E] „[GetTrait('born_in_the_purple').GetName(GetNullCharacter)]“ geboren"
 diarch_can_appoint_self_co_emperor: "[SelectLocalization(IsAdministrativeRuler(GetPlayer), '', '#WEAK Inaktiv bei dieser Regierung: ')][regents|E] können sich als [co_emperor|E][SelectLocalization(IsAdministrativeRuler(GetPlayer), '', '#!')] einsetzen"
 ##################################################
 ##Succession Loc
 #Categories.
 diarch_succession_score.category.familial_ties: "Familienbande"
 diarch_succession_score.category.personal_ties: "Persönliche Bande"
 diarch_succession_score.category.societal_bonds: "Gesellschaftliche Bande"
 diarch_succession_score.category.suitable_servant: "Passender Diener"
 diarch_succession_score.category.royal_court: "Königshof"
 diarch_succession_score.category.competence: "Kompetenz"
 diarch_succession_score.category.nepotism: "Vetternwirtschaft"
 diarch_succession_score.category.traits.noble_ambitions: "Eigenschaften #WEAK (Ehrgeiziger Adliger)#!"
 diarch_succession_score.category.traits.civil_service: "Eigenschaften #WEAK (Beamter)#!"
 diarch_succession_score.category.circumstances: "Umstände"
 #Diarchy Specific
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.ruler: "[landed|EU]e [extended_family|El] [ROOT.Char.GetLiege.Custom('GetChildInvalidPossessive')]"
 diarch_succession_score.diarchy_specific.regency.close_or_extended_family_of_invalid.non_ruler: "[unlanded|EU]e [extended_family|El] [ROOT.Char.GetLiege.Custom('GetChildInvalidPossessive')]"
 #Familial Ties
 diarch_succession_score.familial_ties.your_parent: "Elternteil [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_child: "[child|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_sibling: "[ROOT.Char.Custom('SisterBrother')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_grandparent: "Großelternteil [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_grandchild: "Enkelkind [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_auntuncle: "[ROOT.Char.Custom('GetAuntUncle')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_nibling: "[ROOT.Char.Custom('GetNieceNephew')|U] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_cousin: "Vetter(in) [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.your_greatgrandparent: "Urgroß-[ROOT.Char.GetMotherFather] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.yourgreat_grandchild: "Urenkelkind [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.familial_ties.undignified: "Entwürdigend für [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'Euch', 'den Lehnsherrn')]"
 diarch_succession_score.familial_ties.undignified.close_family: "$diarch_succession_score.familial_ties.undignified$ ([close_family|El])"
 diarch_succession_score.familial_ties.undignified.extended_family: "$diarch_succession_score.familial_ties.undignified$ ([extended_family|El])"
 diarch_succession_score.familial_ties.undignified.house: "$diarch_succession_score.familial_ties.undignified$ ([house|E])"
 diarch_succession_score.familial_ties.undignified.dynasty: "$diarch_succession_score.familial_ties.undignified$ ([dynasty|E])"
 #Personal Ties
 diarch_succession_score.personal_ties.your_heir: "[heir|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_spouse: "[spouse|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_ward: "[guardian|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_councillor: "[councillor|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_powerful_vassal: "[powerful_vassal|EU] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.likes_you: "Positive [opinion|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'vom Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_positive_relation: "Positive [relationship|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'zu Euch', 'zum Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_nemesis: "[nemesis|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.personal_ties.your_negative_relation: "Negative [relationship|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'zu Euch', 'zum Lehnsherrn')]"
 diarch_succession_score.personal_ties.dislikes_you: "Negative [opinion|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'vom Lehnsherrn')]"
 #Societal Bonds
 diarch_succession_score.societal_bonds.your_house: "[house|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.societal_bonds.your_dynasty: "[ROOT.Char.GetLiege.Custom('GetLiegeYour')|U]"
 diarch_succession_score.societal_bonds.your_faith: "[faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.societal_bonds.your_culture: "[culture|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 #Suitable Servant
 diarch_succession_score.suitable_servant.tax_collector: "Ist [tax_collector|E]"
 diarch_succession_score.suitable_servant.lowborn: "Ist von [Concept('lowborn', 'niederer Geburt')|E]"
 diarch_succession_score.suitable_servant.landless: "Landloser [character|E]"
 diarch_succession_score.suitable_servant.landed: "Posten bevorzugt Landlose"
 diarch_succession_score.suitable_servant.shares_liege_culture: "Teilt [culture|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.suitable_servant.shares_liege_faith: "Teilt [faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.suitable_servant.shares_liege_hof: "Teilt [head_of_faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_righteous: "Betrachtet [faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] als $hostility_righteous_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_astray: "Betrachtet [faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] als $hostility_astray_tooltippable$"
 diarch_succession_score.suitable_servant.diff_culture_acceptance: "[cultural_acceptance|E]"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_hostile: "Betrachtet [faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] als $hostility_hostile_tooltippable$"
 diarch_succession_score.suitable_servant.diff_faith_considers_liege_evil: "Betrachtet [faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] als $hostility_evil_tooltippable$"
 #Nepotism
 diarch_succession_score.nepotism.primary_spouse.friend: "[friend|E] des [Concept('primary_spouse', 'Hauptehepartners')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.consort.friend: "[friend|E] der Konkubine [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.primary_spouse.best_friend: "[best_friend|E] des [Concept('primary_spouse', 'Hauptehepartners')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.consort.best_friend: "[best_friend|E]"
 diarch_succession_score.nepotism.primary_spouse.rival: "[rival|E] des [Concept('primary_spouse', 'Hauptehepartners')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.consort.rival: "[rival|E] der [Concept('primary_spouse', 'Konkubine')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.primary_spouse.nemesis: "[nemesis|E] des [Concept('primary_spouse', 'Hauptehepartners')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.consort.nemesis: "[nemeses|E] der [Concept('primary_spouse', 'Konkubine')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.any_consort.shares_minority_culture: "Teilt Minderheits-[culture|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.any_consort.shares_minority_faith: "Teilt Minderheits-[faith|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.sah_child.friend: "[friend|E] eines [Concept('courtier', 'Höflings')|E]-[Concept('child', 'Kinds')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.sah_child.best_friend: "[best_friend|E] eines [Concept('courtier', 'Höflings')|E]-[Concept('child', 'Kinds')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.sah_child.rival: "[rival|E] eines [Concept('courtier', 'Höflings')|E]-[Concept('child', 'Kinds')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.sah_child.nemesis: "[nemesis|E] eines [Concept('courtier', 'Höflings')|E]-[Concept('child', 'Kinds')|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.nepotism.sah_child.shares_minority_culture: "Teilt Minderheits-[culture|E] mit [Concept('courtier', 'Höflings')|E]-[child|E]"
 diarch_succession_score.nepotism.sah_child.shares_minority_faith: "Teilt Minderheits-[Concept('faith', 'Glauben')|E] mit [Concept('courtier', 'Höflings')|E]-[child|E]"
 diarch_succession_score.nepotism.incumbent_vizier.close_family: "[close_family|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.extended_family: "[extended_family|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.friend: "[friend|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.best_friend: "[best_friend|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.rival: "[rival|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.nemesis: "[nemesis|E] von [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_culture: "Teilt Minderheits-[culture|E] mit [vizier|E]"
 diarch_succession_score.nepotism.incumbent_vizier.shares_minority_faith: "Teilt Minderheits-[Concept('faith', 'Glauben')|E] mit [vizier|E]"
 #Traits
 ## Personality
 diarch_succession_score.traits.ambitious: "[GetTrait('ambitious').GetName(ROOT.Char)]"
 diarch_succession_score.traits.content: "[GetTrait('content').GetName(ROOT.Char)]"
 diarch_succession_score.traits.diligent: "[GetTrait('diligent').GetName(ROOT.Char)]"
 diarch_succession_score.traits.lazy: "[GetTrait('lazy').GetName(ROOT.Char)]"
 diarch_succession_score.traits.arrogant: "[GetTrait('arrogant').GetName(ROOT.Char)]"
 diarch_succession_score.traits.humble: "[GetTrait('humble').GetName(ROOT.Char)]"
 diarch_succession_score.traits.patient: "[GetTrait('patient').GetName(ROOT.Char)]"
 diarch_succession_score.traits.impatient: "[GetTrait('impatient').GetName(ROOT.Char)]"
 diarch_succession_score.traits.just: "[GetTrait('just').GetName(ROOT.Char)]"
 diarch_succession_score.traits.greedy: "[GetTrait('greedy').GetName(ROOT.Char)]"
 diarch_succession_score.traits.generous: "[GetTrait('generous').GetName(ROOT.Char)]"
 ## Lifestyle
 diarch_succession_score.traits.diplomat: "[GetTrait('diplomat').GetName(ROOT.Char)]"
 diarch_succession_score.traits.administrator: "[GetTrait('administrator').GetName(ROOT.Char)]"
 diarch_succession_score.traits.avaricious: "[GetTrait('avaricious').GetName(ROOT.Char)]"
 diarch_succession_score.traits.schemer: "[GetTrait('schemer').GetName(ROOT.Char)]"
 #Royal Court
 diarch_succession_score.royal_court.court_type.diplomacy: "[diplomacy|E] am $court_diplomatic$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.martial: "[martial|E] am $court_warlike$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.stewardship: "[stewardship|E] am $court_administrative$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.intrigue: "[intrigue|E] am $court_intrigue$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.learning: "[learning|E] am $court_scholarly$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.court_type.prowess: "[prowess|E] am $court_tribal$ #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_court_type_baseline_value')])#!"
 diarch_succession_score.royal_court.speaks_court_language: "Spricht [court_language|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 #Competence
 ## Competence varies per diarchy type, so you'll likely want to make different loc keys referencing different thresholds here.
 diarch_succession_score.competence.vizierate.diplomacy: "[diplomacy|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.stewardship: "[stewardship|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 diarch_succession_score.competence.vizierate.intrigue: "[intrigue|E] #WEAK (>[EmptyScope.ScriptValue('diarchy_succession_competence_baseline_value')])#!"
 #Circumstances
 diarch_succession_score.circumstances.cripplingly_ill: "Hat lähmende Erkrankung"
 diarch_succession_score.circumstances.badly_wounded: "Hat lähmende Verletzungen"
 diarch_succession_score.circumstances.known_criminal: "Als [criminal|E] bekannt"
 diarch_succession_score.circumstances.very_young: "Ist zu jung"
 diarch_succession_score.circumstances.stressed_out: "Ist sichtlich angespannt"
 diarch_succession_score.circumstances.illegitimate: "Ist außerehelich"
 diarch_succession_score.circumstances.mildly_ill: "Hat leichte Erkrankung"
 diarch_succession_score.circumstances.mildly_wounded: "Hat leichte Verletzungen"
 diarch_succession_score.circumstances.not_speak_language: "Spricht Haupt-[language|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] nicht"
 #Disqualifiers
 diarch_succession_score.disqualifiers.neither_vassal_nor_courtier: "Weder [vassal|E] noch [courtier|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_succession_score.disqualifiers.child: "Ist ein [child|E]"
 diarch_succession_score.disqualifiers.imprisoned: "Ist [imprisoned|El]"
 diarch_succession_score.disqualifiers.incapable_or_infirm: "Ist [GetTrait('incapable').GetName(ROOT.Char)|l] oder [GetTrait('infirm').GetName(ROOT.Char)|l]"
 diarch_succession_score.disqualifiers.right_gendered_for_liege: "Geschlecht entspricht nicht [Concept('faith', 'Glaubens')|E] -Anforderungen des [Concept('liege', 'Lehnsherrn')|E]"
 diarch_succession_score.disqualifiers.count_or_above: "Haltet einen höheren Titel als eine [barony|E]"
 ##################################################
 ##Loyalty Loc
 diarch_loyalty_score.regency.opinion_of_you: "[opinion|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'vom Lehnsherrn')]"
 diarch_loyalty_score.regency.your_positive_relation: "$diarch_succession_score.personal_ties.your_positive_relation$"
 diarch_loyalty_score.regency.your_negative_relation: "$diarch_succession_score.personal_ties.your_negative_relation$"
 diarch_loyalty_score.regency.lazy: "[GetTrait('lazy').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.diligent.positive: "[GetTrait('diligent').GetName(ROOT.Char)|U] & positive [opinion|E]"
 diarch_loyalty_score.regency.diligent.negative: "[GetTrait('diligent').GetName(ROOT.Char)|U] & negative [opinion|E]"
 diarch_loyalty_score.regency.craven: "[GetTrait('craven').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.honest: "[GetTrait('honest').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.deceitful: "[GetTrait('deceitful').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.content: "[GetTrait('content').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.ambitious: "[GetTrait('ambitious').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.arbitrary: "[GetTrait('arbitrary').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.just: "[GetTrait('just').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.disloyal: "[GetTrait('disloyal').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.loyal: "[GetTrait('loyal').GetName(ROOT.Char)|U]"
 diarch_loyalty_score.regency.humble: "[GetTrait('humble').GetName(ROOT.Char)]"
 diarch_loyalty_score.regency.arrogant: "[GetTrait('arrogant').GetName(ROOT.Char)]"
 diarch_loyalty_score.regency.patient: "[GetTrait('patient').GetName(ROOT.Char)]"
 diarch_loyalty_score.regency.impatient: "[GetTrait('impatient').GetName(ROOT.Char)]"
 diarch_loyalty_score.regency.compassion_for_helpless: "[personality|E] hat Mitleid (Grund: [ROOT.Char.GetLiege.Custom('GetChildInvalid')|U])"
 diarch_loyalty_score.regency.chief_eunuch: "[GetCourtPositionType('chief_eunuch_court_position').GetName()]"
 diarch_loyalty_score.regency.chief_qadi: "[GetCourtPositionType('chief_qadi_court_position').GetName()]"
 diarch_loyalty_score.regency.tradition_fp2_malleable_subjects: "[culture|E] hat Tradition „[GetCultureTradition('tradition_fp2_malleable_subjects').GetName]“"
 diarch_loyalty_score.regency.tradition_talent_acquisition: "Ist [lowborn|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_talent_acquisition').GetName]“"
 diarch_loyalty_score.regency.tradition_astute_diplomats.positive: "Positive [opinion|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_astute_diplomats').GetName]“"
 diarch_loyalty_score.regency.tradition_astute_diplomats.negative: "Negative [opinion|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_astute_diplomats').GetName]“"
 diarch_loyalty_score.regency.tradition_ruling_caste: "[liege|E]-[culture|E] hat Tradition „[GetCultureTradition('tradition_ruling_caste').GetName]“"
 diarch_loyalty_score.regency.tradition_family_entrepreneurship: "Ist [extended_family|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_family_entrepreneurship').GetName]“"
 diarch_loyalty_score.regency.tradition_hereditary_hierarchy: "[culture|E] hat Tradition „[GetCultureTradition('tradition_hereditary_hierarchy').GetName]“"
 diarch_loyalty_score.regency.tradition_tribe_unity: "Gleiches [house|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_tribe_unity').GetName]“"
 diarch_loyalty_score.regency.tradition_strong_kinship: "Gleiches [house|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_strong_kinship').GetName]“"
 diarch_loyalty_score.regency.tradition_chivalry.gain: "[liege|E] ist ehrenhaft & [culture|E] hat Tradition „[GetCultureTradition('tradition_chivalry').GetName]“"
 diarch_loyalty_score.regency.tradition_chivalry.loss: "[liege|E] ist unehrenhaft & [culture|E] hat Tradition „[GetCultureTradition('tradition_chivalry').GetName]“"
 diarch_loyalty_score.regency.tradition_philosopher_culture: "[education|E] in Sachen [learning|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_philosopher_culture').GetName]“"
 diarch_loyalty_score.regency.tradition_vegetarianism: "Ekelhafte Speisevorlieben [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_loyalty_score.regency.tradition_eye_for_an_eye: "[culture|E] hat Tradition „[GetCultureTradition('tradition_eye_for_an_eye').GetName]“"
 diarch_loyalty_score.regency.tradition_byzantine_succession: "[culture|E] hat Tradition „[GetCultureTradition('tradition_byzantine_succession').GetName]“"
 diarch_loyalty_score.regency.tradition_warrior_culture: "[education|E] in Sachen [martial|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')] & [culture|E] hat Tradition „[GetCultureTradition('tradition_warrior_culture').GetName]“"
 diarch_loyalty_score.regency.tradition_practiced_pirates: "[culture|E] hat Tradition „[GetCultureTradition('tradition_practiced_pirates').GetName]“"
 diarch_loyalty_score.regency.tradition_faith_bound: "Unterschiedlicher [faith|E] & [culture|E] hat Tradition „[GetCultureTradition('tradition_faith_bound').GetName]“"
 diarch_loyalty_score.regency.tyranny: "[tyranny|E] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von Euch', 'des Lehnsherrn')]"
 diarch_loyalty_score.regency.temporary_regency.dread: "[Concept('dreadful', 'Schrecklicher')|E] [liege|E] wird bald zurück sein"
 diarch_loyalty_score.regency.override_negated: "Minimale [opinion|E] mildert äußerste Loyalität"
 diarch_loyalty_score.regency.loyalty_hook.self: "„$loyalty_hook$“-[hook|E]"
 diarch_loyalty_score.regency.loyalty_hook.predecessor: "„$predecessor_loyalty_hook$“-[hook|E]"
 diarch_loyalty_score.regency.ai_honour: "[personality|E] ist äußerst ehrenhaft"
 diarch_loyalty_score_power_at_home_perk: "[GetPerk('power_at_home_perk').GetName(GetNullCharacter)]"
 diarch_loyalty_score.co_rule.co_emperorship.dread: "[dreadful|E]"
 diarch_loyalty_score.co_rulership.designated_heir: "[designated_heir|E]"
 diarch_loyalty_score.co_rulership.years_waiting: "Jahre wartend"
 diarch_loyalty_score.co_rulership.age_difference: "Die Zeit ist mit den Jungen"
 diarch_loyalty_score.co_rulership.just_die_already: "#BOL Sterbt doch einfach#!"
 diarch_loyalty_score.co_rulership.your_time_is_up: "#EMP Die Zeit [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'von', 'des')] [Select_CString(ROOT.Char.GetLiege.IsLocalPlayer, 'Euch', 'Lehnsherrn')] ist abgelaufen#!"
 diarch_loyalty_score.co_rulership.you_are_too_fit: "Alter Mensch zu [healthy|E]"
 diarch_loyalty_score.co_rulership.showing_no_signs_of_slowing: "Das Alter holt [ROOT.Char.GetLiege.Custom('GetLiegeYou')] nicht ein"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.overflow_edgecase: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird wahrscheinlich $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ bleiben"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.remains_static: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird $DIARCHY_WINDOW_VISIBLY_DISLOYAL$ bleiben"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_selfless: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ zu $DIARCHY_WINDOW_VISIBLY_LOYAL$ ändern"
 raise_diarch_opinion_with_loyalty_update_effect.tt.self_interested.to_situational: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_VISIBLY_DISLOYAL$ zu $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ ändern"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_selfless: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ zu $DIARCHY_WINDOW_VISIBLY_LOYAL$ ändern"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.to_self_interested: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ zu $DIARCHY_WINDOW_VISIBLY_DISLOYAL$ ändern"
 raise_diarch_opinion_with_loyalty_update_effect.tt.situational.remains_static: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ bleiben"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.overflow_edgecase: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird wahrscheinlich $DIARCHY_WINDOW_VISIBLY_LOYAL$ bleiben"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.remains_static: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird $DIARCHY_WINDOW_VISIBLY_LOYAL$ bleiben"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_self_interested: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_VISIBLY_LOYAL$ zu $DIARCHY_WINDOW_VISIBLY_DISLOYAL$ ändern"
 raise_diarch_opinion_with_loyalty_update_effect.tt.selfless.to_situational: "Die [diarch_loyalty|E] Eures [Concept('diarch', 'Diarchen')|E] wird sich von $DIARCHY_WINDOW_VISIBLY_LOYAL$ zu $DIARCHY_WINDOW_UNKNOWN_LOYALTY$ ändern"
 ##################################################
 ##Tax Collection
 diarchy_tax_collector_boost.scales_of_power: "[scales_of_power|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t1: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t1_value')|%V0] der [aptitude|E] [diarch_possessive|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t2: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t2_value')|%V0] der [aptitude|E] [diarch_possessive|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t3: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t3_value')|%V0] der [aptitude|E] [diarch_possessive|E]"
 diarchy_tax_collector_boost.diarch_aptitude.t4: "#V +#![EmptyScope.ScriptValue('diarch_aptitude_helps_tax_collectors_t4_value')|%V0] der [aptitude|E] [diarch_possessive|E]"
 ##################################################
 ##Schemes
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_loyal: "#WEAK [GetTrait('loyal').GetName(actor)|U]: [recipient.GetTitledFirstName] ist [Select_CString(recipient.IsFemale, 'eine gute Dienerin', 'ein guter Diener')] von [actor.GetLiege.GetTitledFirstName] und sollte bleiben#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.loyal.remove_disloyal: "#WEAK [GetTrait('loyal').GetName(actor)|U]: [recipient.GetTitledFirstName] ist [Select_CString(recipient.IsFemale, 'eine Schurkin', 'ein Schurke')] und muss zum Wohl des Reichs entfernt werden#!"
 overthrow_regent_scheme_interaction_actor_stress_effect.tt.disloyal.remove_loyal: "#WEAK [GetTrait('disloyal').GetName(actor)|U]: [recipient.GetTitledFirstName] ist [Select_CString(recipient.IsFemale, 'eine Speichelleckerin', 'ein Speichellecker')] und muss gehen#!"
 overthrow_regent_scheme_interaction.tt.cannot_release: "Kann keine Aktion durchführen, die den ehemaligen [Concept('regent', 'Regenten')|E] befreien würde, während der derzeitige $game_concept_regent$ im Amt ist"
 ##################################################
 ##Vizier Candidates
 vizier_candidate_has_studied_recently_modifier: "Anstrengendes Studium"
 vizier_candidate_has_studied_recently_modifier_desc: "Dieser Charakter hat sich in letzter Zeit große Mühe gegeben, die eigenen Fähigkeiten als Beamter zu verbessern, und die Ergebnisse sprechen für sich – ebenso wie die Kosten."
 vizier_extravagance_treasure_title: "Schätze"
 vizier_extravagance_activities_title: "Aktivitäten"
 vizier_extravagance_property_title: "Besitztümer"
 vizier_extravagance_charity_title: "Dotierung"
 vizier_extravagance_t1_title: "beachtenswert"
 vizier_extravagance_t1_treasure_modifier: "$vizier_extravagance_t1_title$e $vizier_extravagance_treasure_title$"
 vizier_extravagance_t1_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Treasure')]"
 vizier_extravagance_t1_activities_modifier: "$vizier_extravagance_t1_title$e $vizier_extravagance_activities_title$"
 vizier_extravagance_t1_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Activities')]"
 vizier_extravagance_t1_property_modifier: "$vizier_extravagance_t1_title$e $vizier_extravagance_property_title$"
 vizier_extravagance_t1_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Property')]"
 vizier_extravagance_t1_charity_modifier: "$vizier_extravagance_t1_title$e $vizier_extravagance_charity_title$"
 vizier_extravagance_t1_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t1_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T1_Charity')]"
 vizier_extravagance_t2_title: "bemerkenswert"
 vizier_extravagance_t2_treasure_modifier: "$vizier_extravagance_t2_title$e $vizier_extravagance_treasure_title$"
 vizier_extravagance_t2_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Treasure')]"
 vizier_extravagance_t2_activities_modifier: "$vizier_extravagance_t2_title$e $vizier_extravagance_activities_title$"
 vizier_extravagance_t2_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Activities')]"
 vizier_extravagance_t2_property_modifier: "$vizier_extravagance_t2_title$e $vizier_extravagance_property_title$"
 vizier_extravagance_t2_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Property')]"
 vizier_extravagance_t2_charity_modifier: "$vizier_extravagance_t2_title$e $vizier_extravagance_charity_title$"
 vizier_extravagance_t2_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t2_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T2_Charity')]"
 vizier_extravagance_t3_title: "berühmt"
 vizier_extravagance_t3_treasure_modifier: "$vizier_extravagance_t3_title$e $vizier_extravagance_treasure_title$"
 vizier_extravagance_t3_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Treasure')]"
 vizier_extravagance_t3_activities_modifier: "$vizier_extravagance_t3_title$e $vizier_extravagance_activities_title$"
 vizier_extravagance_t3_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Activities')]"
 vizier_extravagance_t3_property_modifier: "$vizier_extravagance_t3_title$e $vizier_extravagance_property_title$"
 vizier_extravagance_t3_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Property')]"
 vizier_extravagance_t3_charity_modifier: "$vizier_extravagance_t3_title$e $vizier_extravagance_charity_title$"
 vizier_extravagance_t3_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t3_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T3_Charity')]"
 vizier_extravagance_t4_title: "illuster"
 vizier_extravagance_t4_treasure_modifier: "$vizier_extravagance_t4_title$e $vizier_extravagance_treasure_title$"
 vizier_extravagance_t4_treasure_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_treasure_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Treasure')]"
 vizier_extravagance_t4_activities_modifier: "$vizier_extravagance_t4_title$e $vizier_extravagance_activities_title$"
 vizier_extravagance_t4_activities_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_activities_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Activities')]"
 vizier_extravagance_t4_property_modifier: "$vizier_extravagance_t4_title$e $vizier_extravagance_property_title$"
 vizier_extravagance_t4_property_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_property_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Property')]"
 vizier_extravagance_t4_charity_modifier: "$vizier_extravagance_t4_title$e $vizier_extravagance_charity_title$"
 vizier_extravagance_t4_charity_modifier_custom_desc: "[ROOT.Char.Custom('VizierExtravagance_T4_Charity')]"
 vizier_extravagance_t4_charity_modifier_custom_desc.on_action: "[ROOT.Title.GetHolder.Custom('VizierExtravagance_T4_Charity')]"
 viz_extravagance.t1.treasure.hankerchiefs: "Dieser Charakter benutzt einfach zu viele Taschentücher aus edlem Leinen – im Sommer zehn am Tag – und wirft trotzdem jedes nach Gebrauch weg."
 viz_extravagance.t1.treasure.cosmetics: "Dieser Charakter hat für jemanden seines Standes Zugang zu einem ungewöhnlich großen Vorrat an feinen Parfüms, Salben und Kosmetika."
 viz_extravagance.t1.treasure.jewellery: "Diesem Charakter scheint es nie an frischem Schmuck zu mangeln: Gold, Silber und kostbare Edelsteine blitzen an Gesicht und Händen."
 viz_extravagance.t1.treasure.furniture: "Die Möbel dieses Charakters sind stets aus den besten eingeführten Hölzern und Erzen gefertigt und werden so oft ersetzt, wie es die Mode erlaubt und der gute Geschmack es gebietet."
 viz_extravagance.t1.treasure.clothing: "Dieser Charakter verfügt über einen scheinbar unerschöpflichen Kleiderschrank mit edlen Kleidungsstücken in den neuesten Moden – und auch über einige, die selbst zur Mode werden könnten."
 viz_extravagance.t1.treasure.hats: "Dieser Charakter trägt selten länger als ein oder zwei Wochen denselben Hut – warum sollte er sich auch einschränken, wenn es jedes Jahr so viele neue, höhere Hüte gibt?"
 viz_extravagance.t1.treasure.relics: "Dieser Charakter ist dafür bekannt, dass er eine kleine, aber feine Sammlung heiliger Reliquien besitzt."
 viz_extravagance.t1.treasure.drugs: "Die Schränke dieses Charakters sind dafür bekannt, dass sie eine edle Sammlung exotischer Drogen, Getränken und Schnäpsen enthalten, von denen viele zu den selteneren Substanzen gehören, die in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] verfügbar sind."
 viz_extravagance.t1.treasure.game_pieces: "Dieser Charakter hat eine Ausgabe jedes Brettspiels, das in dieser Ecke der Welt bekannt ist – mit Spielsteinen, die aus allem Möglichen geschnitzt sind, von Edelsteinen bis hin zu den Knochen legendärer Bestien."
 viz_extravagance.t1.treasure.hourglasses: "Dieser Charakter ist im Besitz einer der genauesten Sanduhren der Welt – für einen Beamten gibt es kaum ein luxuriöseres Werkzeug."
 viz_extravagance.t1.activities.parades: "Dieser Charakter veranstaltet gern Umzüge, bei denen Münzen und Lebensmittel an Bedürftige verteilt werden. Immer auf eigene Kosten – und in eigenem Namen."
 viz_extravagance.t1.activities.festivals: "Dieser Charakter ist dafür bekannt, dass er die Gärten und unteren Säle seiner privaten Residenzen für kleine Feste öffnet, um das gemeine Volk kurz von der edlen Pracht kosten zu lassen."
 viz_extravagance.t1.activities.auctions: "Dieser Charakter veranstaltet regelmäßig Wohltätigkeitsauktionen, bei denen einige der von ihm angesammelten Schätze veräußert werden, um Geld für die Bedürftigen des Reichs zu sammeln."
 viz_extravagance.t1.activities.feasts: "Dieser Charakter genießt es, den örtlichen Adel regelmäßig bei nicht öffentlichen Zusammenkünften zu bewirten. Manche flüstern, es würde tatsächlich Blut vergossen, um an eine Einladung zu kommen."
 viz_extravagance.t1.activities.board_game_tourneys: "Dieser Charakter veranstaltet gern Brettspiel-Turniere für die Oberschicht, bei denen die versammelten Reichen und Mächtigen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] alle neuesten Varianten spielen."
 viz_extravagance.t1.activities.pigeon_racing: "Dieser Charakter hat eine etwas peinliche Faszination für Taubenrennen – und er besitzt einen entsprechend großen Taubenschlag."
 viz_extravagance.t1.activities.orgies: "Dieser Charakter ist dafür bekannt, #EMP diskrete#! Stelldichein für einige der … lüsterneren Bewohner von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] auszumachen."
 viz_extravagance.t1.activities.feasts.weekly: "Dieser Charakter veranstaltet jede Woche riesige Bankette – der niedere Adel von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] ist allein schon wegen seiner Küchen auf ihn angewiesen."
 viz_extravagance.t1.activities.exhibitions: "Dieser Charakter hat eine Vorliebe für Kunst und legt Wert darauf, sowohl die Künste zu fördern als auch die Früchte seines Mäzenatentums auszustellen, manchmal sogar für die einfachsten Mitglieder der Gesellschaft."
 viz_extravagance.t1.activities.feasts.commoners: "Dieser Charakter feiert regelmäßig deftige Festmahle, wobei er darauf achtet, die bedeutendsten Bürger von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] einzuladen, selbst wenn ihr Stand sie sonst ausschließen würde."
 viz_extravagance.t1.property.townhouse: "Dieser Charakter hat ein schön ausgestattetes und doch angemessen bescheidenes Stadthaus in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.property.minor_businesses: "Die Geschäftsinteressen dieses Charakters sind vielfältig und umfassen Werkstätten, niedere Zünfte und kleinere Grundstücke in der ganzen Hauptstadt."
 viz_extravagance.t1.property.small_arena: "Dieser Charakter besitzt und unterhält eine kleine private Rennbahn für Pferderennen. Dass damit Wetten einhergehen, ist natürlich eine erfreuliche Begleiterscheinung …"
 viz_extravagance.t1.property.manse: "Dieser Charakter hat ein privates Anwesen direkt vor [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] – nah genug, damit es bequem ist, weit genug, um Diskretion zu gewährleisten."
 viz_extravagance.t1.property.toll_road: "Dieser Charakter besitzt alleiniglich eine besonders gewinnträchtige Mautstraße, die nach [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] führt. Wie er in den Besitz dieser Straße kam und wann die Maut eingeführt wurde, ist Gegenstand zahlreicher Mutmaßungen."
 viz_extravagance.t1.property.agent_network: "Dieser Charakter unterhält ein Netz von Agenten im gesamten Reich, die seine Geschäftsinteressen selbst in den entlegensten Außenposten überwachen und pflegen."
 viz_extravagance.t1.property.rooftop_garden: "Dieser Charakter zahlt für die Pflege eines weitläufigen Dachgartens in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], sehr zum Erstaunen der Bürger auf der Straße."
 viz_extravagance.t1.property.market_officials_on_payroll: "Dieser Charakter ist dafür bekannt, dass er jeden einzelnen Aufseher und Zollbeamten auf einem der wichtigsten Marktplätze der Hauptstadt auf der eigenen Gehaltsliste hat. Natürlich nur, um deren Ehrlichkeit gegenüber dem Reich zu wahren."
 viz_extravagance.t1.property.hostel: "Dieser Charakter besitzt eine billige Herberge in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], die sich bewusst an die Ärmsten und Schwächsten der Gesellschaft richtet."
 viz_extravagance.t1.property.gangers: "Dieser Charakter hat #EMP angeblich#! eine der größten Banden in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] auf seiner Gehaltsliste – was ein aufrechter Beamter mit einer Bande von bösartigen Schlägern zu tun hat, weiß allerdings niemand."
 viz_extravagance.t1.charity.orphans: "Dieser Charakter zahlt für die Aufnahme und Erziehung einer bestimmten Anzahl von Waisenkindern jedes Jahr. Die Jugendlichen erhalten bis zur Volljährigkeit eine angemessene Ausbildung, Verpflegung, Unterkunft und moralische Unterweisung."
 viz_extravagance.t1.charity.building_repair: "Dieser Charakter unterhält ein kleines Sondervermögen, auf das Bürger der Hauptstadt zugreifen können, falls ihre Häuser beschädigt werden – wenn sie sich die Instandsetzungen nicht leisten können, erhalten sie daraus einen Zuschuss."
 viz_extravagance.t1.charity.feasts.religious: "Dieser Charakter unterstützt eine Reihe jährlicher religiöser Feste für die Bürger von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t1.charity.widowers: "Dieser Charakter zahlt mittellosen Witwern in der Hauptstadt eine Leibrente."
 viz_extravagance.t1.charity.widows: "Dieser Charakter zahlt mittellosen Witwen in der Hauptstadt eine Leibrente."
 viz_extravagance.t1.charity.beggars: "Dieser Charakter unterhält ein kleines Sondervermögen, das die Bettler und Mittellosen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] speist und kleidet – eine lebenswichtige Rettungsleine für den Bodensatz des Reichs."
 viz_extravagance.t1.charity.awkward_children: "Dieser Charakter zahlt für ein kleines Sondervermögen, aus dem jugendliche Dienstboten neue Krüge beschaffen können, wenn sie ihre beim morgendlichen Wasserholen zerbrochen haben – ohne dass jemand aus dem Haushalt der Kinder etwas von ihren kleinen Unfällen erfährt."
 viz_extravagance.t1.charity.civil_service.guard: "Dieser Charakter unterhält einen kleinen Wachposten nebst Besatzung, der vor einem der wichtigeren Verwaltungsgebäude in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] steht."
 viz_extravagance.t1.charity.birds: "Dieser Charakter bezahlt dafür, dass in bestimmten Gassen regelmäßig Körner für die Vögel der Hauptstadt ausgestreut werden – nur Barbaren würden diese Tiere leiden und verhungern lassen."
 viz_extravagance.t1.charity.monastery: "Dieser Charakter zahlt für den Unterhalt (wie auch schon für die Gründung) einer abgeschiedenen Religionsgemeinschaft, fernab der Sünden des alltäglichen Lebens."
 viz_extravagance.t1.charity.judges: "Dieser Charakter kommt dafür auf, dass einige der Berufsrichter des Reichs mehr Zeit haben, um Verfahren anzuhören und weiter umherzureisen."
 viz_extravagance.t1.charity.kitchens: "Dieser Charakter zahlt für eine Reihe kleiner kostenloser Küchen, die die dankbaren Armen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] versorgen."
 viz_extravagance.t2.treasure.cabinet_of_curiosities: "Dieser Charakter hat ein Zimmer, das exotischen Kuriositäten und seltsamem Krimskrams aus fernen Ländern gewidmet ist. Obwohl es wenig praktischen Nutzen hat, #EMP ist#! es bei seinen Gäste ganz besonders beliebt."
 viz_extravagance.t2.treasure.gems: "Man munkelt, dieser Charakter horte beutelweise kostbare Edelsteine. Die wenigen, die seine Sammlung gesehen haben, behaupten, jeder Beutel sei einer bestimmten Familie schöner Steine gewidmet."
 viz_extravagance.t2.treasure.sculpture: "Dieser Charakter ist ein großer Liebhaber der Künste, und in seinen Wohnhäusern finden sich häufig Statuen, die aus Edelmetall gegossen oder aus teurem Gestein gehauen wurden."
 viz_extravagance.t2.treasure.decorative_martial_gear: "Dieser Charakter mag dekorative Waffen und Rüstungen – seine Wohnhäuser sind voller unpraktischer, aber schmückender Militaria: von Goldschwertern bis hin zu edelsteinbesetzten Schilden."
 viz_extravagance.t2.treasure.bezoar_cutlery: "Dieser Charakter besitzt einen Satz außerordentlich teures Magenstein-Besteck: Diese arkanen Steinen sollen selbst die Wirkung der tödlichsten Gifte verlangsamen, neutralisieren oder sogar umkehren können, was die Utensilien sowohl äußerst elegant #EMP als auch#! nützlich macht."
 #Narrator's note: bezoars do not, in fact, stop poison. Le big RIP.
 viz_extravagance.t2.treasure.fly_stones: "Dieser Charakter besitzt eine kleine Sammlung von Fliegensteinen: Diese mystischen Steine sollen Fliegen, Mücken und andere summende Plagegeister in einem kleinen Umkreis um sich herum abwehren, was sie zu einem begehrten Schmuckstück am Esstisch macht."
 #Narrator's note: fly stones are sadly fictional.
 viz_extravagance.t2.treasure.indexed_bribes: "Dieser Charakter ist für seine sorgfältig anberaumten und abgestuften Bestechungsgelder bekannt, die angeblich so regelmäßig und berechenbar sind, dass er bestimmt hundert Beutel verschiedener Größe mit abgezählten Münzen bereithält."
 viz_extravagance.t2.treasure.map_of_world: "Dieser Charakter besitzt eine Karte der gesamten bekannten Welt. Angeblich gehört sie zu den genauesten des Reichs und bedeckt eine ganze Wand – man kann ihn oft dabei ertappen, wie er gedankenversunken darauf starrt."
 viz_extravagance.t2.treasure.horse_armour: "Die vielen Pferde dieses Charakters sind selten ohne kostbaren Schmuck zu sehen, dessen Materialien jenen entsprechen, die der Charakter selbst trägt – von perlenbesetzten Sätteln bis hin zu silbernen Zügeln."
 viz_extravagance.t2.treasure.crockery: "Dieser Charakter prahlt regelmäßig damit, dass seine Küche einige der größten Töpfe und Pfannen aus den seltensten Materialien hat, die in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] zu bekommen sind."
 viz_extravagance.t2.activities.feasts.pool: "Dieser Charakter genießt es, Feste rund um ein großzügiges künstliches Schwimmbecken zu feiern, das mit großem Aufwand in einer seiner Privatresidenzen angelegt wurde und von Plüschkissen, gepolsterten Liegen und dem Klirren beim Einschenken von Getränken umgeben ist."
 viz_extravagance.t2.activities.gambling.horse: "Der ganze Stolz dieses Charakter ist ein Stall voller wettbewerbsfähiger Rennhengste – fast alle aus reinster fremdländischer Zucht."
 viz_extravagance.t2.activities.feasts.interactive: "Die Festmahle dieses Charakters sind bekannt für ihre Mitmachanteile: Münzbeutel, die in den Speisen der Gäste versteckt sind, Grundstücksurkunden, für die nur ein unterschriebener Name im Abort hinterlassen werden muss, Skulpturen, die sich entfalten, wenn man ein Rätsel löst, und dann dem Lösenden ein kostbares Juwel offenbaren – und vieles mehr."
 viz_extravagance.t2.activities.feasts.long: "Dieser Charakter glaubt fest daran, dass eine Feier erst dann zu Ende ist, wenn die Vorräte des Gastgebers aufgebraucht sind – daher sind einige seiner Festmahle dafür bekannt, eine Woche oder länger zu dauern."
 viz_extravagance.t2.activities.concerts: "Dieser Charakter schätzt die Musik mehr als alle anderen Künste und betrachtet ihr Fehlen als wahrhaftige Tragödie. Viele seiner Festmahle sind eigentlich große Konzerte – manchmal sogar so groß, dass ein paar Bürgerliche daran teilnehmen können."
 viz_extravagance.t2.activities.theatre: "Dieser Charakter liebt Schauspiel, Theater und Akrobatik wie kaum ein anderer. Bei seinen Festmahlen gibt es unverhältnismäßig viele Schausteller, und die alten Klassiker mit neuen Gesichtern sind bei jeder Feier ein fester Bestandteil."
 viz_extravagance.t2.activities.poetry: "Dieser Charakter hält sich selbst für einen Dichter – ob andere ihm zustimmen oder nicht. Einladungen zu den luxuriösen Festmahlen, bei denen er seine Lesungen hält, sind allerdings sehr begehrt."
 viz_extravagance.t2.activities.amnesties: "Dieser Charakter ist der Meinung, dass jedem vergeben werden kann, vorausgesetzt, er tut Buße und leistet Wiedergutmachung. Er nutzt seine Stellung in der Verwaltung, um regelmäßige Amnestien für Verbrecher in die Wege zu leiten, die sich als reuig genug erweisen."
 viz_extravagance.t2.activities.animal_baiting: "Dieser Charakter liebt nichts mehr als das Schnauben, Knurren und Schreien wilder Tiere, die um ihr Leben kämpfen. Hetzer, Hunde und wilde Bestien, sowohl exotische als auch gewöhnliche, kämpfen bei den meisten seiner Festmahle in Gruben miteinander."
 viz_extravagance.t2.activities.sermons: "Dieser Charakter ist leidenschaftlich religiös – weitaus mehr, als es der Anstand gebietet – und achtet darauf, dass [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural] und Predigten zu seinen Festmahlen dazugehören."
 viz_extravagance.t2.property.monopoly: "Dieser Charakter hat das Glück, ein Monopol auf den Verkauf bestimmter Grundnahrungsmittel innerhalb der Mauern von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] zu besitzen – dass er das entsprechende Amt für derlei Monopole leitet, hat wahrscheinlich nichts damit zu tun."
 viz_extravagance.t2.property.exotic_market: "Dieser Charakter besitzt einen der berühmtesten Märkte für exotische Waren in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] und kassiert dort saftige Steuern."
 viz_extravagance.t2.property.mine: "Dieser Charakter besitzt eine lukrative Mine in der Nähe der Hauptstadt, eine wichtige Quelle für alltägliche Metalle für Haushalt und Handel."
 viz_extravagance.t2.property.warehouses: "Diesem Charakter gehört eine wahrhaft große Zahl von Lagerhäusern, die in der Nähe des Händlerviertels der Hauptstadt verborgen liegen. Sie sind derart gut mit exotischen Handelsgütern bestückt, dass die Einheimischen sie als die „Schatzkammern von [ROOT.Char.GetDiarchy.GetDiarch.GetFirstNameNoTooltip]“ bezeichnen."
 viz_extravagance.t2.property.messenger_network: "Dieser Charakter verfügt über ein reichsweites Netz von diskreten (und vor allem #EMP treuen#!) Boten, die seinen Willen und seine Anweisungen an jeden Außenposten des Landes übermitteln können."
 viz_extravagance.t2.property.workshops: "Diesem Charakter gehört fast jede Werkstatt an einem der meistbesuchten Orte von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], einer Straße, die für ihre vielfältigen und schönen Waren bekannt ist."
 viz_extravagance.t2.property.personal_temple: "Dieser Charakter besitzt ein prächtiges eigenes Gotteshaus ([ROOT.Char.GetDiarchy.GetDiarch.GetFaith.HouseOfWorship]), das nur von ihm, seiner Familie und seinen engsten Verbündeten genutzt werden darf."
 viz_extravagance.t2.property.fort: "Dieser Charakter besitzt eine kleine Festung im gefährlichen Hinterland in der Nähe von [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.GetNameNoTierNoTooltip]. Der Unterhalt ist zwar teuer, doch die reiche Ernte an gefangenen Wildtieren in der Region ist lohnenswert."
 viz_extravagance.t2.property.treasury: "Die Schatzkammer dieses Charakters ist so groß, dass sie ein ganzes Gebäude einnimmt – eine befestigte Anlage im Herzen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], in dem seine Münzen sicher sind."
 viz_extravagance.t2.property.defensible_palace: "Dieser Charakter unterhält einen kleinen befestigten Palast in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], der angeblich voller Geheimgänge und versteckter Fluchtwege ist."
 viz_extravagance.t2.charity.schools: "Dieser Charakter finanziert persönlich eine Reihe von Schulen, in denen Kinder unterrichtet werden, die sonst keinerlei Möglichkeit auf eine Ausbildung hätten."
 viz_extravagance.t2.charity.hospitals: "Dieser Charakter finanziert aus eigener Tasche mehrere berühmte Krankenhäuser in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] – Einrichtungen, die die Ärmsten der Gesellschaft versorgen, sich aber ausschließlich auf seine Großzügigkeit verlassen müssen."
 viz_extravagance.t2.charity.poor_funerals: "Dieser Charakter bezahlt für die Beisetzungen derjenigen, die in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] sterben, aber weder Geld noch Familie oder Freunde haben, um in Würde zu Grabe getragen zu werden."
 viz_extravagance.t2.charity.scholars.philosophical: "Dieser Charakter bezahlt aus eigener Tasche eine Reihe wichtiger Philosophen und Institutionen, die sich mit der Erforschung der tiefer greifenden Umstände der Welt beschäftigen."
 viz_extravagance.t2.charity.scholars.legal: "Dieser Charakter bezahlt persönlich einige der herausragendsten Anwälte, Juristen und Rechtsgelehrten des Reichs und trägt so zur klaren Schaffung und Durchsetzung eines gerechten Friedens für alle bei."
 viz_extravagance.t2.charity.civil_service.extra_positions: "Dieser Charakter kommt aus eigenen Mitteln für die Besetzung von Schlüsselpositionen im öffentlichen Dienst aus und vervielfacht so die Macht der Bürokratie, indem er dort Mittel bereitstellt, wo sie am wichtigsten sind."
 viz_extravagance.t2.charity.police: "Dieser Charakter finanziert persönlich einen treuen Stab von Konstablern und Vollstreckern, die in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] umherstreifen und sicherstellen, dass das Gesetz genau so befolgt wird, wie der Wesir es verlangt."
 viz_extravagance.t2.charity.scholars.theological: "Dieser Charakter kommt aus eigener Tasche für einige der berühmtesten Theologen des Reichs auf und steckt im Namen der eigenen Mitgläubigen Geld in die Förderung der guten [ROOT.Char.GetDiarchy.GetDiarch.GetFaith.GetAdjective|l]en Theorie."
 viz_extravagance.t2.charity.scholars.mystical: "Dieser Charakter unterhält aus eigenen Mitteln eine Reihe bekannter Mystiker, Esoteriker und Ekstatiker, die ihr seltsames Wissen an den Höfen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] verbreiten."
 viz_extravagance.t2.charity.circumcision: "Dieser Charakter finanziert jedes Jahr persönlich die Beschneidung und religiöse Erziehung einer bestimmten Anzahl von Waisenjungen aus den Straßen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t2.charity.preachers: "Dieser Charakter kommt aus eigener Tasche für Bettel-[ROOT.Char.GetDiarchy.GetDiarch.GetFaith.PriestNeuterPlural] auf, die das Land durchstreifen, sich um die bedürftigen Gläubigen kümmern und jenen spirituellen Rat geben, die einem niedereren Glauben anhängen."
 viz_extravagance.t3.treasure.mirrors: "Dieser Charakter besitzt Dutzende der klarsten Spiegel, die man für Geld kaufen kann, und bietet damit ein fast schon unansehnliches Maß an eitlem Luxus, von dem selbst unter Adligen nur wenige träumen können."
 viz_extravagance.t3.treasure.parasols: "Dieser Charakter scheint für jeden Tag des Jahres einen Sonnenschirm zu besitzen: manche mit Gold bestickt, manche mit Silber, manche aus Seide, manche aus Damast, manche mit Rubinen besetzt, manche mit Smaragden und so weiter und so fort …"
 viz_extravagance.t3.treasure.silk_bigtop: "Dieser Charakter hat ein Reisezelt, das für eine Gesellschaft von fünfzig oder mehr Personen ausgelegt ist und aus edelster Seide besteht – jede Stoffbahn ist reich bestickt und jede Stange besteht aus Edelmetall oder wurde teuer lackiert."
 viz_extravagance.t3.treasure.fabrics: "Dieser Charakter ist stolz darauf, die luxuriösesten Stoffe der Welt zu besitzen: Seide, Damast, Samt, feine Brokate, kunstvolle Steppdecken und ein schier unendliches Meer an kleinen Variationen und regionalen Spezialitäten."
 viz_extravagance.t3.treasure.exotic_pets: "Dieser Charakter begeistert und verschreckt Gäste mit seiner Sammlung exotischer Haustiere: Löwen, Tiger, seltsam fremdartige Hirsche und weitere wunderliche Kreaturen hausen in seiner persönlichen Menagerie."
 viz_extravagance.t3.treasure.carpets: "Dieser Charakter ist im Besitz eines besonders berühmten Teppichs: hundert Ellen lang und halb so breit, gewebt aus Seide, bestickt mit Goldfäden und gefüttert mit silbernem Samt. Er zeigt religiöse und historische Szenen, die die ganze Weltgeschichte erzählen sollen."
 viz_extravagance.t3.treasure.gold_mattress: "Dieser Charakter hat eine Matratze, die angeblich ausschließlich aus Goldfäden gesponnen wurde und auf der schon einige der berühmtesten Persönlichkeiten der jüngeren Geschichte geruht haben."
 viz_extravagance.t3.treasure.birth_control: "Diese Person verfügt über Tränke, Pillen und weitere exotische Mittelchen, um eine sichere, glückliche und fruchtlose Begattung zu gewährleisten."
 viz_extravagance.t3.treasure.sculpture.articulated: "Der ganze Stolz dieses Charakters ist eine bewegliche Skulptur seiner selbst, deren Pose und Kleidung nach dem Willen des Wesirs endlos verändert werden kann."
 viz_extravagance.t3.treasure.plants: "Dieser Charakter verfügt über eine berühmte Sammlung seltener Pflanze, Moose und Kräuter, die jeweils in einem von fünfhundert Kristalltöpfen aufbewahrt werden."
 viz_extravagance.t3.activities.feasts.surprise: "Dieser Charakter ist dafür bekannt, dass er für charmante Gäste Festmahle mit Überraschungsgeschenken ausrichtet: Ein geistreicher Witz wird mit zehntausend Stück Vieh belohnt, eine prächtige Gewandung mit einem entlegenen Palast und entsprechenden Dienern oder eine faszinierende Unterhaltung mit einem Gewand aus gefärbter Seide."
 viz_extravagance.t3.activities.aid: "Dieser Charakter hält die benachbarten Adligen seiner Ländereien mit kleinen Geschenken bei Laune: hundert verschwenderische Teppiche, dreitausend feine Sättel, zwölf Töpfe Ambra, zehntausend gute Speere und dergleichen mehr."
 viz_extravagance.t3.activities.scholars.debates: "Dieser Charakter lädt Gelehrte jeglicher Couleur aus der ganzen Welt zu Zusammenkünften ein und erfreut sich an den Gesprächen, die die größten Geister der Zeit an einem Tisch führen."
 viz_extravagance.t3.activities.feasts.give_away: "Dieser Charakter richtet gern Festmahle für seine treuen Verbündeten, Anhänger und Kumpane aus – rein zufällig verschenkt er bei solchen Anlässen oft auch gewaltige Summen, und doch scheint er immer noch mehr exorbitante Geschenke übrig zu haben."
 viz_extravagance.t3.activities.land_and_livestock_grants: "Die wimmelnden Viehherden dieses Charakters sind der Stoff, aus dem örtliche Legenden sind. Die Zahl an Tieren, die er als Belohnung für gute Dienste oder für wohltätige Zwecke verschenkt, geht jedes Jahr leicht in die Zehntausende."
 viz_extravagance.t3.activities.feasts.spectacle: "Die Festmahle dieses Charakters sind auf das Spektakuläre ausgerichtet: Wenn es nicht #EMP mindestens#! eine sich verrenkende Schlangenfrau gibt, die eine Stange balanciert, welche von einem herumtollenden Kind gekrönt wird, das mit heißen Kohlen jongliert, was hätte die ganze Sache denn dann überhaupt für einen Sinn?"
 viz_extravagance.t3.activities.feasts.coin_shower: "Dieser Charakter genießt es, den eigenen Reichtum auf seinen Festmahlen im wahrsten Sinne des Wortes zur Schau zu stellen: Er lässt regelmäßig große Schauer von Hunderten oder Tausenden von Münzen auf seine Lieblingsgäste niederprasseln."
 viz_extravagance.t3.activities.gambling.palanquin: "Dieser Charakter behauptet, einen besonderen Sport erfunden und gemeistert zu haben: Sänftenrennen, bei denen Sänftenträger gegen Herausforderer antreten, um ihre Ladung in kürzestmöglicher Zeit in einen bestimmten Teil von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] zu befördern."
 viz_extravagance.t3.activities.orgies: "Dieser Charakter veranstaltet ganz offen Festmahle mit einem Schwerpunkt auf fleischlichen Genüssen, bei denen die Gäste nach Strich und Faden verwöhnt und bedient werden, und zwar auf die eingeölteste Art und Weise."
 viz_extravagance.t3.activities.parades: "Dieser Charakter glaubt, dass Reichtum sinnlos ist, wenn man ihn verbirgt: Er ist fasziniert davon, Paraden zu veranstalten, bei denen er seine exotischen Haustiere, edlen Pferde, gepflegten Diener und teuren Kleidungsstücke zur Schau stellt, in dem er sie regelmäßig durch die Straßen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] führen lässt."
 viz_extravagance.t3.property.pool.cushions: "Dieser Charakter unterhält ein großes Schwimmbecken, das von Kissen gesäumt wird – ein Bad sollte schließlich kein Grund sein, auf Luxus zu verzichten."
 viz_extravagance.t3.property.businesses: "Die Geschäftsinteressen dieses Charakters sind ein verworrener Irrgarten von miteinander verbundenen Handelswegen, Monopolen, Patronaten und Ländereien."
 viz_extravagance.t3.property.palace.huge: "Dieser Charakter unterhält einen Palast, der offiziell nur #EMP etwas#! kleiner ist als der von [ROOT.Char.GetTitleAsNameNoTooltip]. Diejenigen, die ihn persönlich gesehen haben, bezweifeln dies allerdings."
 viz_extravagance.t3.property.bathhouse: "Dieser Charakter unterhält ein ausgeklügeltes privates Badehaus für sich selbst und seine engsten Verbündeten, ein politisches Zentrum für alle schmutzigen und doch blitzsauberen Gaunereien in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]."
 viz_extravagance.t3.property.stables: "Dieser Charakter hat einen schlichtweg kolossalen Stall, in dem Hunderte oder mehr der besten Rösser des Reichs untergebracht sind."
 viz_extravagance.t3.property.pool.gold: "Dieser Charakter besitzt ein Schwimmbecken, dessen Boden er mit einer dicken Schicht aus Goldmünzen ausgekleidet hat – was nützt einem der Reichtum, wenn man nicht darauf dahintreiben kann?"
 viz_extravagance.t3.property.fleet.commercial: "Diesem Charakter gehören Dutzende privater Handelsschiffe, eine wahre Flotte, die über die ganze bekannte Welt verteilt ist."
 viz_extravagance.t3.property.business.stolen: "Dieser Charakter scheint immer wieder in den Besitz kleinerer Unternehmen zu gelangen, die ihre Schulden bei verschiedenen Geldverleihern oder beim Staat selbst nicht begleichen können. Der Drang zur Selbsterhaltung hindert die meisten daran, dies irgendwie zu kommentieren."
 viz_extravagance.t3.property.tycoon: "Diesem Charakter gehört fast ein ganzes Viertel von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], wobei ganze Bezirke seinen privaten Anwesen vorbehalten sind."
 viz_extravagance.t3.property.den_of_vice: "Man munkelt, dieser Charakter sei der Besitzer einer der berüchtigtsten Lasterhöhlen in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip]: ein Etablissement, in dem jedes Gebräu exotischer Substanzen erworben werden kann – mit genügend Silber, versteht sich."
 viz_extravagance.t3.charity.observatories: "Dieser Charakter unterhält eine große Sternwarte, beobachtet den Himmel und zeichnet den Lauf der Gestirne nach."
 viz_extravagance.t3.charity.universities: "Dieser Charakter finanziert mehrere kleine, aber angesehene örtliche Universitäten und fördert so Wissenschaft und Forschung."
 viz_extravagance.t3.charity.libraries: "Die Münzen dieses Charakters fließen oft in die Gründung, den Ausbau und den Erhalt einiger ausgewählter Bibliotheken, die große Werke vervielfältigen, um das Wissen unter den Adligen zu verbreiten."
 viz_extravagance.t3.charity.bathhouses: "Dieser Charakter hat ein großes öffentliches Badehaus in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] gebaut und unterstützt es noch immer, was es bei den einfachen Leuten beliebt macht, die sich solch ausufernden Luxus sonst nicht leisten könnten."
 viz_extravagance.t3.charity.hospitals.equipment: "Dieser Charakter nimmt sich nicht nur die Zeit, die örtlichen Krankenhäuser zu finanzieren, sondern auch dafür zu sorgen, dass sie mit den neuesten medizinischen Salben, chirurgischen Instrumenten und diversen ausgefallenen medizinischen Utensilien ausgestattet sind."
 viz_extravagance.t3.charity.civil_service.expansion: "Dieser Charakter sorgt für die Gehälter einer Vielzahl von Verwaltungsbeamten, wodurch die tägliche Arbeitsbelastung gleichmäßiger verteilt und der Staat entlastet wird."
 viz_extravagance.t3.charity.watermills: "Dieser Charakter sorgt für den Bau gemeinschaftlicher Wassermühlen in verarmten Dörfern und anderen ländlichen Gebieten, was die dortige Lebensqualität erheblich verbessert."
 viz_extravagance.t3.charity.beggar_spies: "Der legendäre Verfolgungswahn dieses Charakters geht angeblich so weit, dass er die Hälfte der Bettler und Landstreicher des Reichs auf seiner Gehaltsliste führt und ihnen im Austausch für ihre Augen und Ohren gelegentlich Essen und Unterkunft bietet."
 viz_extravagance.t3.charity.hajj_water_tanks: "Dieser Charakter zahlt aus eigener Tasche für die Schaffung und Füllung von Wasserreservoirs außerhalb des heiligen Mekka, deren Inhalt dazu beiträgt, durstige Pilger zu versorgen, die den rechtschaffenen Hadsch vollziehen."
 viz_extravagance.t3.charity.holy_warrior_gear: "Dieser Charakter spendet regelmäßig Waffen und Rüstungen für Soldaten, die verschiedenen heiligen Zwecken dienen, sei es, um die Feinde des Glaubens zu bekämpfen oder um dessen Anhänger zu schützen."
 viz_extravagance.t4.treasure.cushions: "Dieser Charakter besitzt Tausende und Abertausende von Kissen, eine schier unendliche Lawine aus Taft und Seide, sodass jeder Raum zum Sitzen (oder sogar zu einem Nickerchen) einlädt."
 viz_extravagance.t4.treasure.martial_gear: "Dieser Charakter mag kriegerische Spielzeuge ein wenig zu sehr. Berichten zufolge hat er mehr dekorative Waffen und Rüstungen als [ROOT.Char.GetTitleAsNameNoTooltip] #EMP tatsächliche#! Einheiten hat."
 viz_extravagance.t4.treasure.cosmetics: "Dieser Charakter hat einen Kaiserschatz an Parfum angesammelt: kostbares Ambra im Krug, parfümiertes Rosenwasser, duftendes Ghaliya, Moschuspulver, Aloeholzextrakt und natürlich Safran, alles in Mengen und Behältnissen, mit denen man für ganze Armeen bezahlen könnte."
 viz_extravagance.t4.treasure.office: "Dieser Charakter hat als Wesir eine Amtsstube, die aus teurem Stein und Glas mit Metalleinlagen gefertigt und eingerichtet wurde, um so eine ruhige, feste Autorität auszustrahlen."
 viz_extravagance.t4.treasure.crockery.historic: "Dieser Charakter unterhält einen vollständigen Satz an Festtagsgeschirr und -besteck, von dem angeblich jedes Stück einst dem Herrscher eines exotischen fremden Landstrichs oder eines alten untergegangenen Reichs gehörte."
 viz_extravagance.t4.treasure.precious_orchard: "Dieser Charakter ist berühmt für seinen kostbaren Obstgarten: ein Hof voller künstlicher Bäume, die aus Gold und Silber geschmiedet wurden und verschiedene, aus Edelsteinen geschnittene Früchte tragen."
 viz_extravagance.t4.treasure.fleet.personal: "Dieser Charakter ist berühmt für die markante Form seiner persönlichen Vergnügungsbarke sowie für die zahlreichen kleineren Schiffe und Boote, die in seinem Namen die Wasserstraßen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] befahren."
 viz_extravagance.t4.treasure.massive_sword: "Dieser Charakter ist berühmt-berüchtigt für sein Zierschwert, das an der breiten Wand seines Lieblingssaals hängt und so lang wie drei Soldaten ist, die aneinandergereiht daliegen."
 viz_extravagance.t4.treasure.mystic_ingredients: "Dieser Charakter soll gerüchteweise eine Sammlung exotischer alchemistischer Zutaten haben: seltsame fremdartige Pflanzen, sonderbare Erze aus den Tiefen der Erde und Pulver aus dem Fleisch und den Knochen legendärer Kreaturen."
 viz_extravagance.t4.treasure.sensible_investments_for_smart_adults: "Dieser Charakter besitzt ein einziges illuminiertes Manuskript mit dem unansehnlichen Bild eines Affen – angeblich ist das Werk außerordentlich teuer, doch woraus sich dieser Wert ergeben soll, ist unklar."
 viz_extravagance.t4.activities.feasts.pool.rose: "Dieser Charakter ist bekannt dafür, Feiern zu veranstalten, bei denen sein Schwimmbecken mit Blumen im Wert von Zehntausenden von Münzen übersät ist – ein duftendes Schauspiel, das die meisten Gäste in ihrem Leben noch nie gesehen haben."
 viz_extravagance.t4.activities.give_aways: "Dieser Charakter macht aus einer Laune heraus Geschenke, die ein Vermögen in den Schatten stellen, das selbst die glücklichsten Kaufleute im Lauf ihres Lebens zu verdienen hoffen."
 viz_extravagance.t4.activities.feasts.big: "Was dieser Charakter als „ein privates Abendessen unter Freunden“ bezeichnet, würden die meisten anderen „ein ausgedehntes Festmahl, das einmal im Jahrzehnt stattfindet“ nennen."
 viz_extravagance.t4.activities.menagerie: "In der Menagerie dieses Charakters finden sich zischende Reptilien, leuchtend bunte Vögel, riesige Säugetiere und scheinbar alles, was die Welt an Bestien zu bieten hat."
 viz_extravagance.t4.activities.aid: "Die Großzügigkeit dieses Charakters sorgt für so beachtliche Hilfspakete, dass einige angebliche „Adlige“ in der Nähe ganz auf seine Almosen angewiesen zu sein scheinen, um den Schein zu wahren."
 viz_extravagance.t4.activities.host: "Für diesen Charakter ist die Beherbergung fremdländischer Diplomaten von größter Bedeutung – gleich nach dem Ausgeben von Unmengen an Münzen, um zu zeigen, wie verarmt die Reiche seiner Gäste im Vergleich sind."
 viz_extravagance.t4.activities.gambling.xtra_xtreme: "Dieser Charakter spielt um Münzen, Tiere, Land, Leben und alles, was ihm sonst noch einfällt – und das in derart großen Mengen, dass sein Reichtum #EMP wahrlich#! kaum zu fassen ist."
 viz_extravagance.t4.activities.masquerade: "Dieser Charakter veranstaltet regelmäßig Kostümfeste, bei denen er seinen Gästen Themen aus der Geschichte oder aus Mythen vorgibt und von jedem erwartet, dass er ein Monatseinkommen oder mehr für seine Gewandung ausgibt."
 viz_extravagance.t4.activities.plants.ever_changing: "Dieser Charakter glaubt, dass Abwechslung dem Leben erst die richtige Würze gibt, und pflegt daher einen Garten mit ständig wechselnden Pflanzen, Düften und exotischen Kräutern, die alle zu verschiedenen Jahreszeiten und unter verschiedenen Bedingungen blühen und Früchte tragen."
 viz_extravagance.t4.activities.feasts.cannibal: "Alle sind sich einig, dass dieser Charakter einige der erlesensten Festmahle veranstaltet, die das Reich je gesehen hat. Vor allem das Fleisch wird gelobt – auch wenn man sich nicht einig ist, um welches Fleisch es sich wohl genau handelt."
 viz_extravagance.t4.property.palace.pool: "Dieser Charakter unterhält einen getrennten Palast, in dem ein riesiges Schwimmbecken untergebracht ist. Er wohnt anderswo und kann so seine Privatgemächer und Amtsstuben von dem Ort trennen, an dem er Gäste bewirtet."
 viz_extravagance.t4.property.palace.spa: "Diesem Charakter gehört ein geräumiges Anwesen auf dem Land außerhalb von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], ein Ort der Ruhe abseits des Trubels der Stadt, der durch viele Hektar umliegender Ländereien abgeschirmt wird."
 viz_extravagance.t4.property.army: "Dieser Charakter unterhält eine eigene Armee von Schlägern und Halsabschneidern, die bereit sind, seinen Willen überall in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] durchzusetzen."
 viz_extravagance.t4.property.livestock: "Die riesigen Viehherden dieses Charakters, sowohl Pferde als auch Lasttiere, weiden in weiten Teilen des Reichs."
 viz_extravagance.t4.property.palace.guest: "Dieser Charakter unterhält einen eigenen Palast, der nur für Gäste gedacht ist – ein Zeichen von Reichtum und Macht, das kaum jemand übersehen kann."
 viz_extravagance.t4.property.spire: "Dieser Charakter führt einen Großteil seiner Wesirgeschäfte von einem unheilverheißenden Turm aus, der hoch über den meisten Gebäuden in [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] thront. Angeblich kann man von seinen vielen Fenstern aus jede Gasse und jede Straßenecke sehen."
 viz_extravagance.t4.property.palace.monthly: "Dieser Charakter unterhält ein Dutzend oder mehr Paläste in ganz [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip], zwischen denen er monatlich wechselt."
 viz_extravagance.t4.property.bordello: "Dieser Charakter betreibt ein nicht öffentliches Bordell, in dem seine Lieblingskünstler ihm regelmäßig die lasterhaftesten Vergnügungen bereiten."
 viz_extravagance.t4.property.gaol: "Diesem Charakter gehört ein eigenes Schuldnergefängnis – wenn ärmere Leute ihre Schulden beim Wesir nicht begleichen können, folgt die Strafe rasch auf dem Fuß. Bis ihre Familie hoffentlich das Geld auftreibt."
 viz_extravagance.t4.property.palace.torture: "‚Die Hölle von [ROOT.Char.GetDiarchy.GetDiarch.GetFirstNameNoTooltip]‘, so nennt man ihn – ein angeblicher Garten voller sonderbarer Freuden und grausamer Gerätschaften, mit denen dieser Charakter seine Feinde und Rivalen peinigt."
 viz_extravagance.t4.charity.waystations: "Dieser Charakter zahlt für Wegstationen und Karawansereien im ganzen Reich, wobei er den Schwerpunkt auf die Versorgung kleinerer Gruppen und einsamer Reisender legt."
 viz_extravagance.t4.charity.bridges: "Dieser Charakter ist bekannt für das Geld, das er für den Bau und die Instandhaltung neuer Brücken im ganzen Reich ausgibt – ein Zeichen höchster Ehrerbietung für jeden Beamten."
 viz_extravagance.t4.charity.dole: "Dieser Charakter unterstützt eine private Essensausgabe an die bedürftigsten Bürger von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] und stellt so sicher, dass niemand wirklich hungern muss, sofern er nur einige wenige Münzen übrig hat."
 viz_extravagance.t4.charity.housing: "Dieser Charakter finanziert den Bau kleiner Mietshäuser in leer stehenden Teilen von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] oder vor dessen Mauern. Hier werden jene untergebracht, die am dringendsten eine Unterkunft benötigen."
 viz_extravagance.t4.charity.gardens: "Dieser Charakter zahlt für den Unterhalt eines großen öffentlichen Gartens – eine kleine Bastion des Friedens und der Ruhe in einer Welt, die manchmal allzu grausam erscheinen mag."
 viz_extravagance.t4.charity.civil_service.fire: "Dieser Charakter kommt aus eigener Tasche für den Unterhalt einer Feuerwehr für [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] auf – was in der restlichen Welt nahezu unbekannt ist."
 viz_extravagance.t4.charity.aqueducts: "Dieser Charakter ist verantwortlich für den Bau und den Unterhalt mehrerer kurzer Aquädukte, die frisches Wasser nach [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] befördern, was ihm die Dankbarkeit vieler der Ärmsten der Gesellschaft einbringt."
 viz_extravagance.t4.charity.festivals: "Dieser Charakter zahlt für ein jährliches großes Fest, zu dem sämtliche Einwohner von [ROOT.Char.GetCapitalLocation.GetTitle.GetNameNoTierNoTooltip] eingeladen sind: ein Ereignis, auf das sich die Stadt das ganze Jahr über freut."
 viz_extravagance.t4.charity.pilgrimage: "Dieser Charakter leitet eine wohltätige Stiftung, die Menschen mit einem Handgeld, geeigneter Ausrüstung und dem nötigen Wissen ausstattet, um eine erfolgreiche Pilgerreise anzutreten."
 viz_extravagance.t4.charity.loans: "Dieser Charakter leitet eine wohltätige Stiftung, die sich um die Begleichung von Darlehen und Schulden der Ärmsten des Reichs kümmert, ob diese Belastungen nun rechtmäßig enstanden oder nicht."
 diarch_loyalty_score.regency.tradition_ep3_palace_politics: "[culture|E] hat [GetCultureTradition('tradition_ep3_palace_politics').GetName]"
