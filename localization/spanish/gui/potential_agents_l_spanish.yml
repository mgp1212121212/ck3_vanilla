l_spanish:
 POTENTIAL_AGENTS: "Invitar a agentes"
 POTENTIAL_AGENT_HEADER: "[PotentialAgentWindow.GetAgentSlotType.GetNameNoTooltip] potencial"
 AGENT_SCHEME_PHASE_DURATION: "[scheme_speed|E]"
 CHARACTER_SORT_ACCEPTANCE: "Aceptación"
 CHARACTER_SORT_CONTRIBUTION: "Contribución"
 CHARACTER_SORT_RELEVANCE: "Relevancia"
 CHARACTER_SORT_AGE: "Edad"
 CHARACTER_SORT_EDUCATION_AVAILABLE: "Disponibles para educación"
 CHARACTER_SORT_TITLES: "Grado"
 CHARACTER_SORT_VASSAL_SPEED: "Velocidad"
 CHARACTER_SORT_VASSAL_POWER: "Poder"
 AGENT_ALREADY_CONSIDERING: "#Z Considerando nuestra oferta#!"
 AGENT_WILL_ACCEPT: "#P Se unirá ($ACCEPTANCE|=0$)#!"
 AGENT_MAY_ACCEPT: "#Z Se le puede convencer ($ACCEPTANCE|=0$)#!"
 AGENT_WONT_ACCEPT: "#N Se niega ($ACCEPTANCE|=0$)#!"
 AGENT_WONT_ACCEPT_DESC: "#T No se unirá a la conjura #!"
 AGENT_WILL_ACCEPT_DESC: "#T Se unirá a la conjura #!"
 AGENT_MAY_ACCEPT_DESC: "#T Se le puede persuadir para unirse empleando regalos y [hooks|lE] #!"
 SCHEME_PROGRESS_EQUAL: "Velocidad y resistencia son iguales, el progreso no cambiará."
 SCHEME_PROGRESS_INCREASE: "Hay una probabilidad del #P $CHANCE$ %#! de ganar $PROGRESS|0P$ progreso al mes."
 SCHEME_PROGRESS_DECREASE: "Hay una probabilidad del #N $CHANCE$%#! de perder $PROGRESS|0N$ progreso al mes. El progreso no puede bajar de #V 0#!."
 SCHEME_WITH_GIFT: "Consigo [gold|lE] [gold_i]: $VALUE|=+0$"
 SCHEME_WITH_HOOK: "Empleo un [hook|l]: $VALUE|=+0$"
 SCHEME_AGAINST_RIVAL: "Intrigas contra mi [rival|lE]: $VALUE|=+0$"
 SCHEME_AGAINST_NEMESIS: "Intrigas contra mi [nemesis|lE]: $VALUE|=+0$"
 SCHEME_AGAINST_FRIEND: "Intrigas contra mi [friend|lE]: $VALUE|=+0$"
 SCHEME_AGAINST_BEST_FRIEND: "Intrigas contra mi [best_friend|lE]: $VALUE|=+0$"
 SCHEME_FOR_LOVER: "Intrigando por mi [lover|lE]: $VALUE|=+0$"
 SCHEME_FOR_FRIEND: "Intrigando por mi [friend|lE]: $VALUE|=+0$"
 SCHEME_FOR_BEST_FRIEND: "Intrigando por mi [best_friend|lE]: $VALUE|=+0$"
 SCHEME_AGAINST_SOULMATE: "Intrigas contra mi [soulmate|lE]: $VALUE|=+0$"
 SCHEME_FOR_SOULMATE: "Intrigando por mi [soulmate|lE]: $VALUE|=+0$"
 SCHEME_AGAINST_WET_NURSE: "Intrigas contra mi [GetCourtPositionType('wet_nurse_court_position').GetName|l]: $VALUE|=+0$"
 SCHEME_AGAINST_SPOUSE: "Leal a su cónyuge: $VALUE|=+0$"
 SCHEME_NURSED_CHILD: "Leal al niño amamantado: $VALUE|=+0$"
 SCHEME_IS_SACRED: "Mi fe considera las conjuras sagradas: $VALUE|=+0=$"
 HAS_LOYAL_TRAIT: "[trait|E] [GetTrait('loyal').GetName( GetNullCharacter )|l]: $VALUE|=+0=$"
 HAS_DISLOYAL_TRAIT: "[trait|E] [GetTrait('disloyal').GetName( GetNullCharacter )|l]: $VALUE|=+0=$"
 HAS_COMPASSIONATE_TRAIT: "[trait|E] [GetTrait('compassionate').GetName( GetNullCharacter )|l]: $VALUE|=+0=$"
 BEFRIEND_MUTUAL_FRIENDS: "«¡Quiero que mis amigos sean amigos!»: $VALUE|=+0$"
 BEFRIEND_WOULD_MAKE_GOOD_FRIEND: "Le importa el objetivo: $VALUE|=+0$"
 BEFRIEND_WOULD_MAKE_BAD_FRIEND: "Le importa el objetivo: $VALUE|=+0$"
 BEFRIEND_WANTS_PEOPLE_TO_GET_ALONG: "Quiere que la gente se lleve bien: $VALUE|=+0$"
 SEDUCE_IS_SPOUSE: "«¡Nuestro matrimonio es sagrado!»: $VALUE|=+0$"
 SEDUCE_IS_LOVER: "¡No quiere que tenga más amantes!: $VALUE|=+0$"
 NO_POTENTIAL_MEMBERS: "#weak Sin más agentes que invitar#!"
 SCHEME_MURDER_COUPLE: "Siempre he adorado tu sed de sangre…: $VALUE|=+0$"
 SCHEME_MURDER_DISINTERESTED: "No participaré en esto: $VALUE|=+0$"
 SCHEME_AGENT_STRIFE_LIKELIHOOD: "[target.GetShortUINameNoTooltip] ha causado [strife|lE] excesivo: $VALUE|=+0$"
 ASSIGNED_AGENT_CONTRIBUTION_TOOLTIP: "#WEAK (La contribución máxima no puede superar +[EmptyScope.ScriptValue('agent_scheme_contributor_max')])#!\nLa contribución total de este [agent|lE] [agent_i] es"
 POTENTIAL_AGENT_CONTRIBUTION_TOOLTIP: "#WEAK (La contribución máxima no puede superar +[EmptyScope.ScriptValue('agent_scheme_contributor_max')])#!\nLa contribución total de este [agent|lE] [agent_i] sería"
 AGENT_SPYMASTER: "Jefe de espías: #P $VALUE|0$ %#!"
 SCHEME_PHASE_DURATION_TRIGGER: "[scheme_speed|E]: $VALUE|=+0$"
 RESPECTED_HOST: "[target.GetShortUINameNoTooltip] es [Select_CString(target.IsFemale, 'una anfitriona apreciada', 'un anfitrión apreciado' )]: $VALUE|=+0$"
 VARANGIAN_LOYALTY: "[target.GetShortUINameNoTooltip] tiene la lealtad jurada de los varegos: $VALUE|=+0$"
 IS_POLITICKER: "Mi [accolade|lE] alienta la astucia política amoral: $VALUE|=+0$"
 SCHEME_TAUGHT_TO_SCHEME: "Me enseñaste a intrigar por ti: $VALUE|=+0$"
 IS_PART_OF_STRUGGLE: "Parte de [target.GetShortUINameNoTooltip] de la [struggle|lE]: $VALUE|=+0$"
 INTRIGUE_EDUCATION_5_BONUS: "[GetTrait('education_intrigue_5').GetName( GetNullCharacter )]: $VALUE|=+0$"
 SCHEME_DUTIOUS_FAMILY: "Eres inflexible en el deber familiar: $VALUE|=+0$"
 SCHEME_AGENT_SPOUSE_STRIFE_LIKELIHOOD: "El [spouse|lE] de [target.GetShortUINameNoTooltip] ha causado [strife|lE] excesivo: $VALUE|=+0$"
 ai_opinion.reason.trait_is_sinful.lustful: "Ser [GetTrait('lustful').GetName( GetNullCharacter )|l] es un [sin|lE]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_virtuous.lustful: "Ser [GetTrait('lustful').GetName( GetNullCharacter )|l] es una [virtue|lE]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_sinful.chaste: "Ser [GetTrait('chaste').GetName( GetNullCharacter )|l] es un [sin|lE]: $VALUE|=+0$"
 ai_opinion.reason.trait_is_virtuous.chaste: "Ser [GetTrait('chaste').GetName( GetNullCharacter )|l] es una [virtue|lE]: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_shunned.owner: "Esto sería una vergüenza para tu sexo: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_criminal.owner: "Esto sería pecaminoso para tu sexo: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_shunned.target: "Esto sería una vergüenza para el sexo de [target.GetFirstNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.faith.adultery_criminal.target: "Esto sería pecaminoso para el sexo de [target.GetFirstNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.ai_values.energy.flavour: "Ética de trabajo de [personality|lE]: $VALUE|=+0$"
 ai_opinion.reason.ai_values.energy: "[personality|E] con $player_facing_ai_energy$: $VALUE|=+0$"
 ai_opinion.reason.ai_values.honour.compelled_to_serve: "[personality|E] con $player_facing_ai_honor$ debe servir: $VALUE|=+0$"
 ai_opinion.reason.ai_values.boldness.dislikes_you: "[personality|E] con $player_facing_ai_boldness$ y le desagradas: $VALUE|=+0$"
 ai_opinion.reason.ai_values.vengefulness.dislikes_you: "[personality|E] con $player_facing_ai_vengefulness$ y le desagradas: $VALUE|=+0$"
 ai_opinion.reason.ai_values.dishonour: "[personality|E] carece de $player_facing_ai_honor$: $VALUE|=+0$"
 ai_opinion.reason.ai_values.vengefulness.dislikes_target: "[personality|E] con $player_facing_ai_vengefulness$ y le desagrada [target.GetFirstNameNoTooltip]: $VALUE|=+0$"
 ai_opinion.reason.courtier.followers_must_work: "Ordenar trabajar al [follower|lE]: $VALUE|=+0$"
 ai_opinion.reason.relation.nemesis: "Eres mi [nemesis|lE]: $VALUE|=+0$"
 ai_opinion.reason.relation.rival: "Eres mi [rival|lE]: $VALUE|=+0$"
 ai_opinion.reason.court_position.stooge: "Soy vuestr[GetPlayer.Custom('ES_OA')] [GetCourtPositionType('stooge_camp_officer').GetNameNoTooltip|l]: $VALUE|=+0$"
 ai_opinion.reason.laamp_nemesis: "#XB «¡Hacedlo vos mismo, canalla!»#!: $VALUE|=+0$"
 ai_opinion.reason.laamp_rival: "#N «No os serviré»:#! $VALUE|=+0$"
 ai_opinion.reason.laamp_stooge: "«Ni pensarlo»: $VALUE|=+0$"
 invite_agent_to_scheme_interaction.tt.no_stooges: "[recipient.GetShortUIName] no es tu [GetCourtPositionType('stooge_camp_officer').GetNameNoTooltip|l]"
 ai_agent_join_political_base: "Renuencia política: $VALUE|=+0$"
 ai_agent_join_political_relative_house_power: "[powerful_family_rating|lE] relativa: $VALUE|=+0$"
 scheme_agent_aptitude.skill.prowess: "[prowess|E]"
 scheme_agent_aptitude.skill.intrigue: "[intrigue|E]"
 scheme_agent_aptitude.skill.martial: "[martial|E]"
 scheme_agent_aptitude.skill.diplomacy: "[diplomacy|E]"
 scheme_agent_aptitude.skill.learning: "[learning|E]"
 scheme_agent_aptitude.skill.stewardship: "[stewardship|E]"
 scheme_agent_aptitude.trait.vengeful.target_is_rival: "[GetTrait('vengeful').GetName( GetNullCharacter )] contra [rival|lE]"
 scheme_agent_aptitude.trait.sadistic: "[GetTrait('sadistic').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.callous: "[GetTrait('callous').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.patient: "[GetTrait('patient').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.brave: "[GetTrait('brave').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.deceitful: "[GetTrait('deceitful').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.arbitrary: "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.just: "[GetTrait('just').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.honest: "[GetTrait('honest').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.craven: "[GetTrait('craven').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.impatient: "[GetTrait('impatient').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.compassionate: "[GetTrait('compassionate').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.forgiving: "[GetTrait('forgiving').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.forgiving.target_is_rival: "[GetTrait('forgiving').GetName( GetNullCharacter )] contra [rival|lE]"
 scheme_agent_aptitude.trait.diligent: "[GetTrait('diligent').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.paranoid: "[GetTrait('paranoid').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.trusting: "[GetTrait('trusting').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.lazy: "[GetTrait('lazy').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.gregarious: "[GetTrait('gregarious').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.shy: "[GetTrait('shy').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.calm: "[GetTrait('calm').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.wrathful: "[GetTrait('wrathful').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.loyal: "[GetTrait('loyal').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.confider: "[GetTrait('confider').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.humble: "[GetTrait('humble').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.content: "[GetTrait('content').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.ambitious: "[GetTrait('ambitious').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.arrogant: "[GetTrait('arrogant').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.contrite: "[GetTrait('contrite').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.disloyal: "[GetTrait('disloyal').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.lustful: "[GetTrait('lustful').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.chaste: "[GetTrait('chaste').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.fickle: "[GetTrait('fickle').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.stubborn: "[GetTrait('stubborn').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.eccentric: "[GetTrait('eccentric').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.temperate: "[GetTrait('temperate').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.gluttonous: "[GetTrait('gluttonous').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.zealous: "[GetTrait('zealous').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.cynical: "[GetTrait('cynical').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.greedy: "[GetTrait('greedy').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.generous: "[GetTrait('generous').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.herbalist: "[GetTrait('lifestyle_herbalist').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.mystic: "[GetTrait('lifestyle_mystic').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physician: "[GetTrait('lifestyle_physician').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.witch: "[GetTrait('witch').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.disloyal.depose_scheme: "[GetTrait('disloyal').GetName( GetNullCharacter )] en una [scheme|lE] de [GetScheme('depose').GetTypeName|l]"
 scheme_agent_aptitude.loyal.depose_scheme: "[GetTrait('loyal').GetName( GetNullCharacter )] en una [scheme|lE] de [GetScheme('depose').GetTypeName|l]"
 scheme_agent_aptitude.trait.diplomat: "[GetTrait('diplomat').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.family_first: "[GetTrait('family_first').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.august: "[GetTrait('august').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.strategist: "[GetTrait('strategist').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.overseer: "[GetTrait('overseer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.gallant: "[GetTrait('gallant').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.architect: "[GetTrait('architect').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.administrator: "[GetTrait('administrator').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.avaricious: "[GetTrait('avaricious').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.schemer: "[GetTrait('schemer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.seducer: "[GetTrait('seducer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.torturer: "[GetTrait('torturer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.whole_of_body: "[GetTrait('whole_of_body').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.scholar: "[GetTrait('scholar').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.theologian: "[GetTrait('theologian').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_bad_1: "[GetTrait('physique_bad_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_bad_2: "[GetTrait('physique_bad_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_bad_3: "[GetTrait('physique_bad_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_good_1: "[GetTrait('physique_good_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_good_2: "[GetTrait('physique_good_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.physique_good_3: "[GetTrait('physique_good_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_bad_1: "[GetTrait('intellect_bad_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_bad_2: "[GetTrait('intellect_bad_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_bad_3: "[GetTrait('intellect_bad_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_good_1: "[GetTrait('intellect_good_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_good_2: "[GetTrait('intellect_good_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.intellect_good_3: "[GetTrait('intellect_good_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_bad_1: "[GetTrait('beauty_bad_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_bad_2: "[GetTrait('beauty_bad_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_bad_3: "[GetTrait('beauty_bad_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_good_1: "[GetTrait('beauty_good_1').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_good_2: "[GetTrait('beauty_good_2').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.beauty_good_3: "[GetTrait('beauty_good_3').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.weak: "[GetTrait('weak').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.drunkard: "[GetTrait('drunkard').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.athletic: "[GetTrait('athletic').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.blind: "[GetTrait('blind').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.strong: "[GetTrait('strong').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.shrewd: "[GetTrait('shrewd').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.berserker: "[GetTrait('berserker').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.shieldmaiden: "[GetTrait('shieldmaiden').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.varangian: "[GetTrait('varangian').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.logistician: "[GetTrait('logistician').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.military_engineer: "[GetTrait('military_engineer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.organizer: "[GetTrait('organizer').GetName( GetNullCharacter )]"
 scheme_agent_aptitude.trait.forder: "[GetTrait('forder').GetName( GetNullCharacter )]"
 #################################################
 #Debug Agents
 agent_hitman: "Sicario"
 agent_hitman_desc: "Un misterioso malnacido calvo que aumenta la probabilidad de éxito de tu intento de asesinato."
 agent_vampire: "Vampiro"
 agent_vampire_desc: "Un agente conocido por su dedicación al secretismo."
 agent_werewolf: "Hombre lobo"
 agent_werewolf_desc: "Un agente conocido por su rapidez en perder los estribos."
 agent_mage: "Mago"
 agent_mage_desc: "Un agente conocido por saltarse los limites."
 agent_wraith: "Espectro"
 agent_wraith_desc: "Un agente conocido por ser el mejor, absoluta y categóricamente."
 agent_changeling: "Cambiaformas"
 agent_changeling_desc: "Un agente conocido por su dinamismo."
 #################################################
 #Max Success Chance Agents
 agent_assassin: "Asesino"
 agent_assassin_i: "[success_chance_max_i]"
 agent_assassin_desc: "#WEAK Daga, veneno u horquilla de campesino; mientras no respire al alba, me da lo mismo.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('sadistic').GetName( GetNullCharacter )|l] y [GetTrait('patient').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('compassionate').GetName( GetNullCharacter )|l] e [GetTrait('impatient').GetName( GetNullCharacter )|l]"
 agent_thug: "Matón"
 agent_thug_i: "[success_chance_max_i]"
 agent_thug_desc: "#WEAK Estacazo en el cráneo y preparad el barril. Esto será rápido, pero no tiene por qué ser ruidoso.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('wrathful').GetName( GetNullCharacter )|l] e [GetTrait('callous').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('calm').GetName( GetNullCharacter )|l] y [GetTrait('compassionate').GetName( GetNullCharacter )|l]"
 agent_comrade_in_arms: "Camarada"
 agent_comrade_in_arms_i: "[success_chance_max_i]"
 agent_comrade_in_arms_desc: "#WEAK Al cabo de unos minutos, «recordaré» haberme olvidado el relicario y me marcharé para dejar que… habléis en privado.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('deceitful').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('honest').GetName( GetNullCharacter )|l]"
 agent_musician: "Músico"
 agent_musician_i: "[success_chance_max_i]"
 agent_musician_desc: "#WEAK ¿Existe la vida sin música? No lo creo, pero, en todo caso, jamás carezco de música.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('eccentric').GetName( GetNullCharacter )|l] y [GetTrait('stubborn').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('fickle').GetName( GetNullCharacter )|l] e [GetTrait('impatient').GetName( GetNullCharacter )|l]"
 agent_tumbler: "Acróbata"
 agent_tumbler_i: "[success_chance_max_i]"
 agent_tumbler_desc: "#WEAK ¡Bailar, brincar, contraerse y retozar! Ventana o muralla, caigo como un gato y salto como un gorrión.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('brave').GetName( GetNullCharacter )|l] y [GetTrait('temperate').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('craven').GetName( GetNullCharacter )|l] y [GetTrait('gluttonous').GetName( GetNullCharacter )|l]"
 agent_poet: "Poeta"
 agent_poet_i: "[success_chance_max_i]"
 agent_poet_desc: "#WEAK Cualquier noble de tres al cuarto con letras puede dominar las palabras, pero hace falta un talento auténtico y rotundo para dominar el verso.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i], [intrigue|lE] [intrigue_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]"
 agent_shill: "Compinche"
 agent_shill_i: "[success_chance_max_i]"
 agent_shill_desc: "#WEAK Una voz amistosa en un auténtico desconocido puede llegar muy lejos entre una multitud y, la verdad, ¿quién puede afirmar que conoce a nadie?#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('arbitrary').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('just').GetName( GetNullCharacter )|l]"
 agent_diplomat: "Diplomático"
 agent_diplomat_i: "[success_chance_max_i]"
 agent_diplomat_desc: "#WEAK Algunas situaciones requieren un toque delicado, y no hay nada más sutil que las palabras susurradas en privado.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('gregarious').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('shy').GetName( GetNullCharacter )|l]"
 agent_scribe: "Escribano"
 agent_scribe_i: "[success_chance_max_i]"
 agent_scribe_desc: "#WEAK Siempre he dicho que los mejores servidores tienen confianza en su letra, pero humildad en sus instrucciones.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('humble').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('arrogant').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_wolf_hunter: "Cazador de lobos"
 agent_wolf_hunter_i: "[success_chance_max_i]"
 agent_wolf_hunter_desc: "#WEAK El romance sin peligro no tiene pasión, y ¿qué mejor símbolo de peligro que una piel de lobo?#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i] y [martial|lE] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('brave').GetName( GetNullCharacter )|l] y [GetTrait('compassionate').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('craven').GetName( GetNullCharacter )|l] y [GetTrait('sadistic').GetName( GetNullCharacter )|l]"
 agent_thief: "Ladrón"
 agent_thief_i: "[success_chance_max_i]"
 agent_thief_desc: "#WEAK La violencia, según dicen, es señal de un aficionado.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [prowess|lE] [prowess_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('patient').GetName( GetNullCharacter )|l] y [GetTrait('deceitful').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('impatient').GetName( GetNullCharacter )|l] y [GetTrait('honest').GetName( GetNullCharacter )|l]"
 agent_tutor: "Tutor"
 agent_tutor_i: "[success_chance_max_i]"
 agent_tutor_desc: "#WEAK Un buen maestro se adapta tanto al estudiante como a la materia.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('diligent').GetName( GetNullCharacter )|l] y [GetTrait('humble').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('sadistic').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_poisoner: "Envenenador"
 agent_poisoner_i: "[success_chance_max_i]"
 agent_poisoner_desc: "#WEAK Hasta el hombre más fuerte está a un simple trago de la mezcla adecuada de hierbas de acabar en una tumba prematura.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ #P Se beneficia#! de [traits|lE] como [GetTrait('lifestyle_herbalist').GetName( GetNullCharacter )|l] e [GetTrait('callous').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('compassionate').GetName( GetNullCharacter )|l]"
 agent_eunuch: "Eunuco"
 agent_eunuch_i: "[success_chance_max_i]"
 agent_eunuch_desc: "#WEAK Silencioso como el desplazamiento de la luna, se mueve por los salones marmóreos y es guardián de secretos en una tierra donde las palabras son oro. A la sombra de emperadores, susurra, dando forma al imperio con nada más que el más suave de los murmullos.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('patient').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('compassionate').GetName( GetNullCharacter )|l] y [GetTrait('honest').GetName( GetNullCharacter )|l]"
 agent_muscle: "Músculo"
 agent_muscle_i: "[success_chance_max_i]"
 agent_muscle_desc: "#WEAK Hay veces en que uno necesita más fuerza que maña.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('strong').GetName( GetNullCharacter )|l] y [GetTrait('athletic').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('weak').GetName( GetNullCharacter )|l] y [GetTrait('craven').GetName( GetNullCharacter )|l]"
 agent_physic: "Galeno"
 agent_physic_i: "[success_chance_max_i]"
 agent_physic_desc: "#WEAK La experiencia en la anatomía humana se da por supuesta, pero hace falta estómago para aplicarla en la práctica.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_physician').GetName( GetNullCharacter )|l] y [GetTrait('whole_of_body').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('impatient').GetName( GetNullCharacter )|l] y [GetTrait('wrathful').GetName( GetNullCharacter )|l]"
 agent_smith: "Herrero"
 agent_smith_i: "[success_chance_max_i]"
 agent_smith_desc: "#WEAK No todo el arte se pinta; alguno se #EMP labra.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [stewardship|lE] [stewardship_i] y [prowess|lE] [prowess_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('ambitious').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('lazy').GetName( GetNullCharacter )|l] y [GetTrait('fickle').GetName( GetNullCharacter )|l]"
 agent_ambusher: "Emboscador"
 agent_ambusher_i: "[success_chance_max_i]"
 agent_ambusher_desc: "#WEAK Golpea primero, golpea fuerte, golpea por sorpresa y, si todo va bien, no tendrás que golpear una segunda vez.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [martial|lE] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )|l] y [GetTrait('schemer').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('compassionate').GetName( GetNullCharacter )|l] y [GetTrait('just').GetName( GetNullCharacter )|l]"
 agent_bodyguard: "Guardaespaldas"
 agent_bodyguard_i: "[success_chance_max_i]"
 agent_bodyguard_desc: "#WEAK Una buena espada al alcance del brazo es mucho más efectiva si ya está en la mano.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [prowess|lE] [prowess_i] y [martial|lE] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('strong').GetName( GetNullCharacter )|l] y [GetTrait('physique_good_3').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('craven').GetName( GetNullCharacter )|l] y [GetTrait('weak').GetName( GetNullCharacter )|l]"
 agent_scout: "Explorador"
 agent_scout_i: "[success_chance_max_i]"
 agent_scout_desc: "#WEAK Si no sabes qué tienes por delante, es difícil que puedas reaccionar a tiempo.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [martial|lE] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_traveler').GetName( GetNullCharacter )|l] y [GetTrait('forder').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('craven').GetName( GetNullCharacter )|l] y [GetTrait('fickle').GetName( GetNullCharacter )|l]"
 agent_outrider: "Vanguardia"
 agent_outrider_i: "[success_chance_max_i]"
 agent_outrider_desc: "#WEAK La movilidad es clave para muchas cosas; una persona en el lugar adecuado en el momento adecuado puede mover montañas, y un buen caballo mueve a esa persona.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [martial|lE] [martial_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )|l] y [GetTrait('lifestyle_traveler').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('craven').GetName( GetNullCharacter )|l] y [GetTrait('fickle').GetName( GetNullCharacter )|l]"
 agent_bookkeeper: "Contable"
 agent_bookkeeper_i: "[success_chance_max_i]"
 agent_bookkeeper_desc: "#WEAK ¿Las sumas? Sí, coinciden. Por supuesto, por supuesto…#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('scholar').GetName( GetNullCharacter )|l] y [GetTrait('theologian').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('arbitrary').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_bailiff: "Alguacil"
 agent_bailiff_i: "[success_chance_max_i]"
 agent_bailiff_desc: "#WEAK No nos corresponde a nosotros decidir qué es correcto, sino de hacer cumplir lo que está escrito.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('just').GetName( GetNullCharacter )|l] y [GetTrait('overseer').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('content').GetName( GetNullCharacter )|l] y [GetTrait('shy').GetName( GetNullCharacter )|l]"
 agent_draughtsman: "Delineante"
 agent_draughtsman_i: "[success_chance_max_i]"
 agent_draughtsman_desc: "#WEAK Un arquitecto de máquinas, un ingeniero extraordinario que puede hacer realidad cualquiera de tus ideas… Al menos, sobre el papel.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|E] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('architect').GetName( GetNullCharacter )|l] y [GetTrait('journaller').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('content').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_outcast: "Paria"
 agent_outcast_i: "[success_chance_max_i]"
 agent_outcast_desc: "#WEAK Un paria puede ser un gran informador; después de todo, ¿quién se pregunta por qué un pobre diablo languidece en las sombras, o cómo elige un pedigüeño bajo qué ventana situarse?#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|E] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('humble').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('ambitious').GetName( GetNullCharacter )|l]"
 agent_wrangler: "Domador"
 agent_wrangler_i: "[success_chance_max_i]"
 agent_wrangler_desc.flavour: "#WEAK Tranquilizar e intimidar a un animal, sometiéndolo a tu voluntad es un arte; a ser posible antes de que nos haga picadillo.#!"
 agent_wrangler_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('diplomat').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('forgiving').GetName( GetNullCharacter )|l]"
 agent_wrangler_desc: "$agent_wrangler_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE][success_chance_max_i]\n$agent_wrangler_desc.requirements$"
 agent_wrangler_speed: "$agent_wrangler$"
 agent_wrangler_speed_i: "[scheme_speed_i]"
 agent_wrangler_speed_desc: "$agent_wrangler_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_wrangler_desc.requirements$"
 agent_devotee: "Devoto"
 agent_devotee_i: "[success_chance_max_i]"
 agent_devotee_desc: "#WEAK ¿Habéis oído hablar de mi líder, mi señor audaz y justo? ¿De mi soberano benevolente? Allá donde va, yo le sigo.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('eccentric').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] e [GetTrait('callous').GetName( GetNullCharacter )|l]"
 agent_alchemist: "Alquimista"
 agent_alchemist_i: "[success_chance_max_i]"
 agent_alchemist_desc: "#WEAK ¡Este mundo no es sino un conjunto de sustancias extrañas! ¡Un vórtice de fuerzas misteriosas! Con conocimiento, la misma creación puede estar a nuestras órdenes…#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_physician').GetName( GetNullCharacter )|l] y [GetTrait('eccentric').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('content').GetName( GetNullCharacter )|l] y [GetTrait('cynical').GetName( GetNullCharacter )|l]"
 #################################################
 #Secrecy Agents
 agent_lookout: "Vigía"
 agent_lookout_i: "[secrecy_i]"
 agent_lookout_desc.flavour: "#WEAK Un par de manos para hacer el trabajo sucio no sirven de nada sin un par de ojos que vigilen.#!"
 agent_lookout_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [martial|lE] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('patient').GetName( GetNullCharacter )|l] y [GetTrait('paranoid').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('impatient').GetName( GetNullCharacter )|l] y [GetTrait('trusting').GetName( GetNullCharacter )|l]"
 agent_lookout_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$agent_lookout_desc.requirements$"
 agent_lookout_success: "$agent_lookout$"
 agent_lookout_success_i: "[success_chance_max_i]"
 agent_lookout_success_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$agent_lookout_desc.requirements$"
 agent_lookout_speed: "$agent_lookout$"
 agent_lookout_speed_i: "[scheme_speed_i]"
 agent_lookout_speed_desc: "$agent_lookout_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_lookout_desc.requirements$"
 agent_alibi: "Coartador"
 agent_alibi_i: "[secrecy_i]"
 agent_alibi_desc: "#WEAK ¡Absurdo! Disfruté de su compañía toda la velada, os lo puedo jurar. Sabéis que mi palabra es de fiar.#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('loyal').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('disloyal').GetName( GetNullCharacter )|l]"
 agent_justiciar: "Justiciar"
 agent_justiciar_i: "[secrecy_i]"
 agent_justiciar_desc.flavour: "#WEAK Un conocimiento de la ley y la reputación de hacerla cumplir con justicia es un rasgo admirable, si bien seco.#!"
 agent_justiciar_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('just').GetName( GetNullCharacter )|l] y [GetTrait('honest').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('arbitrary').GetName( GetNullCharacter )|l] y [GetTrait('deceitful').GetName( GetNullCharacter )|l]"
 agent_justiciar_desc: "#WEAK $agent_justiciar_desc.flavour$#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$agent_justiciar_desc.requirements$"
 agent_justiciar_speed: "$agent_justiciar$"
 agent_justiciar_speed_i: "[scheme_speed_i]"
 agent_justiciar_speed_desc: "$agent_justiciar_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_justiciar_desc.requirements$"
 agent_decoy: "Señuelo"
 agent_decoy_i: "[secrecy_i]"
 agent_decoy_desc: "#WEAK Una copa volcada, un chiste oportuno, un impulsivo desafío a un duelo. Los ojos se ven atraídos a otro lugar y nadie sospecha de que la auténtica jugada se desarrolla entre las sombras.#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] y [diplomacy|lE]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('eccentric').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('lazy').GetName( GetNullCharacter )|l] y [GetTrait('content').GetName( GetNullCharacter )|l]"
 #################################################
 #Speed Agents
 agent_infiltrator: "Infiltrado"
 agent_infiltrator_i: "[scheme_speed_i]"
 agent_infiltrator_desc: "#WEAK Un pasador sin cerrar, un guardia demasiado resacoso para patrullar, un mapa dibujado a mano justo al otro lado de las murallas… Todo cortesía de una amistad en el interior.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_footpad: "Ratero"
 agent_footpad_i: "[scheme_speed_i]"
 agent_footpad_desc: "#WEAK Una bolsa, una garganta, una ingle… Hay muchas cosas a las que se puede clavar una daga en un callejón, si se elige bien el momento.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [prowess|lE] [prowess_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('calm').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('wrathful').GetName( GetNullCharacter )|l]"
 agent_socialite: "Persona de mundo"
 agent_socialite_i: "[scheme_speed_i]"
 agent_socialite_desc: "#WEAK Un brindis, mis señores y damas, ¡por una buena amistad mía a la que me gustaría que tuvierais en tanta consideración como yo!#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i], [intrigue|lE] [intrigue_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('arrogant').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('humble').GetName( GetNullCharacter )|l]"
 agent_gabbler: "Charlatán"
 agent_gabbler_i: "[scheme_speed_i]"
 agent_gabbler_desc.flavour: "#WEAK Hablar durante una hora sin decir nada es todo un arte.#!"
 agent_gabbler_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('gregarious').GetName( GetNullCharacter )|l] y [GetTrait('fickle').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('humble').GetName( GetNullCharacter )|l]"
 agent_gabbler_desc: "$agent_gabbler_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_gabbler_desc.requirements$"
 agent_gabbler_secrecy: "$agent_gabbler$"
 agent_gabbler_secrecy_i: "[secrecy_i]"
 agent_gabbler_secrecy_desc: "$agent_gabbler_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$agent_gabbler_desc.requirements$"
 agent_cleric: "Clérigo"
 agent_cleric_i: "[scheme_speed_i]"
 agent_cleric_desc.flavour: "#WEAK La fe exige fuego igual que la tierra ansía la lluvia. Pueden existir por separado, pero aquella es más pobre por ello.#!"
 agent_cleric_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('zealous').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('cynical').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_cleric_desc: "$agent_cleric_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_cleric_desc.requirements$"
 agent_cleric_success: "$agent_cleric$"
 agent_cleric_success_i: "[success_chance_max_i]"
 agent_cleric_success_desc: "$agent_cleric_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$agent_cleric_desc.requirements$"
 agent_theologian: "Teólogo"
 agent_theologian_i: "[scheme_speed_i]"
 agent_theologian_desc.flavour: "#WEAK La religión tiene más que simple pasión: retórica, resolución y pensamiento innovador son el corazón y el alma del conocimiento.#!"
 agent_theologian_desc.requirements: "$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('just').GetName( GetNullCharacter )|l] y [GetTrait('stubborn').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('arbitrary').GetName( GetNullCharacter )|l] y [GetTrait('fickle').GetName( GetNullCharacter )|l]"
 agent_theologian_desc: "$agent_theologian_desc.flavour$\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$agent_theologian_desc.requirements$"
 agent_theologian_success: "$agent_theologian$"
 agent_theologian_success_i: "[success_chance_max_i]"
 agent_theologian_success_desc: "$agent_theologian_desc.flavour$\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$agent_theologian_desc.requirements$"
 agent_herald: "Heraldo"
 agent_herald_i: "[scheme_speed_i]"
 agent_herald_desc: "#WEAK Un buen heraldo es brioso, empático y atrevido hasta decir basta.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('arrogant').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('humble').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_drillmaster: "Instructor"
 agent_drillmaster_i: "[scheme_speed_i]"
 agent_drillmaster_desc: "#WEAK Recordad: nos entrenamos lo mejor que podemos para poder luchar cuando peor estemos.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [Concept('martial', 'marcialidad' )|E] [martial_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('diligent').GetName( GetNullCharacter )|l] y [GetTrait('patient').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('content').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_tracker: "Rastreador"
 agent_tracker_i: "[scheme_speed_i]"
 agent_tracker_desc: "#WEAK El barro aún está húmedo donde pisó ese idiota; ¡vamos, no puede llevarnos más de una hora de ventaja!#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [Concept('martial', 'marcialidad' )|E] [martial_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('lifestyle_traveler').GetName( GetNullCharacter )|l] y [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('impatient').GetName( GetNullCharacter )|l] y [GetTrait('lazy').GetName( GetNullCharacter )|l]"
 agent_planner: "Planificador"
 agent_planner_i: "[scheme_speed_i]"
 agent_planner_desc: "#WEAK Ser capaz de crear un plan cuidadosamente es una cosa, pero la diferencia entre un buen planificador y un experto es sencilla: cuando las cosas salen mal, el experto puede improvisar.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('architect').GetName( GetNullCharacter )|l] y [GetTrait('paranoid').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('lazy').GetName( GetNullCharacter )|l] y [GetTrait('profligate').GetName( GetNullCharacter )|l]"
 agent_supplier: "Proveedor"
 agent_supplier_i: "[scheme_speed_i]"
 agent_supplier_desc: "#WEAK Contactos, coordinación y astucia son necesarios para sobresalir como comerciante. La logística combina los tres aspectos.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [stewardship|lE] [stewardship_i] y [diplomacy|lE] [diplomacy_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('avaricious').GetName( GetNullCharacter )|l] y [GetTrait('overseer').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('shy').GetName( GetNullCharacter )|l] y [GetTrait('stubborn').GetName( GetNullCharacter )|l]"
 #Political Scheme Agents
 scheme_agent_aptitude.scaled_house_power_score: "[powerful_family_rating|E] escalada"
 agent_intermediary: "Intermediario"
 agent_intermediary_i: "[success_chance_max_i]"
 agent_intermediary_desc: "$agent_diplomat_desc$"
 agent_proponent: "Valedor"
 agent_proponent_i: "[success_chance_max_i]"
 agent_proponent_desc: "#WEAK Alguien que promocione en alto y orgullosamente tus logros —sean reales o no— hace maravillas en la reputación.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('gregarious').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('shy').GetName( GetNullCharacter )|l]"
 agent_sycophant: "Adulador"
 agent_sycophant_i: "[success_chance_max_i]"
 agent_sycophant_desc: "#WEAK Un halago nunca falla con los poderosos. Las cortesías elaboradas con sumo cuidado y el lisonjeo táctico, menos todavía.#!\n$EFFECT_LIST_BULLET$ Proporciona [scheme_potential|lE] [success_chance_max_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('stubborn').GetName( GetNullCharacter )|l] y [GetTrait('deceitful').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('honest').GetName( GetNullCharacter )|l] y [GetTrait('humble').GetName( GetNullCharacter )|l]"
 agent_political_socialite: "Persona de mundo"
 agent_political_socialite_i: "[scheme_speed_i]"
 agent_political_socialite_desc: "$agent_socialite_desc$"
 agent_bureaucrat: "Burócrata"
 agent_bureaucrat_i: "[scheme_speed_i]"
 agent_bureaucrat_desc: "#WEAK Conocer el proceso debido y el modo correcto de rellenar formularios da oportunidades desaforadas para la fraudulencia creativa.#!\n$EFFECT_LIST_BULLET$ Reduce la [scheme_speed|lE] [scheme_speed_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('architect').GetName( GetNullCharacter )|l] y [GetTrait('paranoid').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('lazy').GetName( GetNullCharacter )|l] e [GetTrait('impatient').GetName( GetNullCharacter )|l]"
 agent_bureaucrat_title: "$agent_bureaucrat$"
 agent_bureaucrat_title_i: "$agent_bureaucrat_i$"
 agent_bureaucrat_title_desc: "$agent_bureaucrat_desc$"
 agent_courtesan: "Cortesana"
 agent_courtesan_i: "[secrecy_i]"
 agent_courtesan_desc: "#WEAK Uno creería que a estas alturas los más grandes y mejores habrían aprendido a tener cuidado con a quién le sueltan secretos. Pues no.#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$EFFECT_LIST_BULLET$ Necesita [diplomacy|lE] [diplomacy_i] e [intrigue|lE] [intrigue_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('beauty_good_3').GetName( GetNullCharacter )|l] y [GetTrait('lustful').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('beauty_bad_3').GetName( GetNullCharacter )|l] y [GetTrait('chaste').GetName( GetNullCharacter )|l]"
 agent_amanuensis: "Amanuense"
 agent_amanuensis_i: "[secrecy_i]"
 agent_amanuensis_desc: "#WEAK Un secretario siempre está ahí, siempre desapercibido, siempre garabateando una cosa u otra en un rincón…#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$EFFECT_LIST_BULLET$ Necesita [learning|lE] [learning_i] y [stewardship|lE] [stewardship_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('paranoid').GetName( GetNullCharacter )|l] y [GetTrait('diligent').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('lazy').GetName( GetNullCharacter )|l] y [GetTrait('profligate').GetName( GetNullCharacter )|l]"
 agent_eunuch_speed: "Eunuco"
 agent_eunuch_speed_i: "[secrecy_i]"
 agent_eunuch_speed_desc: "#WEAK Silencioso como el desplazamiento de la luna, se mueve por los salones marmóreos y es guardián de secretos en una tierra donde las palabras son oro. A la sombra de emperadores, susurra, dando forma al imperio con nada más que el más suave de los murmullos.#!\n$EFFECT_LIST_BULLET$ Proporciona [secrecy|lE] [secrecy_i]\n$EFFECT_LIST_BULLET$ Necesita [intrigue|lE] [intrigue_i] y [learning|lE] [learning_i]\n$EFFECT_LIST_BULLET$ Se #P beneficia#! de [traits|lE] como [GetTrait('deceitful').GetName( GetNullCharacter )|l] y [GetTrait('patient').GetName( GetNullCharacter )|l]\n$EFFECT_LIST_BULLET$ Le #N perjudican#! [traits|lE] como [GetTrait('compassionate').GetName( GetNullCharacter )|l] y [GetTrait('honest').GetName( GetNullCharacter )|l]"
